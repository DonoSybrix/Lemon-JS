{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///Lemon.min.js","webpack:///webpack/bootstrap bf7199879726bab21f61","webpack:///./src/Main.js","webpack:///./src/BlendMode.js","webpack:///./src/Camera.js","webpack:///./~/gl-matrix/src/gl-matrix.js","webpack:///./~/gl-matrix/src/gl-matrix/common.js","webpack:///./~/gl-matrix/src/gl-matrix/mat2.js","webpack:///./~/gl-matrix/src/gl-matrix/mat2d.js","webpack:///./~/gl-matrix/src/gl-matrix/mat3.js","webpack:///./~/gl-matrix/src/gl-matrix/mat4.js","webpack:///./~/gl-matrix/src/gl-matrix/quat.js","webpack:///./~/gl-matrix/src/gl-matrix/vec3.js","webpack:///./~/gl-matrix/src/gl-matrix/vec4.js","webpack:///./~/gl-matrix/src/gl-matrix/vec2.js","webpack:///./src/Color.js","webpack:///./src/Lights/DirectionalLight.js","webpack:///./src/Lights/Light.js","webpack:///./src/Scene/Node.js","webpack:///./src/Transformable.js","webpack:///./src/StateBlock.js","webpack:///./src/Loaders/FileLoader.js","webpack:///./src/Geometry.js","webpack:///./src/ContextResource.js","webpack:///./src/VertexFormat.js","webpack:///./src/Material/Material.js","webpack:///./src/Material/Pass.js","webpack:///./src/Types.js","webpack:///./src/Objects/Mesh.js","webpack:///./src/Objects/Drawable.js","webpack:///./src/Renderers/Commands/MeshCommand.js","webpack:///./src/Program.js","webpack:///./src/Renderers/Commands/RenderCommand.js","webpack:///./src/Objects/Model.js","webpack:///./src/Loaders/ModelLoader.js","webpack:///./src/Extra/ProgramLibrary.js","webpack:///./src/Textures/Texture.js","webpack:///./src/Textures/TextureInterface.js","webpack:///./src/Image.js","webpack:///./src/Lights/PointLight.js","webpack:///./src/Extra/PostEffect.js","webpack:///./src/Renderers/RenderTexture.js","webpack:///./src/Renderers/RenderTarget.js","webpack:///./src/Context.js","webpack:///./src/Renderers/RenderTask.js","webpack:///./src/Renderers/WebGL/RenderWebGL.js","webpack:///./src/Renderers/WebGL/Cache.js","webpack:///./src/Renderers/WebGL/Instances.js","webpack:///./src/Renderers/RenderAPI.js","webpack:///./src/Textures/TextureCube.js","webpack:///./src/Textures/TextureVideo.js","webpack:///./src/Renderers/WebGL/WebGL.js","webpack:///./src/Objects/Sprite.js","webpack:///./src/Renderers/Commands/SpriteCommand.js","webpack:///./src/Renderers/RenderCanvas.js","webpack:///./src/Scene/Scene.js","webpack:///./src/Objects/Skybox.js","webpack:///./src/Renderers/Commands/SkyboxCommand.js","webpack:///./src/Lights/SpotLight.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_BlendMode","_Camera","_Color","_DirectionalLight","_StateBlock","_FileLoader","_Geometry","_Material","_Mesh","_Model","_ModelLoader","_Pass","_PointLight","_PostEffect","_Program","_ProgramLibrary","_RenderCanvas","_RenderTexture","_Scene","_Skybox","_SpotLight","_Sprite","_Texture","_TextureCube","_TextureVideo","_Transformable","_Types","_VertexFormat","BlendMode","Camera","Color","DirectionalLight","DrawingMode","FileLoader","Geometry","Material","Mesh","Model","ModelLoader","Pass","PointLight","PostEffect","Program","ProgramLibrary","RenderCanvas","RenderTexture","Scene","Skybox","SpotLight","Sprite","Texture","TextureCube","TextureVideo","Transformable","Type","VertexFormat","VertexElement","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","value","mode","alphaSourceFactor","Factor","One","alphaDestinationFactor","OneMinusSourceAlpha","alphaEquation","Equation","Add","colorSourceFactor","SourceAlpha","colorDestinationFactor","colorEquation","setMode","Mode","Alpha","Multiply","DestinationColor","None","Zero","blendMode","DestinationAlpha","OneMinusDestinationAlpha","OneMinusDestinationColor","OneMinusSourceColor","SourceColor","Subtract","glMatrix","type","arguments","undefined","Perspective","direction","vec3","create","fov","limits","vec2","fromValues","matrixProjection","mat4","matrixView","matrixViewNeedUpdate","matrixViewProjection","matrixViewProjectionNeedUpdate","position","ratio","rotation","quat","viewport","vec4","zoomScale","setType","x","y","z","set","yaw","pitch","multiply","q1","q2","yawQuat","pitchQuat","setAxisAngle","d","perspective","toRadian","ortho","min","max","w","h","setRatio","zoomValue","lookAt","getProjectionMatrix","getViewMatrix","Orthographic","mat2","mat2d","mat3","EPSILON","ARRAY_TYPE","Float32Array","Array","RANDOM","Math","random","setMatrixArrayType","GLMAT_ARRAY_TYPE","degree","PI","a","out","clone","copy","identity","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","b","b0","b1","b2","b3","mul","rotate","rad","s","sin","cos","scale","v","v0","v1","fromRotation","fromScaling","str","frob","sqrt","pow","LDU","L","D","U","aa","ab","ac","ad","atx","aty","a4","a5","b4","b5","translate","fromTranslation","fromMat4","a01","a02","a12","a00","a10","a11","a20","a21","a22","b01","b11","b21","b00","b02","b10","b12","b20","b22","fromMat2d","fromQuat","q","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","axis","t","len","abs","rotateX","rotateY","rotateZ","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","o","ox","oy","oz","frustum","left","right","bottom","top","near","far","rl","tb","nf","fovy","aspect","f","tan","perspectiveFromFieldOfView","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","lr","bt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","rotationTo","tmpvec3","xUnitVec3","yUnitVec3","dot","cross","normalize","setAxes","matr","view","fromMat3","add","ax","ay","az","aw","bx","by","bz","bw","calculateW","lerp","slerp","omega","cosom","sinom","scale0","scale1","acos","sqlerp","temp1","temp2","invDot","conjugate","squaredLength","sqrLen","fRoot","fTrace","j","k","subtract","sub","divide","div","scaleAndAdd","distance","dist","squaredDistance","sqrDist","negate","inverse","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","r","zScale","transformMat4","transformMat3","transformQuat","qx","qy","qz","qw","ix","iy","iz","iw","forEach","vec","stride","offset","count","fn","arg","l","angle","tempA","tempB","cosine","transformMat2","transformMat2d","g","color","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","constructor","setPrototypeOf","__proto__","_Light2","_Light","_this","getPrototypeOf","Light","_Node2","_Node","ambient","diffuse","specular","renderTarget","getRenderAPI","bindLight","Node","_Transformable2","name","children","parent","node","removeChild","push","child","findChild","index","indexOf","splice","deltaTime","parentUpdated","parentMatrix","getTransformationMatrix","computeTransformationMatrix","matrix","normalMatrix","origin","rotationMatrix","needTransformUpdate","xAxis","yAxis","zAxis","setRotationFromMatrix","m3","quaternion","forceUpdate","StencilOperation","StencilFunction","FaceCulling","DepthFunction","StateBlock","depthFunction","Less","depthWrite","depthTest","drawingMode","Triangles","faceCulling","Back","stencilFunction","stencilReference","stencilMask","stencilTest","stencilWrite","stencilTestFail","Keep","stencilDepthTestFail","stencilSuccess","state","isEqual","Never","Equal","LessEqual","Greater","NotEqual","GreaterEqual","Always","Points","Lines","LinesStrip","LinesLoop","TrianglesStrip","TrianglesFan","Front","Replace","Increment","Decrement","Invert","IncrementWrap","DecrementWrap","filePath","callback","userData","reader","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","send","_ContextResource2","_ContextResource","colors","indices","normals","positions","uvs","vertexFormat","setStreamAsWaitingUpdate","Usage","Uint16Array","setIndicesAsWaitingUpdate","Normal","Position","UVS","width","height","depth","geometry","format","Float","setVertexFormat","setPositions","setColors","setTextureUVs","setNormals","setIndices","ContextResource","UID","globalID","usage","stream","StreamType","Static","Dynamic","Stream","Byte","Int","Short","Tangent","elements","streamType","streamStride","streamNeedUpdate","indicesNeedUpdate","element","compute","size","previousStream","sort","activeTechnique","techniques","createTechnique","techniqueIndex","pass","passIndex","material","createPass","PassParameter","_StateBlock2","parameters","Bool","Matrix","Texture2D","u_Byte","u_Short","u_Int","_Drawable2","_MeshCommand","_Drawable","program","task","getActiveTask","getActiveTechnique","passCount","getPassCount","addCommand","MeshCommand","getPass","getNormalMatrix","getIndexCount","Drawable","apply","draw","_RenderCommand2","_RenderCommand","modelMatrix","startVertex","endVertex","renderAPI","programCode","setProgram","setUniform","getActiveCamera","getViewProjectionMatrix","applyStateBlock","getParameters","slot","parameter","bindTexture","setGeometry","drawIndexedPrimitives","RenderCommand","ProgramElement","attributes","sources","uniforms","vertexFile","fragmentFile","_this2","load","data","vertexSource","fragmentSource","location","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","getter","meshes","loadFromFile","updated","model","folder","replace","parseJSON","relativePath","obj","JSON","parse","materials","properties","texture","semantic","mesh","meshData","vertices","texturecoords","numuvcomponents","faces","materialindex","setMaterial","programs","vertexShaderFile","fragmentShaderFile","defines","chunkPatterns","cache","ready","chunkCallback","chunkData","chunks","tryUpdateWaitingPrograms","programName","getSources","match","missingChunkCount","chunk","chunkPath","substring","lastIndexOf","folderPath","Date","getTime","result","replaceChunks","fillProgram","addDefines","Target","Vertex","Fragment","loadFromData","isReady","source","chunkPattern","test","chunkName","defineString","_TextureInterface2","_Image","_TextureInterface","path","image","repeat","smooth","Img","textureSize","getSize","TextureInterface","mipmap","Image","pixels","Status","Unload","onload","Loaded","src","Uint8Array","Loading","constant","linear","quadratic","_SpriteCommand","_RenderWebGL","renderApi","WebGL","getInstance","renderTexture","sprite","setCustomProgram","useDepthBuffer","userStencilBuffer","setSize","setTexture","getTextures","setTextureRect","clear","display","SpriteCommand","scene","camera","render","groupCount","getCustomProgram","_RenderTarget2","_RenderTarget","textureCount","useStencilBuffer","framebuffer","createFrameBuffer","textures","init","setRepeated","setSmooth","useMipmap","loadFromImage","initFrameBuffer","removeTasks","begin","bindFrameBuffer","RenderTarget","_Context","_RenderTask","activeTask","context","Context","tasks","execute","RenderTask","clearCache","setActiveCamera","setActiveTask","createTask","visit","domElement","options","targetID","document","getElementById","createElement","offsetWidth","offsetHeight","appendChild","getContext","antialias","antialiasing","viewportWidth","viewportHeight","current","opaqueQueue","transparentQueue","command","queue","isOpaque","_interopRequireWildcard","__esModule","newObj","hasOwnProperty","_Cache","_Instances","_RenderAPI2","_WebGL","WebGLConst","_RenderAPI","_ret","Cache","enabledVertexAttribArray","instances","Instances","initStateBlockWithDefaultValues","light","lights","framebufferID","gl","getActive","bindFramebuffer","FRAMEBUFFER","webGLBuffer","frameBuffers","isTextureVideo","needUpdate","webGLTexture","getUID","createTexture","activeTexture","TEXTURE0","TEXTURE_2D","imageSize","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","getVideoData","getImage","getData","isPOT","texParameteri","TEXTURE_WRAP_S","isRepeated","REPEAT","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","isSmoothed","LINEAR","NEAREST","min_filter","isMipmaped","LINEAR_MIPMAP_NEAREST","TEXTURE_MIN_FILTER","generateMipmap","TEXTURE_CUBE_MAP","images","getImages","TEXTURE_CUBE_MAP_POSITIVE_X","Face","Left","TEXTURE_CUBE_MAP_NEGATIVE_X","Right","TEXTURE_CUBE_MAP_POSITIVE_Y","Up","TEXTURE_CUBE_MAP_NEGATIVE_Y","Down","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","clearColor","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","identifier","frameBuffer","createFramebuffer","firstVertexIndex","vertexCount","drawElements","convertDrawingModeToConstant","UNSIGNED_SHORT","disableVertexAttribArray","drawArrays","framebufferTexture2D","COLOR_ATTACHMENT0","renderBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_STENCIL","framebufferRenderbuffer","DEPTH_STENCIL_ATTACHMENT","DEPTH_COMPONENT16","DEPTH_ATTACHMENT","stateBlock","webGLProgram","lightCount","needData","needDirection","lightsType","getAmbientColor","lightsAmbient","values","getValues","lightsData","getDiffuseColor","lightsDiffuse","getDirection","lightsDirection","getPosition","lightsPosition","getSpecularColor","lightsSpecular","activeCamera","getViewport","disable","BLEND","enable","blendEquationSeparate","convertBlendingEquationToConstant","blendFuncSeparate","convertBlendingFactorToConstant","writeTest","DEPTH_TEST","depthMask","depthFunc","convertDepthFunctionToConstant","CULL_FACE","cullFace","FRONT","BACK","buffer","bindBuffer","ELEMENT_ARRAY_BUFFER","getVertexFormat","geometryInstances","buffers","BufferData","indexBuffer","createBuffer","setIndexBuffer","isIndicesWaitingUpdate","bufferData","getIndices","STATIC_DRAW","vertexElements","getElements","vertexBuffers","setVertexBuffer","isStreamWaitingUpdate","convertStreamTypeToConstant","getStreamType","ARRAY_BUFFER","getVerticesPositions","getVerticesColors","getVerticesUVs","getVerticesNormals","console","log","programID","createProgram","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","attachShader","bindAttribLocation","linkProgram","deleteShader","activeUniforms","getProgramParameter","ACTIVE_UNIFORMS","getUniforms","uniform","getActiveUniform","finalName","arrayPos","getUniformLocation","convertConstantToShaderTypes","activeAttributes","ACTIVE_ATTRIBUTES","getAttributes","attribute","getActiveAttrib","getAttribLocation","useProgram","sendLights","getUniform","uniform2fv","uniform3fv","uniform4fv","uniform1fv","uniform3f","uniform4f","uniform2f","uniform1f","uniform2iv","uniform3iv","uniform4iv","uniform1iv","uniform3i","uniform4i","uniform2i","uniform1i","uniformMatrix4fv","uniformMatrix2fv","uniformMatrix3fv","SCISSOR_TEST","scissor","activate","writeMask","STENCIL_TEST","reference","mask","stencilFunc","convertStencilFunctionToConstant","sFail","dpFail","dppPass","stencilOp","convertStencilOperationToConstant","enableVertexAttribArray","vertexAttribPointer","convertVertexTypeToConstant","getStreamStride","factor","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","equation","FUNC_ADD","FUNC_SUBTRACT","NEVER","LESS","EQUAL","LEQUAL","GREATER","NOTEQUAL","GEQUAL","ALWAYS","POINTS","LINES","LINE_STRIP","LINE_LOOP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","operation","KEEP","REPLACE","INCR","DECR","INVERT","INCR_WRAP","DECR_WRAP","BYTE","FLOAT","INT","SHORT","DYNAMIC_DRAW","STREAM_DRAW","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","SAMPLER_CUBE","UNSIGNED_INT","RenderAPI","vao","setBlendMode","setDepthState","setFaceCulling","setStencilState","setStencilFunction","setStencilOperations","paths","loadFromFiles","addEventListener","preload","pause","play","duration","STENCIL_BUFFER_BIT","SRC_ALPHA_SATURATE","BLEND_EQUATION","BLEND_EQUATION_RGB","BLEND_EQUATION_ALPHA","FUNC_REVERSE_SUBTRACT","BLEND_DST_RGB","BLEND_SRC_RGB","BLEND_DST_ALPHA","BLEND_SRC_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND_COLOR","ARRAY_BUFFER_BINDING","ELEMENT_ARRAY_BUFFER_BINDING","BUFFER_SIZE","BUFFER_USAGE","CURRENT_VERTEX_ATTRIB","FRONT_AND_BACK","DITHER","POLYGON_OFFSET_FILL","SAMPLE_ALPHA_TO_COVERAGE","SAMPLE_COVERAGE","NO_ERROR","INVALID_ENUM","INVALID_VALUE","INVALID_OPERATION","OUT_OF_MEMORY","CW","CCW","LINE_WIDTH","ALIASED_POINT_SIZE_RANGE","ALIASED_LINE_WIDTH_RANGE","CULL_FACE_MODE","FRONT_FACE","DEPTH_RANGE","DEPTH_WRITEMASK","DEPTH_CLEAR_VALUE","DEPTH_FUNC","STENCIL_CLEAR_VALUE","STENCIL_FUNC","STENCIL_FAIL","STENCIL_PASS_DEPTH_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_REF","STENCIL_VALUE_MASK","STENCIL_WRITEMASK","STENCIL_BACK_FUNC","STENCIL_BACK_FAIL","STENCIL_BACK_PASS_DEPTH_FAIL","STENCIL_BACK_PASS_DEPTH_PASS","STENCIL_BACK_REF","STENCIL_BACK_VALUE_MASK","STENCIL_BACK_WRITEMASK","VIEWPORT","SCISSOR_BOX","COLOR_CLEAR_VALUE","COLOR_WRITEMASK","UNPACK_ALIGNMENT","PACK_ALIGNMENT","MAX_TEXTURE_SIZE","MAX_VIEWPORT_DIMS","SUBPIXEL_BITS","RED_BITS","GREEN_BITS","BLUE_BITS","ALPHA_BITS","DEPTH_BITS","STENCIL_BITS","POLYGON_OFFSET_UNITS","POLYGON_OFFSET_FACTOR","TEXTURE_BINDING_2D","SAMPLE_BUFFERS","SAMPLES","SAMPLE_COVERAGE_VALUE","SAMPLE_COVERAGE_INVERT","COMPRESSED_TEXTURE_FORMATS","DONT_CARE","FASTEST","NICEST","GENERATE_MIPMAP_HINT","DEPTH_COMPONENT","ALPHA","RGB","LUMINANCE","LUMINANCE_ALPHA","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","MAX_VERTEX_ATTRIBS","MAX_VERTEX_UNIFORM_VECTORS","MAX_VARYING_VECTORS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_IMAGE_UNITS","MAX_FRAGMENT_UNIFORM_VECTORS","SHADER_TYPE","DELETE_STATUS","LINK_STATUS","VALIDATE_STATUS","ATTACHED_SHADERS","SHADING_LANGUAGE_VERSION","CURRENT_PROGRAM","VENDOR","RENDERER","VERSION","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_LINEAR","TEXTURE","TEXTURE_BINDING_CUBE_MAP","MAX_CUBE_MAP_TEXTURE_SIZE","TEXTURE1","TEXTURE2","TEXTURE3","TEXTURE4","TEXTURE5","TEXTURE6","TEXTURE7","TEXTURE8","TEXTURE9","TEXTURE10","TEXTURE11","TEXTURE12","TEXTURE13","TEXTURE14","TEXTURE15","TEXTURE16","TEXTURE17","TEXTURE18","TEXTURE19","TEXTURE20","TEXTURE21","TEXTURE22","TEXTURE23","TEXTURE24","TEXTURE25","TEXTURE26","TEXTURE27","TEXTURE28","TEXTURE29","TEXTURE30","TEXTURE31","ACTIVE_TEXTURE","MIRRORED_REPEAT","VERTEX_ATTRIB_ARRAY_ENABLED","VERTEX_ATTRIB_ARRAY_SIZE","VERTEX_ATTRIB_ARRAY_STRIDE","VERTEX_ATTRIB_ARRAY_TYPE","VERTEX_ATTRIB_ARRAY_NORMALIZED","VERTEX_ATTRIB_ARRAY_POINTER","VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","COMPILE_STATUS","LOW_FLOAT","MEDIUM_FLOAT","HIGH_FLOAT","LOW_INT","MEDIUM_INT","HIGH_INT","RGBA4","RGB5_A1","RGB565","STENCIL_INDEX","STENCIL_INDEX8","RENDERBUFFER_WIDTH","RENDERBUFFER_HEIGHT","RENDERBUFFER_INTERNAL_FORMAT","RENDERBUFFER_RED_SIZE","RENDERBUFFER_GREEN_SIZE","RENDERBUFFER_BLUE_SIZE","RENDERBUFFER_ALPHA_SIZE","RENDERBUFFER_DEPTH_SIZE","RENDERBUFFER_STENCIL_SIZE","FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","STENCIL_ATTACHMENT","NONE","FRAMEBUFFER_COMPLETE","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_UNSUPPORTED","FRAMEBUFFER_BINDING","RENDERBUFFER_BINDING","MAX_RENDERBUFFER_SIZE","INVALID_FRAMEBUFFER_OPERATION","UNPACK_PREMULTIPLY_ALPHA_WEBGL","CONTEXT_LOST_WEBGL","UNPACK_COLORSPACE_CONVERSION_WEBGL","BROWSER_DEFAULT_WEBGL","HALF_FLOAT_OES","FRAGMENT_SHADER_DERIVATIVE_HINT_OES","VERTEX_ARRAY_BINDING_OES","UNMASKED_VENDOR_WEBGL","UNMASKED_RENDERER_WEBGL","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","TEXTURE_MAX_ANISOTROPY_EXT","MAX_TEXTURE_MAX_ANISOTROPY_EXT","rect","customProgram","spriteTexture","getTexture","isDefaultProgramLoaded","sharedProgram","spriteRect","getTextureRect","spriteSize","getBlendMode","sharedGeometry","spriteColor","getColor","createRectangle","canvas","addChild","update","getChildren","_SkyboxCommand","SkyboxCommand","skybox","toMat4","mat","viewMatrix","bindTextureCube","createCube","cutoff"],"mappings":"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","file":"Lemon.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Lemon\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Lemon\"] = factory();\n\telse\n\t\troot[\"Lemon\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Lemon\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Lemon\"] = factory();\n\telse\n\t\troot[\"Lemon\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _BlendMode = __webpack_require__(1);\n\t\n\tvar _Camera = __webpack_require__(2);\n\t\n\tvar _Color = __webpack_require__(13);\n\t\n\tvar _DirectionalLight = __webpack_require__(14);\n\t\n\tvar _StateBlock = __webpack_require__(18);\n\t\n\tvar _FileLoader = __webpack_require__(19);\n\t\n\tvar _Geometry = __webpack_require__(20);\n\t\n\tvar _Material = __webpack_require__(23);\n\t\n\tvar _Mesh = __webpack_require__(26);\n\t\n\tvar _Model = __webpack_require__(31);\n\t\n\tvar _ModelLoader = __webpack_require__(32);\n\t\n\tvar _Pass = __webpack_require__(24);\n\t\n\tvar _PointLight = __webpack_require__(37);\n\t\n\tvar _PostEffect = __webpack_require__(38);\n\t\n\tvar _Program = __webpack_require__(29);\n\t\n\tvar _ProgramLibrary = __webpack_require__(33);\n\t\n\tvar _RenderCanvas = __webpack_require__(52);\n\t\n\tvar _RenderTarget = __webpack_require__(40);\n\t\n\tvar _RenderTexture = __webpack_require__(39);\n\t\n\tvar _Scene = __webpack_require__(53);\n\t\n\tvar _Skybox = __webpack_require__(54);\n\t\n\tvar _SpotLight = __webpack_require__(56);\n\t\n\tvar _Sprite = __webpack_require__(50);\n\t\n\tvar _Texture = __webpack_require__(34);\n\t\n\tvar _TextureCube = __webpack_require__(47);\n\t\n\tvar _TextureVideo = __webpack_require__(48);\n\t\n\tvar _Transformable = __webpack_require__(17);\n\t\n\tvar _Types = __webpack_require__(25);\n\t\n\tvar _VertexFormat = __webpack_require__(22);\n\t\n\texports.BlendMode = _BlendMode.BlendMode;\n\texports.Camera = _Camera.Camera;\n\texports.Color = _Color.Color;\n\texports.DirectionalLight = _DirectionalLight.DirectionalLight;\n\texports.DrawingMode = _StateBlock.DrawingMode;\n\texports.FileLoader = _FileLoader.FileLoader;\n\texports.Geometry = _Geometry.Geometry;\n\texports.Material = _Material.Material;\n\texports.Mesh = _Mesh.Mesh;\n\texports.Model = _Model.Model;\n\texports.ModelLoader = _ModelLoader.ModelLoader;\n\texports.Pass = _Pass.Pass;\n\texports.PointLight = _PointLight.PointLight;\n\texports.PostEffect = _PostEffect.PostEffect;\n\texports.Program = _Program.Program;\n\texports.ProgramLibrary = _ProgramLibrary.ProgramLibrary;\n\texports.RenderCanvas = _RenderCanvas.RenderCanvas;\n\texports.RenderTexture = _RenderTexture.RenderTexture;\n\texports.Scene = _Scene.Scene;\n\texports.Skybox = _Skybox.Skybox;\n\texports.SpotLight = _SpotLight.SpotLight;\n\texports.Sprite = _Sprite.Sprite;\n\texports.Texture = _Texture.Texture;\n\texports.TextureCube = _TextureCube.TextureCube;\n\texports.TextureVideo = _TextureVideo.TextureVideo;\n\texports.Transformable = _Transformable.Transformable;\n\texports.Type = _Types.Type;\n\texports.VertexFormat = _VertexFormat.VertexFormat;\n\texports.VertexElement = _VertexFormat.VertexElement;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Blending\n\t *\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar BlendMode = exports.BlendMode = function () {\n\t  /**\n\t   * Constructor\n\t   *\n\t   * @param {BlendMode=} mode Mode to use, preset values.\n\t   */\n\t\n\t  function BlendMode(mode) {\n\t    _classCallCheck(this, BlendMode);\n\t\n\t    /**\n\t     * Source blending factor for the alpha channel\n\t     *\n\t     * @type {BlendMode.Factor}\n\t     * @public\n\t     */\n\t    this.alphaSourceFactor = BlendMode.Factor.One;\n\t\n\t    /**\n\t     * Destination blending factor for the alpha channel\n\t     *\n\t     * @type {BlendMode.Factor}\n\t     * @public\n\t     */\n\t    this.alphaDestinationFactor = BlendMode.Factor.OneMinusSourceAlpha;\n\t\n\t    /**\n\t     * Blending equation for the alpha channel\n\t     *\n\t     * @type {BlendMode.Equation}\n\t     * @public\n\t     */\n\t    this.alphaEquation = BlendMode.Equation.Add;\n\t\n\t    /**\n\t     * Blending color (source)\n\t     *\n\t     * @type {BlendMode.Factor}\n\t     * @public\n\t     */\n\t    this.colorSourceFactor = BlendMode.Factor.SourceAlpha;\n\t\n\t    /**\n\t     * Blending color (destination)\n\t     *\n\t     * @type {BlendMode.Factor}\n\t     * @public\n\t     */\n\t    this.colorDestinationFactor = BlendMode.Factor.OneMinusSourceAlpha;\n\t\n\t    /**\n\t     * Equation to use on source and destination color\n\t     *\n\t     * @type {BlendMode.Equation}\n\t     * @public\n\t     */\n\t    this.colorEquation = BlendMode.Equation.Add;\n\t\n\t    if (mode) this.setMode(mode);\n\t  }\n\t\n\t  /**\n\t   * Set blending mode to use: this method erase the previous configuration, be careful\n\t   *\n\t   * @param {BlendMode.Mode=} mode Mode to use, preset values\n\t   */\n\t\n\t  _createClass(BlendMode, [{\n\t    key: \"setMode\",\n\t    value: function setMode(mode) {\n\t      switch (mode) {\n\t        case BlendMode.Mode.Alpha:\n\t          {\n\t            this.colorSourceFactor = BlendMode.Factor.SourceAlpha;\n\t            this.colorDestinationFactor = BlendMode.Factor.OneMinusSourceAlpha;\n\t            this.colorEquation = BlendMode.Equation.Add;\n\t            this.alphaSourceFactor = BlendMode.Factor.One;\n\t            this.alphaDestinationFactor = BlendMode.Factor.OneMinusSourceAlpha;\n\t            this.alphaEquation = BlendMode.Equation.Add;\n\t            break;\n\t          }\n\t        case BlendMode.Mode.Add:\n\t          {\n\t            this.colorSourceFactor = BlendMode.Factor.SourceAlpha;\n\t            this.colorDestinationFactor = BlendMode.Factor.One;\n\t            this.colorEquation = BlendMode.Equation.Add;\n\t            this.alphaSourceFactor = BlendMode.Factor.One;\n\t            this.alphaDestinationFactor = BlendMode.Factor.One;\n\t            this.alphaEquation = BlendMode.Equation.Add;\n\t            break;\n\t          }\n\t        case BlendMode.Mode.Multiply:\n\t          {\n\t            this.colorSourceFactor = BlendMode.Factor.DestinationColor;\n\t            this.colorDestinationFactor = BlendMode.Factor.One;\n\t            this.colorEquation = BlendMode.Equation.Add;\n\t            this.alphaSourceFactor = BlendMode.Factor.One;\n\t            this.alphaDestinationFactor = BlendMode.Factor.OneMinusSourceAlpha;\n\t            this.alphaEquation = BlendMode.Equation.Add;\n\t            break;\n\t          }\n\t        default:\n\t        case BlendMode.Mode.None:\n\t          {\n\t            this.colorSourceFactor = BlendMode.Factor.One;\n\t            this.colorDestinationFactor = BlendMode.Factor.Zero;\n\t            this.colorEquation = BlendMode.Equation.Add;\n\t            this.alphaSourceFactor = BlendMode.Factor.One;\n\t            this.alphaDestinationFactor = BlendMode.Factor.OneMinusSourceAlpha;\n\t            this.alphaEquation = BlendMode.Equation.Add;\n\t            break;\n\t          }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Check if the given BlendMode instance is equal to this one\n\t     *\n\t     * @param {BlendMode} blendMode A BlendMode instance\n\t     * @return {boolean} True if the two blend mode are equals, otherwise false\n\t     */\n\t\n\t  }, {\n\t    key: \"isEqual\",\n\t    value: function isEqual(blendMode) {\n\t      return this.alphaSourceFactor == blendMode.alphaSourceFactor && this.alphaDestinationFactor == blendMode.alphaDestinationFactor && this.alphaEquation == blendMode.alphaEquation && this.colorSourceFactor == blendMode.colorSourceFactor && this.colorDestinationFactor == blendMode.colorDestinationFactor && this.colorEquation == blendMode.colorEquation;\n\t    }\n\t  }]);\n\t\n\t  return BlendMode;\n\t}();\n\t\n\t/**\n\t * Default modes availables\n\t *\n\t * @enum {number}\n\t */\n\t\n\tBlendMode.Mode = { Alpha: 0, Add: 1, Multiply: 2, None: 3 };\n\t\n\t/**\n\t * Blend factors\n\t *\n\t * @enum {number}\n\t */\n\tBlendMode.Factor = { DestinationAlpha: 0,\n\t  DestinationColor: 1,\n\t  One: 2,\n\t  OneMinusDestinationAlpha: 3,\n\t  OneMinusDestinationColor: 4,\n\t  OneMinusSourceAlpha: 5,\n\t  OneMinusSourceColor: 6,\n\t  SourceAlpha: 7,\n\t  SourceColor: 8,\n\t  Zero: 9\n\t};\n\t\n\t/**\n\t * Blend equations\n\t *\n\t * @enum {number}\n\t */\n\tBlendMode.Equation = { Add: 0, Subtract: 1 };\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar glMatrix = __webpack_require__(3);\n\t\n\t/**\n\t * A camera\n\t *\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar Camera = exports.Camera = function () {\n\t  /**\n\t   * Constructor\n\t   *\n\t   * @param {Camera.Type=} type Type of camera\n\t   */\n\t\n\t  function Camera() {\n\t    var type = arguments.length <= 0 || arguments[0] === undefined ? Camera.Type.Perspective : arguments[0];\n\t\n\t    _classCallCheck(this, Camera);\n\t\n\t    /**\n\t     * Camera's direction\n\t     *\n\t     * @type {glMatrix.vec3}\n\t     * @private\n\t     */\n\t    this.direction = glMatrix.vec3.create();\n\t\n\t    /**\n\t     * Field of view\n\t     *\n\t     * @type {number}\n\t     * @private\n\t     */\n\t    this.fov = 45.0;\n\t\n\t    /**\n\t     * Visibility limits: min (x) and max (y)\n\t     *\n\t     * @type {glMatrix.vec2}\n\t     * @private\n\t     */\n\t    this.limits = glMatrix.vec2.fromValues(0.1, 100.0);\n\t\n\t    /**\n\t     * Projection matrix\n\t     *\n\t     * @type {glMatrix.mat4}\n\t     * @private\n\t     */\n\t    this.matrixProjection = glMatrix.mat4.create();\n\t\n\t    /**\n\t     * View matrix\n\t     *\n\t     * @type {glMatrix.mat4}\n\t     * @private\n\t     */\n\t    this.matrixView = glMatrix.mat4.create();\n\t\n\t    /**\n\t     * Indicate if the view matrix need an update\n\t     *\n\t     * @type {boolean}\n\t     * @private\n\t     */\n\t    this.matrixViewNeedUpdate = true;\n\t\n\t    /**\n\t     * Resulting matrix with camera's transformations\n\t     *\n\t     * @type {glMatrix.mat4}\n\t     * @private\n\t     */\n\t    this.matrixViewProjection = glMatrix.mat4.create();\n\t\n\t    /**\n\t     * Indicate if the view matrix need an update\n\t     *\n\t     * @type {boolean}\n\t     * @private\n\t     */\n\t    this.matrixViewProjectionNeedUpdate = true;\n\t\n\t    /**\n\t     * Camera's position\n\t     *\n\t     * @type {glMatrix.vec3}\n\t     * @private\n\t     */\n\t    this.position = glMatrix.vec3.fromValues(0.0, 0.0, 3.0);\n\t\n\t    /**\n\t     * Ratio: 16/9, 4/3, …\n\t     *\n\t     * @type {number}\n\t     * @private\n\t     */\n\t    this.ratio = 16.0 / 9.0;\n\t\n\t    /**\n\t     * Camera's rotation\n\t     *\n\t     * @type {glMatrix.quat}\n\t     * @private\n\t     */\n\t    this.rotation = glMatrix.quat.fromValues(0.0, 0.0, 0.0, 1.0);\n\t\n\t    /**\n\t     * Type of camera\n\t     *\n\t     * @type {Camera.Type}\n\t     * @private\n\t     */\n\t    this.type = type;\n\t\n\t    /**\n\t     * View size with x, y, w and h values\n\t     *\n\t     * @type {glMatrix.vec4}\n\t     * @private\n\t     */\n\t    this.viewport = glMatrix.vec4.create();\n\t\n\t    /**\n\t     * Zoom\n\t     *\n\t     * @type {number}\n\t     * @default 1.0\n\t     * @private\n\t     */\n\t    this.zoomScale = 1.0;\n\t\n\t    // Force projection matrix computation\n\t    this.setType(this.type);\n\t  }\n\t\n\t  /**\n\t   * Set camera's direction: Point to look at\n\t   *\n\t   * @param {number} x Direction on X\n\t   * @param {number} y Direction on Y\n\t   * @param {number} z Direction on Z\n\t   */\n\t\n\t  _createClass(Camera, [{\n\t    key: 'lookAt',\n\t    value: function lookAt(x, y, z) {\n\t      glMatrix.vec3.set(this.direction, x, y, z);\n\t      this.matrixViewNeedUpdate = true;\n\t    }\n\t\n\t    /**\n\t     * Set camera's position\n\t     *\n\t     * @param {number} x Position on X\n\t     * @param {number} y Position on Y\n\t     * @param {number} z Position on Z\n\t     */\n\t\n\t  }, {\n\t    key: 'move',\n\t    value: function move(x, y, z) {\n\t      glMatrix.vec3.set(this.position, x, y, z);\n\t      this.matrixViewNeedUpdate = true;\n\t    }\n\t\n\t    /**\n\t     * Set camera's rotation\n\t     *\n\t     * @param {number} yaw A floating value\n\t     * @param {number} pitch A floating value\n\t     */\n\t\n\t  }, {\n\t    key: 'rotate',\n\t    value: function rotate(yaw, pitch) {\n\t      var yawQuat = glMatrix.quat.fromValues(0.0, 0.0, 0.0, 1.0);\n\t      var pitchQuat = glMatrix.quat.fromValues(0.0, 0.0, 0.0, 1.0);\n\t\n\t      glMatrix.quat.setAxisAngle(yawQuat, [0.0, 1.0, 0.0], yaw);\n\t      glMatrix.quat.setAxisAngle(pitchQuat, [1.0, 0.0, 0.0], -pitch);\n\t      glMatrix.quat.multiply(this.rotation, yawQuat, pitchQuat);\n\t\n\t      /**\n\t       * Multiply two vec4\n\t       *\n\t       * @param {quat} q1 First vector\n\t       * @param {quat} q2 Second vector\n\t       */\n\t      function multiply(q1, q2) {\n\t        return [q1[3] * q2[0] + q1[0] * q2[3] + q1[2] * q2[1] - q1[1] * q2[2], q1[3] * q2[1] + q1[1] * q2[3] + q1[0] * q2[2] - q1[2] * q2[0], q1[3] * q2[2] + q1[2] * q2[3] + q1[1] * q2[0] - q1[0] * q2[1], q1[3] * q2[3] + q1[0] * q2[0] + q1[1] * q2[1] - q1[2] * q2[2]];\n\t      }\n\t\n\t      var d = multiply(this.rotation, [this.direction[0], this.direction[1], this.direction[2], 0.0]);\n\t      var p = multiply(this.rotation, [this.position[0], this.position[1], this.position[2], 0.0]);\n\t\n\t      glMatrix.vec3.set(this.direction, d[0], d[1], d[2]);\n\t      glMatrix.vec3.set(this.position, p[0], p[1], p[2]);\n\t\n\t      this.matrixViewNeedUpdate = true;\n\t    }\n\t\n\t    /**\n\t     * Set field of view\n\t     *\n\t     * @param {number} value Value in degrees (default: 45)\n\t     */\n\t\n\t  }, {\n\t    key: 'setFieldOfView',\n\t    value: function setFieldOfView(value) {\n\t      this.fov = value;\n\t      this.setType(this.type); // Force projection matrix update\n\t    }\n\t\n\t    /**\n\t     * Set screen's ratio\n\t     *\n\t     * @param {number} ratio Ratio to assign (4/3, 16/9, …)\n\t     */\n\t\n\t  }, {\n\t    key: 'setRatio',\n\t    value: function setRatio(ratio) {\n\t      this.ratio = ratio;\n\t      this.setType(this.type); // Force projection matrix update\n\t    }\n\t\n\t    /**\n\t     * Set camera's distances\n\t     *\n\t     * @param {Camera.Type} type Type asked, for 2D you should use \"Orthographic\"\n\t     */\n\t\n\t  }, {\n\t    key: 'setType',\n\t    value: function setType(type) {\n\t      // Save type\n\t      this.type = type;\n\t\n\t      // Compute projection matrix\n\t      if (type == Camera.Type.Perspective) glMatrix.mat4.perspective(this.matrixProjection, glMatrix.glMatrix.toRadian(this.fov * this.zoomScale), this.ratio, this.limits[0], this.limits[1]);else {\n\t        glMatrix.mat4.ortho(this.matrixProjection, -1.5 * this.ratio * this.zoomScale, +1.5 * this.ratio * this.zoomScale, -1.5 * this.zoomScale, +1.5 * this.zoomScale, this.limits[0], this.limits[1]);\n\t      }\n\t\n\t      this.matrixViewProjectionNeedUpdate = true;\n\t    }\n\t\n\t    /**\n\t     * Set camera's distances\n\t     *\n\t     * @param {number} min Minimum distance to show\n\t     * @param {number} max Maximum distance to show\n\t     */\n\t\n\t  }, {\n\t    key: 'setViewDistances',\n\t    value: function setViewDistances(min, max) {\n\t      glMatrix.vec2.set(this.limits, min, max);\n\t      this.setType(this.type); // Force projection matrix update\n\t    }\n\t\n\t    /**\n\t     * Set camera's viewport\n\t     *\n\t     * @param {number} x View start position on X\n\t     * @param {number} y View start position on Y\n\t     * @param {number} w View size on X\n\t     * @param {number} h View size on Y\n\t     */\n\t\n\t  }, {\n\t    key: 'setViewport',\n\t    value: function setViewport(x, y, w, h) {\n\t      glMatrix.vec4.set(this.viewport, x, y, w, h);\n\t      this.setRatio(w / h);\n\t    }\n\t\n\t    /**\n\t     * Zoom\n\t     *\n\t     * @param {number} zoomValue Zoom scale to apply\n\t     */\n\t\n\t  }, {\n\t    key: 'zoom',\n\t    value: function zoom(zoomValue) {\n\t      this.zoomScale = 1.0 / zoomValue;\n\t      this.setType(this.type); // Force projection matrix update\n\t    }\n\t\n\t    /**\n\t     * Get camera's position\n\t     *\n\t     * @return {!Array.<number>} A vector with three values: x, y and z\n\t     */\n\t\n\t  }, {\n\t    key: 'getPosition',\n\t    value: function getPosition() {\n\t      return [this.position[0], this.position[1], this.position[2]];\n\t    }\n\t\n\t    /**\n\t     * Get camera's projection matrix\n\t     *\n\t     * @return {!glMatrix.mat4} A matrix\n\t     */\n\t\n\t  }, {\n\t    key: 'getProjectionMatrix',\n\t    value: function getProjectionMatrix() {\n\t      return this.matrixProjection;\n\t    }\n\t\n\t    /**\n\t     * Get camera's matrix\n\t     *\n\t     * @return {!glMatrix.mat4} A matrix\n\t     */\n\t\n\t  }, {\n\t    key: 'getViewMatrix',\n\t    value: function getViewMatrix() {\n\t      if (this.matrixViewNeedUpdate) {\n\t        glMatrix.mat4.lookAt(this.matrixView, this.position, this.direction, glMatrix.vec3.fromValues(0.0, 1.0, 0.0));\n\t        this.matrixViewNeedUpdate = false;\n\t        this.matrixViewProjectionNeedUpdate = true;\n\t      }\n\t\n\t      return this.matrixView;\n\t    }\n\t\n\t    /**\n\t     * Get camera's viewport\n\t     *\n\t     * @return {!glMatrix.vec3} A vector with four values: x, y, w and h\n\t     */\n\t\n\t  }, {\n\t    key: 'getViewport',\n\t    value: function getViewport() {\n\t      return this.viewport;\n\t    }\n\t\n\t    /**\n\t     * Get camera's matrix\n\t     *\n\t     * @return {!glMatrix.mat4} A matrix\n\t     */\n\t\n\t  }, {\n\t    key: 'getViewProjectionMatrix',\n\t    value: function getViewProjectionMatrix() {\n\t      if (this.matrixViewProjectionNeedUpdate || this.matrixViewNeedUpdate) {\n\t        glMatrix.mat4.multiply(this.matrixViewProjection, this.getProjectionMatrix(), this.getViewMatrix());\n\t        this.matrixViewProjectionNeedUpdate = false;\n\t      }\n\t\n\t      return this.matrixViewProjection;\n\t    }\n\t  }]);\n\t\n\t  return Camera;\n\t}();\n\t\n\t/**\n\t * Types\n\t *\n\t * @type {{Perspective: number, Orthographic: number}}\n\t */\n\t\n\tCamera.Type = { Perspective: 0, Orthographic: 1 };\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @fileoverview gl-matrix - High performance matrix and vector operations\n\t * @author Brandon Jones\n\t * @author Colin MacKenzie IV\n\t * @version 2.3.0\n\t */\n\t\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t// END HEADER\n\t\n\texports.glMatrix = __webpack_require__(4);\n\texports.mat2 = __webpack_require__(5);\n\texports.mat2d = __webpack_require__(6);\n\texports.mat3 = __webpack_require__(7);\n\texports.mat4 = __webpack_require__(8);\n\texports.quat = __webpack_require__(9);\n\texports.vec2 = __webpack_require__(12);\n\texports.vec3 = __webpack_require__(10);\n\texports.vec4 = __webpack_require__(11);\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\t/**\n\t * @class Common utilities\n\t * @name glMatrix\n\t */\n\tvar glMatrix = {};\n\t\n\t// Constants\n\tglMatrix.EPSILON = 0.000001;\n\tglMatrix.ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\n\tglMatrix.RANDOM = Math.random;\n\t\n\t/**\n\t * Sets the type of array used when creating new vectors and matrices\n\t *\n\t * @param {Type} type Array type, such as Float32Array or Array\n\t */\n\tglMatrix.setMatrixArrayType = function(type) {\n\t    GLMAT_ARRAY_TYPE = type;\n\t}\n\t\n\tvar degree = Math.PI / 180;\n\t\n\t/**\n\t* Convert Degree To Radian\n\t*\n\t* @param {Number} Angle in Degrees\n\t*/\n\tglMatrix.toRadian = function(a){\n\t     return a * degree;\n\t}\n\t\n\tmodule.exports = glMatrix;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tvar glMatrix = __webpack_require__(4);\n\t\n\t/**\n\t * @class 2x2 Matrix\n\t * @name mat2\n\t */\n\tvar mat2 = {};\n\t\n\t/**\n\t * Creates a new identity mat2\n\t *\n\t * @returns {mat2} a new 2x2 matrix\n\t */\n\tmat2.create = function() {\n\t    var out = new glMatrix.ARRAY_TYPE(4);\n\t    out[0] = 1;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 1;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a new mat2 initialized with values from an existing matrix\n\t *\n\t * @param {mat2} a matrix to clone\n\t * @returns {mat2} a new 2x2 matrix\n\t */\n\tmat2.clone = function(a) {\n\t    var out = new glMatrix.ARRAY_TYPE(4);\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    out[3] = a[3];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Copy the values from one mat2 to another\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the source matrix\n\t * @returns {mat2} out\n\t */\n\tmat2.copy = function(out, a) {\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    out[3] = a[3];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Set a mat2 to the identity matrix\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @returns {mat2} out\n\t */\n\tmat2.identity = function(out) {\n\t    out[0] = 1;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 1;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Transpose the values of a mat2\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the source matrix\n\t * @returns {mat2} out\n\t */\n\tmat2.transpose = function(out, a) {\n\t    // If we are transposing ourselves we can skip a few steps but have to cache some values\n\t    if (out === a) {\n\t        var a1 = a[1];\n\t        out[1] = a[2];\n\t        out[2] = a1;\n\t    } else {\n\t        out[0] = a[0];\n\t        out[1] = a[2];\n\t        out[2] = a[1];\n\t        out[3] = a[3];\n\t    }\n\t    \n\t    return out;\n\t};\n\t\n\t/**\n\t * Inverts a mat2\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the source matrix\n\t * @returns {mat2} out\n\t */\n\tmat2.invert = function(out, a) {\n\t    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n\t\n\t        // Calculate the determinant\n\t        det = a0 * a3 - a2 * a1;\n\t\n\t    if (!det) {\n\t        return null;\n\t    }\n\t    det = 1.0 / det;\n\t    \n\t    out[0] =  a3 * det;\n\t    out[1] = -a1 * det;\n\t    out[2] = -a2 * det;\n\t    out[3] =  a0 * det;\n\t\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the adjugate of a mat2\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the source matrix\n\t * @returns {mat2} out\n\t */\n\tmat2.adjoint = function(out, a) {\n\t    // Caching this value is nessecary if out == a\n\t    var a0 = a[0];\n\t    out[0] =  a[3];\n\t    out[1] = -a[1];\n\t    out[2] = -a[2];\n\t    out[3] =  a0;\n\t\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the determinant of a mat2\n\t *\n\t * @param {mat2} a the source matrix\n\t * @returns {Number} determinant of a\n\t */\n\tmat2.determinant = function (a) {\n\t    return a[0] * a[3] - a[2] * a[1];\n\t};\n\t\n\t/**\n\t * Multiplies two mat2's\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the first operand\n\t * @param {mat2} b the second operand\n\t * @returns {mat2} out\n\t */\n\tmat2.multiply = function (out, a, b) {\n\t    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n\t    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n\t    out[0] = a0 * b0 + a2 * b1;\n\t    out[1] = a1 * b0 + a3 * b1;\n\t    out[2] = a0 * b2 + a2 * b3;\n\t    out[3] = a1 * b2 + a3 * b3;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link mat2.multiply}\n\t * @function\n\t */\n\tmat2.mul = mat2.multiply;\n\t\n\t/**\n\t * Rotates a mat2 by the given angle\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat2} out\n\t */\n\tmat2.rotate = function (out, a, rad) {\n\t    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n\t        s = Math.sin(rad),\n\t        c = Math.cos(rad);\n\t    out[0] = a0 *  c + a2 * s;\n\t    out[1] = a1 *  c + a3 * s;\n\t    out[2] = a0 * -s + a2 * c;\n\t    out[3] = a1 * -s + a3 * c;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Scales the mat2 by the dimensions in the given vec2\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the matrix to rotate\n\t * @param {vec2} v the vec2 to scale the matrix by\n\t * @returns {mat2} out\n\t **/\n\tmat2.scale = function(out, a, v) {\n\t    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n\t        v0 = v[0], v1 = v[1];\n\t    out[0] = a0 * v0;\n\t    out[1] = a1 * v0;\n\t    out[2] = a2 * v1;\n\t    out[3] = a3 * v1;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a matrix from a given angle\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat2.identity(dest);\n\t *     mat2.rotate(dest, dest, rad);\n\t *\n\t * @param {mat2} out mat2 receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat2} out\n\t */\n\tmat2.fromRotation = function(out, rad) {\n\t    var s = Math.sin(rad),\n\t        c = Math.cos(rad);\n\t    out[0] = c;\n\t    out[1] = s;\n\t    out[2] = -s;\n\t    out[3] = c;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a vector scaling\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat2.identity(dest);\n\t *     mat2.scale(dest, dest, vec);\n\t *\n\t * @param {mat2} out mat2 receiving operation result\n\t * @param {vec2} v Scaling vector\n\t * @returns {mat2} out\n\t */\n\tmat2.fromScaling = function(out, v) {\n\t    out[0] = v[0];\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = v[1];\n\t    return out;\n\t}\n\t\n\t/**\n\t * Returns a string representation of a mat2\n\t *\n\t * @param {mat2} mat matrix to represent as a string\n\t * @returns {String} string representation of the matrix\n\t */\n\tmat2.str = function (a) {\n\t    return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n\t};\n\t\n\t/**\n\t * Returns Frobenius norm of a mat2\n\t *\n\t * @param {mat2} a the matrix to calculate Frobenius norm of\n\t * @returns {Number} Frobenius norm\n\t */\n\tmat2.frob = function (a) {\n\t    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))\n\t};\n\t\n\t/**\n\t * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n\t * @param {mat2} L the lower triangular matrix \n\t * @param {mat2} D the diagonal matrix \n\t * @param {mat2} U the upper triangular matrix \n\t * @param {mat2} a the input matrix to factorize\n\t */\n\t\n\tmat2.LDU = function (L, D, U, a) { \n\t    L[2] = a[2]/a[0]; \n\t    U[0] = a[0]; \n\t    U[1] = a[1]; \n\t    U[3] = a[3] - L[2] * U[1]; \n\t    return [L, D, U];       \n\t}; \n\t\n\t\n\tmodule.exports = mat2;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tvar glMatrix = __webpack_require__(4);\n\t\n\t/**\n\t * @class 2x3 Matrix\n\t * @name mat2d\n\t * \n\t * @description \n\t * A mat2d contains six elements defined as:\n\t * <pre>\n\t * [a, c, tx,\n\t *  b, d, ty]\n\t * </pre>\n\t * This is a short form for the 3x3 matrix:\n\t * <pre>\n\t * [a, c, tx,\n\t *  b, d, ty,\n\t *  0, 0, 1]\n\t * </pre>\n\t * The last row is ignored so the array is shorter and operations are faster.\n\t */\n\tvar mat2d = {};\n\t\n\t/**\n\t * Creates a new identity mat2d\n\t *\n\t * @returns {mat2d} a new 2x3 matrix\n\t */\n\tmat2d.create = function() {\n\t    var out = new glMatrix.ARRAY_TYPE(6);\n\t    out[0] = 1;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 1;\n\t    out[4] = 0;\n\t    out[5] = 0;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a new mat2d initialized with values from an existing matrix\n\t *\n\t * @param {mat2d} a matrix to clone\n\t * @returns {mat2d} a new 2x3 matrix\n\t */\n\tmat2d.clone = function(a) {\n\t    var out = new glMatrix.ARRAY_TYPE(6);\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    out[3] = a[3];\n\t    out[4] = a[4];\n\t    out[5] = a[5];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Copy the values from one mat2d to another\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the source matrix\n\t * @returns {mat2d} out\n\t */\n\tmat2d.copy = function(out, a) {\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    out[3] = a[3];\n\t    out[4] = a[4];\n\t    out[5] = a[5];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Set a mat2d to the identity matrix\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @returns {mat2d} out\n\t */\n\tmat2d.identity = function(out) {\n\t    out[0] = 1;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 1;\n\t    out[4] = 0;\n\t    out[5] = 0;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Inverts a mat2d\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the source matrix\n\t * @returns {mat2d} out\n\t */\n\tmat2d.invert = function(out, a) {\n\t    var aa = a[0], ab = a[1], ac = a[2], ad = a[3],\n\t        atx = a[4], aty = a[5];\n\t\n\t    var det = aa * ad - ab * ac;\n\t    if(!det){\n\t        return null;\n\t    }\n\t    det = 1.0 / det;\n\t\n\t    out[0] = ad * det;\n\t    out[1] = -ab * det;\n\t    out[2] = -ac * det;\n\t    out[3] = aa * det;\n\t    out[4] = (ac * aty - ad * atx) * det;\n\t    out[5] = (ab * atx - aa * aty) * det;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the determinant of a mat2d\n\t *\n\t * @param {mat2d} a the source matrix\n\t * @returns {Number} determinant of a\n\t */\n\tmat2d.determinant = function (a) {\n\t    return a[0] * a[3] - a[1] * a[2];\n\t};\n\t\n\t/**\n\t * Multiplies two mat2d's\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the first operand\n\t * @param {mat2d} b the second operand\n\t * @returns {mat2d} out\n\t */\n\tmat2d.multiply = function (out, a, b) {\n\t    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n\t        b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n\t    out[0] = a0 * b0 + a2 * b1;\n\t    out[1] = a1 * b0 + a3 * b1;\n\t    out[2] = a0 * b2 + a2 * b3;\n\t    out[3] = a1 * b2 + a3 * b3;\n\t    out[4] = a0 * b4 + a2 * b5 + a4;\n\t    out[5] = a1 * b4 + a3 * b5 + a5;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link mat2d.multiply}\n\t * @function\n\t */\n\tmat2d.mul = mat2d.multiply;\n\t\n\t/**\n\t * Rotates a mat2d by the given angle\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat2d} out\n\t */\n\tmat2d.rotate = function (out, a, rad) {\n\t    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n\t        s = Math.sin(rad),\n\t        c = Math.cos(rad);\n\t    out[0] = a0 *  c + a2 * s;\n\t    out[1] = a1 *  c + a3 * s;\n\t    out[2] = a0 * -s + a2 * c;\n\t    out[3] = a1 * -s + a3 * c;\n\t    out[4] = a4;\n\t    out[5] = a5;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Scales the mat2d by the dimensions in the given vec2\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the matrix to translate\n\t * @param {vec2} v the vec2 to scale the matrix by\n\t * @returns {mat2d} out\n\t **/\n\tmat2d.scale = function(out, a, v) {\n\t    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n\t        v0 = v[0], v1 = v[1];\n\t    out[0] = a0 * v0;\n\t    out[1] = a1 * v0;\n\t    out[2] = a2 * v1;\n\t    out[3] = a3 * v1;\n\t    out[4] = a4;\n\t    out[5] = a5;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Translates the mat2d by the dimensions in the given vec2\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the matrix to translate\n\t * @param {vec2} v the vec2 to translate the matrix by\n\t * @returns {mat2d} out\n\t **/\n\tmat2d.translate = function(out, a, v) {\n\t    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n\t        v0 = v[0], v1 = v[1];\n\t    out[0] = a0;\n\t    out[1] = a1;\n\t    out[2] = a2;\n\t    out[3] = a3;\n\t    out[4] = a0 * v0 + a2 * v1 + a4;\n\t    out[5] = a1 * v0 + a3 * v1 + a5;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a matrix from a given angle\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat2d.identity(dest);\n\t *     mat2d.rotate(dest, dest, rad);\n\t *\n\t * @param {mat2d} out mat2d receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat2d} out\n\t */\n\tmat2d.fromRotation = function(out, rad) {\n\t    var s = Math.sin(rad), c = Math.cos(rad);\n\t    out[0] = c;\n\t    out[1] = s;\n\t    out[2] = -s;\n\t    out[3] = c;\n\t    out[4] = 0;\n\t    out[5] = 0;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a vector scaling\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat2d.identity(dest);\n\t *     mat2d.scale(dest, dest, vec);\n\t *\n\t * @param {mat2d} out mat2d receiving operation result\n\t * @param {vec2} v Scaling vector\n\t * @returns {mat2d} out\n\t */\n\tmat2d.fromScaling = function(out, v) {\n\t    out[0] = v[0];\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = v[1];\n\t    out[4] = 0;\n\t    out[5] = 0;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a vector translation\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat2d.identity(dest);\n\t *     mat2d.translate(dest, dest, vec);\n\t *\n\t * @param {mat2d} out mat2d receiving operation result\n\t * @param {vec2} v Translation vector\n\t * @returns {mat2d} out\n\t */\n\tmat2d.fromTranslation = function(out, v) {\n\t    out[0] = 1;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 1;\n\t    out[4] = v[0];\n\t    out[5] = v[1];\n\t    return out;\n\t}\n\t\n\t/**\n\t * Returns a string representation of a mat2d\n\t *\n\t * @param {mat2d} a matrix to represent as a string\n\t * @returns {String} string representation of the matrix\n\t */\n\tmat2d.str = function (a) {\n\t    return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + \n\t                    a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n\t};\n\t\n\t/**\n\t * Returns Frobenius norm of a mat2d\n\t *\n\t * @param {mat2d} a the matrix to calculate Frobenius norm of\n\t * @returns {Number} Frobenius norm\n\t */\n\tmat2d.frob = function (a) { \n\t    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))\n\t}; \n\t\n\tmodule.exports = mat2d;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tvar glMatrix = __webpack_require__(4);\n\t\n\t/**\n\t * @class 3x3 Matrix\n\t * @name mat3\n\t */\n\tvar mat3 = {};\n\t\n\t/**\n\t * Creates a new identity mat3\n\t *\n\t * @returns {mat3} a new 3x3 matrix\n\t */\n\tmat3.create = function() {\n\t    var out = new glMatrix.ARRAY_TYPE(9);\n\t    out[0] = 1;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 0;\n\t    out[4] = 1;\n\t    out[5] = 0;\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = 1;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Copies the upper-left 3x3 values into the given mat3.\n\t *\n\t * @param {mat3} out the receiving 3x3 matrix\n\t * @param {mat4} a   the source 4x4 matrix\n\t * @returns {mat3} out\n\t */\n\tmat3.fromMat4 = function(out, a) {\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    out[3] = a[4];\n\t    out[4] = a[5];\n\t    out[5] = a[6];\n\t    out[6] = a[8];\n\t    out[7] = a[9];\n\t    out[8] = a[10];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a new mat3 initialized with values from an existing matrix\n\t *\n\t * @param {mat3} a matrix to clone\n\t * @returns {mat3} a new 3x3 matrix\n\t */\n\tmat3.clone = function(a) {\n\t    var out = new glMatrix.ARRAY_TYPE(9);\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    out[3] = a[3];\n\t    out[4] = a[4];\n\t    out[5] = a[5];\n\t    out[6] = a[6];\n\t    out[7] = a[7];\n\t    out[8] = a[8];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Copy the values from one mat3 to another\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the source matrix\n\t * @returns {mat3} out\n\t */\n\tmat3.copy = function(out, a) {\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    out[3] = a[3];\n\t    out[4] = a[4];\n\t    out[5] = a[5];\n\t    out[6] = a[6];\n\t    out[7] = a[7];\n\t    out[8] = a[8];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Set a mat3 to the identity matrix\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @returns {mat3} out\n\t */\n\tmat3.identity = function(out) {\n\t    out[0] = 1;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 0;\n\t    out[4] = 1;\n\t    out[5] = 0;\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = 1;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Transpose the values of a mat3\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the source matrix\n\t * @returns {mat3} out\n\t */\n\tmat3.transpose = function(out, a) {\n\t    // If we are transposing ourselves we can skip a few steps but have to cache some values\n\t    if (out === a) {\n\t        var a01 = a[1], a02 = a[2], a12 = a[5];\n\t        out[1] = a[3];\n\t        out[2] = a[6];\n\t        out[3] = a01;\n\t        out[5] = a[7];\n\t        out[6] = a02;\n\t        out[7] = a12;\n\t    } else {\n\t        out[0] = a[0];\n\t        out[1] = a[3];\n\t        out[2] = a[6];\n\t        out[3] = a[1];\n\t        out[4] = a[4];\n\t        out[5] = a[7];\n\t        out[6] = a[2];\n\t        out[7] = a[5];\n\t        out[8] = a[8];\n\t    }\n\t    \n\t    return out;\n\t};\n\t\n\t/**\n\t * Inverts a mat3\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the source matrix\n\t * @returns {mat3} out\n\t */\n\tmat3.invert = function(out, a) {\n\t    var a00 = a[0], a01 = a[1], a02 = a[2],\n\t        a10 = a[3], a11 = a[4], a12 = a[5],\n\t        a20 = a[6], a21 = a[7], a22 = a[8],\n\t\n\t        b01 = a22 * a11 - a12 * a21,\n\t        b11 = -a22 * a10 + a12 * a20,\n\t        b21 = a21 * a10 - a11 * a20,\n\t\n\t        // Calculate the determinant\n\t        det = a00 * b01 + a01 * b11 + a02 * b21;\n\t\n\t    if (!det) { \n\t        return null; \n\t    }\n\t    det = 1.0 / det;\n\t\n\t    out[0] = b01 * det;\n\t    out[1] = (-a22 * a01 + a02 * a21) * det;\n\t    out[2] = (a12 * a01 - a02 * a11) * det;\n\t    out[3] = b11 * det;\n\t    out[4] = (a22 * a00 - a02 * a20) * det;\n\t    out[5] = (-a12 * a00 + a02 * a10) * det;\n\t    out[6] = b21 * det;\n\t    out[7] = (-a21 * a00 + a01 * a20) * det;\n\t    out[8] = (a11 * a00 - a01 * a10) * det;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the adjugate of a mat3\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the source matrix\n\t * @returns {mat3} out\n\t */\n\tmat3.adjoint = function(out, a) {\n\t    var a00 = a[0], a01 = a[1], a02 = a[2],\n\t        a10 = a[3], a11 = a[4], a12 = a[5],\n\t        a20 = a[6], a21 = a[7], a22 = a[8];\n\t\n\t    out[0] = (a11 * a22 - a12 * a21);\n\t    out[1] = (a02 * a21 - a01 * a22);\n\t    out[2] = (a01 * a12 - a02 * a11);\n\t    out[3] = (a12 * a20 - a10 * a22);\n\t    out[4] = (a00 * a22 - a02 * a20);\n\t    out[5] = (a02 * a10 - a00 * a12);\n\t    out[6] = (a10 * a21 - a11 * a20);\n\t    out[7] = (a01 * a20 - a00 * a21);\n\t    out[8] = (a00 * a11 - a01 * a10);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the determinant of a mat3\n\t *\n\t * @param {mat3} a the source matrix\n\t * @returns {Number} determinant of a\n\t */\n\tmat3.determinant = function (a) {\n\t    var a00 = a[0], a01 = a[1], a02 = a[2],\n\t        a10 = a[3], a11 = a[4], a12 = a[5],\n\t        a20 = a[6], a21 = a[7], a22 = a[8];\n\t\n\t    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n\t};\n\t\n\t/**\n\t * Multiplies two mat3's\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the first operand\n\t * @param {mat3} b the second operand\n\t * @returns {mat3} out\n\t */\n\tmat3.multiply = function (out, a, b) {\n\t    var a00 = a[0], a01 = a[1], a02 = a[2],\n\t        a10 = a[3], a11 = a[4], a12 = a[5],\n\t        a20 = a[6], a21 = a[7], a22 = a[8],\n\t\n\t        b00 = b[0], b01 = b[1], b02 = b[2],\n\t        b10 = b[3], b11 = b[4], b12 = b[5],\n\t        b20 = b[6], b21 = b[7], b22 = b[8];\n\t\n\t    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n\t    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n\t    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\t\n\t    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n\t    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n\t    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\t\n\t    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n\t    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n\t    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link mat3.multiply}\n\t * @function\n\t */\n\tmat3.mul = mat3.multiply;\n\t\n\t/**\n\t * Translate a mat3 by the given vector\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the matrix to translate\n\t * @param {vec2} v vector to translate by\n\t * @returns {mat3} out\n\t */\n\tmat3.translate = function(out, a, v) {\n\t    var a00 = a[0], a01 = a[1], a02 = a[2],\n\t        a10 = a[3], a11 = a[4], a12 = a[5],\n\t        a20 = a[6], a21 = a[7], a22 = a[8],\n\t        x = v[0], y = v[1];\n\t\n\t    out[0] = a00;\n\t    out[1] = a01;\n\t    out[2] = a02;\n\t\n\t    out[3] = a10;\n\t    out[4] = a11;\n\t    out[5] = a12;\n\t\n\t    out[6] = x * a00 + y * a10 + a20;\n\t    out[7] = x * a01 + y * a11 + a21;\n\t    out[8] = x * a02 + y * a12 + a22;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Rotates a mat3 by the given angle\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat3} out\n\t */\n\tmat3.rotate = function (out, a, rad) {\n\t    var a00 = a[0], a01 = a[1], a02 = a[2],\n\t        a10 = a[3], a11 = a[4], a12 = a[5],\n\t        a20 = a[6], a21 = a[7], a22 = a[8],\n\t\n\t        s = Math.sin(rad),\n\t        c = Math.cos(rad);\n\t\n\t    out[0] = c * a00 + s * a10;\n\t    out[1] = c * a01 + s * a11;\n\t    out[2] = c * a02 + s * a12;\n\t\n\t    out[3] = c * a10 - s * a00;\n\t    out[4] = c * a11 - s * a01;\n\t    out[5] = c * a12 - s * a02;\n\t\n\t    out[6] = a20;\n\t    out[7] = a21;\n\t    out[8] = a22;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Scales the mat3 by the dimensions in the given vec2\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the matrix to rotate\n\t * @param {vec2} v the vec2 to scale the matrix by\n\t * @returns {mat3} out\n\t **/\n\tmat3.scale = function(out, a, v) {\n\t    var x = v[0], y = v[1];\n\t\n\t    out[0] = x * a[0];\n\t    out[1] = x * a[1];\n\t    out[2] = x * a[2];\n\t\n\t    out[3] = y * a[3];\n\t    out[4] = y * a[4];\n\t    out[5] = y * a[5];\n\t\n\t    out[6] = a[6];\n\t    out[7] = a[7];\n\t    out[8] = a[8];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a matrix from a vector translation\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat3.identity(dest);\n\t *     mat3.translate(dest, dest, vec);\n\t *\n\t * @param {mat3} out mat3 receiving operation result\n\t * @param {vec2} v Translation vector\n\t * @returns {mat3} out\n\t */\n\tmat3.fromTranslation = function(out, v) {\n\t    out[0] = 1;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 0;\n\t    out[4] = 1;\n\t    out[5] = 0;\n\t    out[6] = v[0];\n\t    out[7] = v[1];\n\t    out[8] = 1;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a given angle\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat3.identity(dest);\n\t *     mat3.rotate(dest, dest, rad);\n\t *\n\t * @param {mat3} out mat3 receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat3} out\n\t */\n\tmat3.fromRotation = function(out, rad) {\n\t    var s = Math.sin(rad), c = Math.cos(rad);\n\t\n\t    out[0] = c;\n\t    out[1] = s;\n\t    out[2] = 0;\n\t\n\t    out[3] = -s;\n\t    out[4] = c;\n\t    out[5] = 0;\n\t\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = 1;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a vector scaling\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat3.identity(dest);\n\t *     mat3.scale(dest, dest, vec);\n\t *\n\t * @param {mat3} out mat3 receiving operation result\n\t * @param {vec2} v Scaling vector\n\t * @returns {mat3} out\n\t */\n\tmat3.fromScaling = function(out, v) {\n\t    out[0] = v[0];\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t\n\t    out[3] = 0;\n\t    out[4] = v[1];\n\t    out[5] = 0;\n\t\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = 1;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Copies the values from a mat2d into a mat3\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat2d} a the matrix to copy\n\t * @returns {mat3} out\n\t **/\n\tmat3.fromMat2d = function(out, a) {\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = 0;\n\t\n\t    out[3] = a[2];\n\t    out[4] = a[3];\n\t    out[5] = 0;\n\t\n\t    out[6] = a[4];\n\t    out[7] = a[5];\n\t    out[8] = 1;\n\t    return out;\n\t};\n\t\n\t/**\n\t* Calculates a 3x3 matrix from the given quaternion\n\t*\n\t* @param {mat3} out mat3 receiving operation result\n\t* @param {quat} q Quaternion to create matrix from\n\t*\n\t* @returns {mat3} out\n\t*/\n\tmat3.fromQuat = function (out, q) {\n\t    var x = q[0], y = q[1], z = q[2], w = q[3],\n\t        x2 = x + x,\n\t        y2 = y + y,\n\t        z2 = z + z,\n\t\n\t        xx = x * x2,\n\t        yx = y * x2,\n\t        yy = y * y2,\n\t        zx = z * x2,\n\t        zy = z * y2,\n\t        zz = z * z2,\n\t        wx = w * x2,\n\t        wy = w * y2,\n\t        wz = w * z2;\n\t\n\t    out[0] = 1 - yy - zz;\n\t    out[3] = yx - wz;\n\t    out[6] = zx + wy;\n\t\n\t    out[1] = yx + wz;\n\t    out[4] = 1 - xx - zz;\n\t    out[7] = zy - wx;\n\t\n\t    out[2] = zx - wy;\n\t    out[5] = zy + wx;\n\t    out[8] = 1 - xx - yy;\n\t\n\t    return out;\n\t};\n\t\n\t/**\n\t* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n\t*\n\t* @param {mat3} out mat3 receiving operation result\n\t* @param {mat4} a Mat4 to derive the normal matrix from\n\t*\n\t* @returns {mat3} out\n\t*/\n\tmat3.normalFromMat4 = function (out, a) {\n\t    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n\t        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n\t        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n\t        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\t\n\t        b00 = a00 * a11 - a01 * a10,\n\t        b01 = a00 * a12 - a02 * a10,\n\t        b02 = a00 * a13 - a03 * a10,\n\t        b03 = a01 * a12 - a02 * a11,\n\t        b04 = a01 * a13 - a03 * a11,\n\t        b05 = a02 * a13 - a03 * a12,\n\t        b06 = a20 * a31 - a21 * a30,\n\t        b07 = a20 * a32 - a22 * a30,\n\t        b08 = a20 * a33 - a23 * a30,\n\t        b09 = a21 * a32 - a22 * a31,\n\t        b10 = a21 * a33 - a23 * a31,\n\t        b11 = a22 * a33 - a23 * a32,\n\t\n\t        // Calculate the determinant\n\t        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\t\n\t    if (!det) { \n\t        return null; \n\t    }\n\t    det = 1.0 / det;\n\t\n\t    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n\t    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n\t    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\t\n\t    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n\t    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n\t    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\t\n\t    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n\t    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n\t    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\t\n\t    return out;\n\t};\n\t\n\t/**\n\t * Returns a string representation of a mat3\n\t *\n\t * @param {mat3} mat matrix to represent as a string\n\t * @returns {String} string representation of the matrix\n\t */\n\tmat3.str = function (a) {\n\t    return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + \n\t                    a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + \n\t                    a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n\t};\n\t\n\t/**\n\t * Returns Frobenius norm of a mat3\n\t *\n\t * @param {mat3} a the matrix to calculate Frobenius norm of\n\t * @returns {Number} Frobenius norm\n\t */\n\tmat3.frob = function (a) {\n\t    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\n\t};\n\t\n\t\n\tmodule.exports = mat3;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tvar glMatrix = __webpack_require__(4);\n\t\n\t/**\n\t * @class 4x4 Matrix\n\t * @name mat4\n\t */\n\tvar mat4 = {};\n\t\n\t/**\n\t * Creates a new identity mat4\n\t *\n\t * @returns {mat4} a new 4x4 matrix\n\t */\n\tmat4.create = function() {\n\t    var out = new glMatrix.ARRAY_TYPE(16);\n\t    out[0] = 1;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 0;\n\t    out[4] = 0;\n\t    out[5] = 1;\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = 0;\n\t    out[9] = 0;\n\t    out[10] = 1;\n\t    out[11] = 0;\n\t    out[12] = 0;\n\t    out[13] = 0;\n\t    out[14] = 0;\n\t    out[15] = 1;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a new mat4 initialized with values from an existing matrix\n\t *\n\t * @param {mat4} a matrix to clone\n\t * @returns {mat4} a new 4x4 matrix\n\t */\n\tmat4.clone = function(a) {\n\t    var out = new glMatrix.ARRAY_TYPE(16);\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    out[3] = a[3];\n\t    out[4] = a[4];\n\t    out[5] = a[5];\n\t    out[6] = a[6];\n\t    out[7] = a[7];\n\t    out[8] = a[8];\n\t    out[9] = a[9];\n\t    out[10] = a[10];\n\t    out[11] = a[11];\n\t    out[12] = a[12];\n\t    out[13] = a[13];\n\t    out[14] = a[14];\n\t    out[15] = a[15];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Copy the values from one mat4 to another\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the source matrix\n\t * @returns {mat4} out\n\t */\n\tmat4.copy = function(out, a) {\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    out[3] = a[3];\n\t    out[4] = a[4];\n\t    out[5] = a[5];\n\t    out[6] = a[6];\n\t    out[7] = a[7];\n\t    out[8] = a[8];\n\t    out[9] = a[9];\n\t    out[10] = a[10];\n\t    out[11] = a[11];\n\t    out[12] = a[12];\n\t    out[13] = a[13];\n\t    out[14] = a[14];\n\t    out[15] = a[15];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Set a mat4 to the identity matrix\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @returns {mat4} out\n\t */\n\tmat4.identity = function(out) {\n\t    out[0] = 1;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 0;\n\t    out[4] = 0;\n\t    out[5] = 1;\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = 0;\n\t    out[9] = 0;\n\t    out[10] = 1;\n\t    out[11] = 0;\n\t    out[12] = 0;\n\t    out[13] = 0;\n\t    out[14] = 0;\n\t    out[15] = 1;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Transpose the values of a mat4\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the source matrix\n\t * @returns {mat4} out\n\t */\n\tmat4.transpose = function(out, a) {\n\t    // If we are transposing ourselves we can skip a few steps but have to cache some values\n\t    if (out === a) {\n\t        var a01 = a[1], a02 = a[2], a03 = a[3],\n\t            a12 = a[6], a13 = a[7],\n\t            a23 = a[11];\n\t\n\t        out[1] = a[4];\n\t        out[2] = a[8];\n\t        out[3] = a[12];\n\t        out[4] = a01;\n\t        out[6] = a[9];\n\t        out[7] = a[13];\n\t        out[8] = a02;\n\t        out[9] = a12;\n\t        out[11] = a[14];\n\t        out[12] = a03;\n\t        out[13] = a13;\n\t        out[14] = a23;\n\t    } else {\n\t        out[0] = a[0];\n\t        out[1] = a[4];\n\t        out[2] = a[8];\n\t        out[3] = a[12];\n\t        out[4] = a[1];\n\t        out[5] = a[5];\n\t        out[6] = a[9];\n\t        out[7] = a[13];\n\t        out[8] = a[2];\n\t        out[9] = a[6];\n\t        out[10] = a[10];\n\t        out[11] = a[14];\n\t        out[12] = a[3];\n\t        out[13] = a[7];\n\t        out[14] = a[11];\n\t        out[15] = a[15];\n\t    }\n\t    \n\t    return out;\n\t};\n\t\n\t/**\n\t * Inverts a mat4\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the source matrix\n\t * @returns {mat4} out\n\t */\n\tmat4.invert = function(out, a) {\n\t    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n\t        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n\t        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n\t        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\t\n\t        b00 = a00 * a11 - a01 * a10,\n\t        b01 = a00 * a12 - a02 * a10,\n\t        b02 = a00 * a13 - a03 * a10,\n\t        b03 = a01 * a12 - a02 * a11,\n\t        b04 = a01 * a13 - a03 * a11,\n\t        b05 = a02 * a13 - a03 * a12,\n\t        b06 = a20 * a31 - a21 * a30,\n\t        b07 = a20 * a32 - a22 * a30,\n\t        b08 = a20 * a33 - a23 * a30,\n\t        b09 = a21 * a32 - a22 * a31,\n\t        b10 = a21 * a33 - a23 * a31,\n\t        b11 = a22 * a33 - a23 * a32,\n\t\n\t        // Calculate the determinant\n\t        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\t\n\t    if (!det) { \n\t        return null; \n\t    }\n\t    det = 1.0 / det;\n\t\n\t    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n\t    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n\t    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n\t    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n\t    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n\t    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n\t    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n\t    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n\t    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\t    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\t    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\t    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n\t    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n\t    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n\t    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n\t    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\t\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the adjugate of a mat4\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the source matrix\n\t * @returns {mat4} out\n\t */\n\tmat4.adjoint = function(out, a) {\n\t    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n\t        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n\t        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n\t        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\t\n\t    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n\t    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n\t    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n\t    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n\t    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n\t    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n\t    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n\t    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n\t    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n\t    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n\t    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n\t    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n\t    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n\t    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n\t    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n\t    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the determinant of a mat4\n\t *\n\t * @param {mat4} a the source matrix\n\t * @returns {Number} determinant of a\n\t */\n\tmat4.determinant = function (a) {\n\t    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n\t        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n\t        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n\t        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\t\n\t        b00 = a00 * a11 - a01 * a10,\n\t        b01 = a00 * a12 - a02 * a10,\n\t        b02 = a00 * a13 - a03 * a10,\n\t        b03 = a01 * a12 - a02 * a11,\n\t        b04 = a01 * a13 - a03 * a11,\n\t        b05 = a02 * a13 - a03 * a12,\n\t        b06 = a20 * a31 - a21 * a30,\n\t        b07 = a20 * a32 - a22 * a30,\n\t        b08 = a20 * a33 - a23 * a30,\n\t        b09 = a21 * a32 - a22 * a31,\n\t        b10 = a21 * a33 - a23 * a31,\n\t        b11 = a22 * a33 - a23 * a32;\n\t\n\t    // Calculate the determinant\n\t    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\t};\n\t\n\t/**\n\t * Multiplies two mat4's\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the first operand\n\t * @param {mat4} b the second operand\n\t * @returns {mat4} out\n\t */\n\tmat4.multiply = function (out, a, b) {\n\t    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n\t        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n\t        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n\t        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\t\n\t    // Cache only the current line of the second matrix\n\t    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];  \n\t    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n\t    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n\t    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n\t    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\t\n\t    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n\t    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n\t    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n\t    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n\t    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\t\n\t    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n\t    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n\t    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n\t    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n\t    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\t\n\t    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n\t    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n\t    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n\t    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n\t    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link mat4.multiply}\n\t * @function\n\t */\n\tmat4.mul = mat4.multiply;\n\t\n\t/**\n\t * Translate a mat4 by the given vector\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to translate\n\t * @param {vec3} v vector to translate by\n\t * @returns {mat4} out\n\t */\n\tmat4.translate = function (out, a, v) {\n\t    var x = v[0], y = v[1], z = v[2],\n\t        a00, a01, a02, a03,\n\t        a10, a11, a12, a13,\n\t        a20, a21, a22, a23;\n\t\n\t    if (a === out) {\n\t        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n\t        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n\t        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n\t        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n\t    } else {\n\t        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n\t        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n\t        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\t\n\t        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n\t        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n\t        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\t\n\t        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n\t        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n\t        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n\t        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n\t    }\n\t\n\t    return out;\n\t};\n\t\n\t/**\n\t * Scales the mat4 by the dimensions in the given vec3\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to scale\n\t * @param {vec3} v the vec3 to scale the matrix by\n\t * @returns {mat4} out\n\t **/\n\tmat4.scale = function(out, a, v) {\n\t    var x = v[0], y = v[1], z = v[2];\n\t\n\t    out[0] = a[0] * x;\n\t    out[1] = a[1] * x;\n\t    out[2] = a[2] * x;\n\t    out[3] = a[3] * x;\n\t    out[4] = a[4] * y;\n\t    out[5] = a[5] * y;\n\t    out[6] = a[6] * y;\n\t    out[7] = a[7] * y;\n\t    out[8] = a[8] * z;\n\t    out[9] = a[9] * z;\n\t    out[10] = a[10] * z;\n\t    out[11] = a[11] * z;\n\t    out[12] = a[12];\n\t    out[13] = a[13];\n\t    out[14] = a[14];\n\t    out[15] = a[15];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Rotates a mat4 by the given angle around the given axis\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @param {vec3} axis the axis to rotate around\n\t * @returns {mat4} out\n\t */\n\tmat4.rotate = function (out, a, rad, axis) {\n\t    var x = axis[0], y = axis[1], z = axis[2],\n\t        len = Math.sqrt(x * x + y * y + z * z),\n\t        s, c, t,\n\t        a00, a01, a02, a03,\n\t        a10, a11, a12, a13,\n\t        a20, a21, a22, a23,\n\t        b00, b01, b02,\n\t        b10, b11, b12,\n\t        b20, b21, b22;\n\t\n\t    if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n\t    \n\t    len = 1 / len;\n\t    x *= len;\n\t    y *= len;\n\t    z *= len;\n\t\n\t    s = Math.sin(rad);\n\t    c = Math.cos(rad);\n\t    t = 1 - c;\n\t\n\t    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n\t    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n\t    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\t\n\t    // Construct the elements of the rotation matrix\n\t    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n\t    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n\t    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\t\n\t    // Perform rotation-specific matrix multiplication\n\t    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n\t    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n\t    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n\t    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n\t    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n\t    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n\t    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n\t    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n\t    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n\t    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n\t    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n\t    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\t\n\t    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n\t        out[12] = a[12];\n\t        out[13] = a[13];\n\t        out[14] = a[14];\n\t        out[15] = a[15];\n\t    }\n\t    return out;\n\t};\n\t\n\t/**\n\t * Rotates a matrix by the given angle around the X axis\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat4} out\n\t */\n\tmat4.rotateX = function (out, a, rad) {\n\t    var s = Math.sin(rad),\n\t        c = Math.cos(rad),\n\t        a10 = a[4],\n\t        a11 = a[5],\n\t        a12 = a[6],\n\t        a13 = a[7],\n\t        a20 = a[8],\n\t        a21 = a[9],\n\t        a22 = a[10],\n\t        a23 = a[11];\n\t\n\t    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n\t        out[0]  = a[0];\n\t        out[1]  = a[1];\n\t        out[2]  = a[2];\n\t        out[3]  = a[3];\n\t        out[12] = a[12];\n\t        out[13] = a[13];\n\t        out[14] = a[14];\n\t        out[15] = a[15];\n\t    }\n\t\n\t    // Perform axis-specific matrix multiplication\n\t    out[4] = a10 * c + a20 * s;\n\t    out[5] = a11 * c + a21 * s;\n\t    out[6] = a12 * c + a22 * s;\n\t    out[7] = a13 * c + a23 * s;\n\t    out[8] = a20 * c - a10 * s;\n\t    out[9] = a21 * c - a11 * s;\n\t    out[10] = a22 * c - a12 * s;\n\t    out[11] = a23 * c - a13 * s;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Rotates a matrix by the given angle around the Y axis\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat4} out\n\t */\n\tmat4.rotateY = function (out, a, rad) {\n\t    var s = Math.sin(rad),\n\t        c = Math.cos(rad),\n\t        a00 = a[0],\n\t        a01 = a[1],\n\t        a02 = a[2],\n\t        a03 = a[3],\n\t        a20 = a[8],\n\t        a21 = a[9],\n\t        a22 = a[10],\n\t        a23 = a[11];\n\t\n\t    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n\t        out[4]  = a[4];\n\t        out[5]  = a[5];\n\t        out[6]  = a[6];\n\t        out[7]  = a[7];\n\t        out[12] = a[12];\n\t        out[13] = a[13];\n\t        out[14] = a[14];\n\t        out[15] = a[15];\n\t    }\n\t\n\t    // Perform axis-specific matrix multiplication\n\t    out[0] = a00 * c - a20 * s;\n\t    out[1] = a01 * c - a21 * s;\n\t    out[2] = a02 * c - a22 * s;\n\t    out[3] = a03 * c - a23 * s;\n\t    out[8] = a00 * s + a20 * c;\n\t    out[9] = a01 * s + a21 * c;\n\t    out[10] = a02 * s + a22 * c;\n\t    out[11] = a03 * s + a23 * c;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Rotates a matrix by the given angle around the Z axis\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat4} out\n\t */\n\tmat4.rotateZ = function (out, a, rad) {\n\t    var s = Math.sin(rad),\n\t        c = Math.cos(rad),\n\t        a00 = a[0],\n\t        a01 = a[1],\n\t        a02 = a[2],\n\t        a03 = a[3],\n\t        a10 = a[4],\n\t        a11 = a[5],\n\t        a12 = a[6],\n\t        a13 = a[7];\n\t\n\t    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n\t        out[8]  = a[8];\n\t        out[9]  = a[9];\n\t        out[10] = a[10];\n\t        out[11] = a[11];\n\t        out[12] = a[12];\n\t        out[13] = a[13];\n\t        out[14] = a[14];\n\t        out[15] = a[15];\n\t    }\n\t\n\t    // Perform axis-specific matrix multiplication\n\t    out[0] = a00 * c + a10 * s;\n\t    out[1] = a01 * c + a11 * s;\n\t    out[2] = a02 * c + a12 * s;\n\t    out[3] = a03 * c + a13 * s;\n\t    out[4] = a10 * c - a00 * s;\n\t    out[5] = a11 * c - a01 * s;\n\t    out[6] = a12 * c - a02 * s;\n\t    out[7] = a13 * c - a03 * s;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a matrix from a vector translation\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.translate(dest, dest, vec);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {vec3} v Translation vector\n\t * @returns {mat4} out\n\t */\n\tmat4.fromTranslation = function(out, v) {\n\t    out[0] = 1;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 0;\n\t    out[4] = 0;\n\t    out[5] = 1;\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = 0;\n\t    out[9] = 0;\n\t    out[10] = 1;\n\t    out[11] = 0;\n\t    out[12] = v[0];\n\t    out[13] = v[1];\n\t    out[14] = v[2];\n\t    out[15] = 1;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a vector scaling\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.scale(dest, dest, vec);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {vec3} v Scaling vector\n\t * @returns {mat4} out\n\t */\n\tmat4.fromScaling = function(out, v) {\n\t    out[0] = v[0];\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 0;\n\t    out[4] = 0;\n\t    out[5] = v[1];\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = 0;\n\t    out[9] = 0;\n\t    out[10] = v[2];\n\t    out[11] = 0;\n\t    out[12] = 0;\n\t    out[13] = 0;\n\t    out[14] = 0;\n\t    out[15] = 1;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a given angle around a given axis\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.rotate(dest, dest, rad, axis);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @param {vec3} axis the axis to rotate around\n\t * @returns {mat4} out\n\t */\n\tmat4.fromRotation = function(out, rad, axis) {\n\t    var x = axis[0], y = axis[1], z = axis[2],\n\t        len = Math.sqrt(x * x + y * y + z * z),\n\t        s, c, t;\n\t    \n\t    if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n\t    \n\t    len = 1 / len;\n\t    x *= len;\n\t    y *= len;\n\t    z *= len;\n\t    \n\t    s = Math.sin(rad);\n\t    c = Math.cos(rad);\n\t    t = 1 - c;\n\t    \n\t    // Perform rotation-specific matrix multiplication\n\t    out[0] = x * x * t + c;\n\t    out[1] = y * x * t + z * s;\n\t    out[2] = z * x * t - y * s;\n\t    out[3] = 0;\n\t    out[4] = x * y * t - z * s;\n\t    out[5] = y * y * t + c;\n\t    out[6] = z * y * t + x * s;\n\t    out[7] = 0;\n\t    out[8] = x * z * t + y * s;\n\t    out[9] = y * z * t - x * s;\n\t    out[10] = z * z * t + c;\n\t    out[11] = 0;\n\t    out[12] = 0;\n\t    out[13] = 0;\n\t    out[14] = 0;\n\t    out[15] = 1;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from the given angle around the X axis\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.rotateX(dest, dest, rad);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat4} out\n\t */\n\tmat4.fromXRotation = function(out, rad) {\n\t    var s = Math.sin(rad),\n\t        c = Math.cos(rad);\n\t    \n\t    // Perform axis-specific matrix multiplication\n\t    out[0]  = 1;\n\t    out[1]  = 0;\n\t    out[2]  = 0;\n\t    out[3]  = 0;\n\t    out[4] = 0;\n\t    out[5] = c;\n\t    out[6] = s;\n\t    out[7] = 0;\n\t    out[8] = 0;\n\t    out[9] = -s;\n\t    out[10] = c;\n\t    out[11] = 0;\n\t    out[12] = 0;\n\t    out[13] = 0;\n\t    out[14] = 0;\n\t    out[15] = 1;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from the given angle around the Y axis\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.rotateY(dest, dest, rad);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat4} out\n\t */\n\tmat4.fromYRotation = function(out, rad) {\n\t    var s = Math.sin(rad),\n\t        c = Math.cos(rad);\n\t    \n\t    // Perform axis-specific matrix multiplication\n\t    out[0]  = c;\n\t    out[1]  = 0;\n\t    out[2]  = -s;\n\t    out[3]  = 0;\n\t    out[4] = 0;\n\t    out[5] = 1;\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = s;\n\t    out[9] = 0;\n\t    out[10] = c;\n\t    out[11] = 0;\n\t    out[12] = 0;\n\t    out[13] = 0;\n\t    out[14] = 0;\n\t    out[15] = 1;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from the given angle around the Z axis\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.rotateZ(dest, dest, rad);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat4} out\n\t */\n\tmat4.fromZRotation = function(out, rad) {\n\t    var s = Math.sin(rad),\n\t        c = Math.cos(rad);\n\t    \n\t    // Perform axis-specific matrix multiplication\n\t    out[0]  = c;\n\t    out[1]  = s;\n\t    out[2]  = 0;\n\t    out[3]  = 0;\n\t    out[4] = -s;\n\t    out[5] = c;\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = 0;\n\t    out[9] = 0;\n\t    out[10] = 1;\n\t    out[11] = 0;\n\t    out[12] = 0;\n\t    out[13] = 0;\n\t    out[14] = 0;\n\t    out[15] = 1;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a quaternion rotation and vector translation\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.translate(dest, vec);\n\t *     var quatMat = mat4.create();\n\t *     quat4.toMat4(quat, quatMat);\n\t *     mat4.multiply(dest, quatMat);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {quat4} q Rotation quaternion\n\t * @param {vec3} v Translation vector\n\t * @returns {mat4} out\n\t */\n\tmat4.fromRotationTranslation = function (out, q, v) {\n\t    // Quaternion math\n\t    var x = q[0], y = q[1], z = q[2], w = q[3],\n\t        x2 = x + x,\n\t        y2 = y + y,\n\t        z2 = z + z,\n\t\n\t        xx = x * x2,\n\t        xy = x * y2,\n\t        xz = x * z2,\n\t        yy = y * y2,\n\t        yz = y * z2,\n\t        zz = z * z2,\n\t        wx = w * x2,\n\t        wy = w * y2,\n\t        wz = w * z2;\n\t\n\t    out[0] = 1 - (yy + zz);\n\t    out[1] = xy + wz;\n\t    out[2] = xz - wy;\n\t    out[3] = 0;\n\t    out[4] = xy - wz;\n\t    out[5] = 1 - (xx + zz);\n\t    out[6] = yz + wx;\n\t    out[7] = 0;\n\t    out[8] = xz + wy;\n\t    out[9] = yz - wx;\n\t    out[10] = 1 - (xx + yy);\n\t    out[11] = 0;\n\t    out[12] = v[0];\n\t    out[13] = v[1];\n\t    out[14] = v[2];\n\t    out[15] = 1;\n\t    \n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a matrix from a quaternion rotation, vector translation and vector scale\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.translate(dest, vec);\n\t *     var quatMat = mat4.create();\n\t *     quat4.toMat4(quat, quatMat);\n\t *     mat4.multiply(dest, quatMat);\n\t *     mat4.scale(dest, scale)\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {quat4} q Rotation quaternion\n\t * @param {vec3} v Translation vector\n\t * @param {vec3} s Scaling vector\n\t * @returns {mat4} out\n\t */\n\tmat4.fromRotationTranslationScale = function (out, q, v, s) {\n\t    // Quaternion math\n\t    var x = q[0], y = q[1], z = q[2], w = q[3],\n\t        x2 = x + x,\n\t        y2 = y + y,\n\t        z2 = z + z,\n\t\n\t        xx = x * x2,\n\t        xy = x * y2,\n\t        xz = x * z2,\n\t        yy = y * y2,\n\t        yz = y * z2,\n\t        zz = z * z2,\n\t        wx = w * x2,\n\t        wy = w * y2,\n\t        wz = w * z2,\n\t        sx = s[0],\n\t        sy = s[1],\n\t        sz = s[2];\n\t\n\t    out[0] = (1 - (yy + zz)) * sx;\n\t    out[1] = (xy + wz) * sx;\n\t    out[2] = (xz - wy) * sx;\n\t    out[3] = 0;\n\t    out[4] = (xy - wz) * sy;\n\t    out[5] = (1 - (xx + zz)) * sy;\n\t    out[6] = (yz + wx) * sy;\n\t    out[7] = 0;\n\t    out[8] = (xz + wy) * sz;\n\t    out[9] = (yz - wx) * sz;\n\t    out[10] = (1 - (xx + yy)) * sz;\n\t    out[11] = 0;\n\t    out[12] = v[0];\n\t    out[13] = v[1];\n\t    out[14] = v[2];\n\t    out[15] = 1;\n\t    \n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.translate(dest, vec);\n\t *     mat4.translate(dest, origin);\n\t *     var quatMat = mat4.create();\n\t *     quat4.toMat4(quat, quatMat);\n\t *     mat4.multiply(dest, quatMat);\n\t *     mat4.scale(dest, scale)\n\t *     mat4.translate(dest, negativeOrigin);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {quat4} q Rotation quaternion\n\t * @param {vec3} v Translation vector\n\t * @param {vec3} s Scaling vector\n\t * @param {vec3} o The origin vector around which to scale and rotate\n\t * @returns {mat4} out\n\t */\n\tmat4.fromRotationTranslationScaleOrigin = function (out, q, v, s, o) {\n\t  // Quaternion math\n\t  var x = q[0], y = q[1], z = q[2], w = q[3],\n\t      x2 = x + x,\n\t      y2 = y + y,\n\t      z2 = z + z,\n\t\n\t      xx = x * x2,\n\t      xy = x * y2,\n\t      xz = x * z2,\n\t      yy = y * y2,\n\t      yz = y * z2,\n\t      zz = z * z2,\n\t      wx = w * x2,\n\t      wy = w * y2,\n\t      wz = w * z2,\n\t      \n\t      sx = s[0],\n\t      sy = s[1],\n\t      sz = s[2],\n\t\n\t      ox = o[0],\n\t      oy = o[1],\n\t      oz = o[2];\n\t      \n\t  out[0] = (1 - (yy + zz)) * sx;\n\t  out[1] = (xy + wz) * sx;\n\t  out[2] = (xz - wy) * sx;\n\t  out[3] = 0;\n\t  out[4] = (xy - wz) * sy;\n\t  out[5] = (1 - (xx + zz)) * sy;\n\t  out[6] = (yz + wx) * sy;\n\t  out[7] = 0;\n\t  out[8] = (xz + wy) * sz;\n\t  out[9] = (yz - wx) * sz;\n\t  out[10] = (1 - (xx + yy)) * sz;\n\t  out[11] = 0;\n\t  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\n\t  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\n\t  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\n\t  out[15] = 1;\n\t        \n\t  return out;\n\t};\n\t\n\tmat4.fromQuat = function (out, q) {\n\t    var x = q[0], y = q[1], z = q[2], w = q[3],\n\t        x2 = x + x,\n\t        y2 = y + y,\n\t        z2 = z + z,\n\t\n\t        xx = x * x2,\n\t        yx = y * x2,\n\t        yy = y * y2,\n\t        zx = z * x2,\n\t        zy = z * y2,\n\t        zz = z * z2,\n\t        wx = w * x2,\n\t        wy = w * y2,\n\t        wz = w * z2;\n\t\n\t    out[0] = 1 - yy - zz;\n\t    out[1] = yx + wz;\n\t    out[2] = zx - wy;\n\t    out[3] = 0;\n\t\n\t    out[4] = yx - wz;\n\t    out[5] = 1 - xx - zz;\n\t    out[6] = zy + wx;\n\t    out[7] = 0;\n\t\n\t    out[8] = zx + wy;\n\t    out[9] = zy - wx;\n\t    out[10] = 1 - xx - yy;\n\t    out[11] = 0;\n\t\n\t    out[12] = 0;\n\t    out[13] = 0;\n\t    out[14] = 0;\n\t    out[15] = 1;\n\t\n\t    return out;\n\t};\n\t\n\t/**\n\t * Generates a frustum matrix with the given bounds\n\t *\n\t * @param {mat4} out mat4 frustum matrix will be written into\n\t * @param {Number} left Left bound of the frustum\n\t * @param {Number} right Right bound of the frustum\n\t * @param {Number} bottom Bottom bound of the frustum\n\t * @param {Number} top Top bound of the frustum\n\t * @param {Number} near Near bound of the frustum\n\t * @param {Number} far Far bound of the frustum\n\t * @returns {mat4} out\n\t */\n\tmat4.frustum = function (out, left, right, bottom, top, near, far) {\n\t    var rl = 1 / (right - left),\n\t        tb = 1 / (top - bottom),\n\t        nf = 1 / (near - far);\n\t    out[0] = (near * 2) * rl;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 0;\n\t    out[4] = 0;\n\t    out[5] = (near * 2) * tb;\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = (right + left) * rl;\n\t    out[9] = (top + bottom) * tb;\n\t    out[10] = (far + near) * nf;\n\t    out[11] = -1;\n\t    out[12] = 0;\n\t    out[13] = 0;\n\t    out[14] = (far * near * 2) * nf;\n\t    out[15] = 0;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Generates a perspective projection matrix with the given bounds\n\t *\n\t * @param {mat4} out mat4 frustum matrix will be written into\n\t * @param {number} fovy Vertical field of view in radians\n\t * @param {number} aspect Aspect ratio. typically viewport width/height\n\t * @param {number} near Near bound of the frustum\n\t * @param {number} far Far bound of the frustum\n\t * @returns {mat4} out\n\t */\n\tmat4.perspective = function (out, fovy, aspect, near, far) {\n\t    var f = 1.0 / Math.tan(fovy / 2),\n\t        nf = 1 / (near - far);\n\t    out[0] = f / aspect;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 0;\n\t    out[4] = 0;\n\t    out[5] = f;\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = 0;\n\t    out[9] = 0;\n\t    out[10] = (far + near) * nf;\n\t    out[11] = -1;\n\t    out[12] = 0;\n\t    out[13] = 0;\n\t    out[14] = (2 * far * near) * nf;\n\t    out[15] = 0;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Generates a perspective projection matrix with the given field of view.\n\t * This is primarily useful for generating projection matrices to be used\n\t * with the still experiemental WebVR API.\n\t *\n\t * @param {mat4} out mat4 frustum matrix will be written into\n\t * @param {number} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n\t * @param {number} near Near bound of the frustum\n\t * @param {number} far Far bound of the frustum\n\t * @returns {mat4} out\n\t */\n\tmat4.perspectiveFromFieldOfView = function (out, fov, near, far) {\n\t    var upTan = Math.tan(fov.upDegrees * Math.PI/180.0),\n\t        downTan = Math.tan(fov.downDegrees * Math.PI/180.0),\n\t        leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0),\n\t        rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0),\n\t        xScale = 2.0 / (leftTan + rightTan),\n\t        yScale = 2.0 / (upTan + downTan);\n\t\n\t    out[0] = xScale;\n\t    out[1] = 0.0;\n\t    out[2] = 0.0;\n\t    out[3] = 0.0;\n\t    out[4] = 0.0;\n\t    out[5] = yScale;\n\t    out[6] = 0.0;\n\t    out[7] = 0.0;\n\t    out[8] = -((leftTan - rightTan) * xScale * 0.5);\n\t    out[9] = ((upTan - downTan) * yScale * 0.5);\n\t    out[10] = far / (near - far);\n\t    out[11] = -1.0;\n\t    out[12] = 0.0;\n\t    out[13] = 0.0;\n\t    out[14] = (far * near) / (near - far);\n\t    out[15] = 0.0;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Generates a orthogonal projection matrix with the given bounds\n\t *\n\t * @param {mat4} out mat4 frustum matrix will be written into\n\t * @param {number} left Left bound of the frustum\n\t * @param {number} right Right bound of the frustum\n\t * @param {number} bottom Bottom bound of the frustum\n\t * @param {number} top Top bound of the frustum\n\t * @param {number} near Near bound of the frustum\n\t * @param {number} far Far bound of the frustum\n\t * @returns {mat4} out\n\t */\n\tmat4.ortho = function (out, left, right, bottom, top, near, far) {\n\t    var lr = 1 / (left - right),\n\t        bt = 1 / (bottom - top),\n\t        nf = 1 / (near - far);\n\t    out[0] = -2 * lr;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 0;\n\t    out[4] = 0;\n\t    out[5] = -2 * bt;\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = 0;\n\t    out[9] = 0;\n\t    out[10] = 2 * nf;\n\t    out[11] = 0;\n\t    out[12] = (left + right) * lr;\n\t    out[13] = (top + bottom) * bt;\n\t    out[14] = (far + near) * nf;\n\t    out[15] = 1;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Generates a look-at matrix with the given eye position, focal point, and up axis\n\t *\n\t * @param {mat4} out mat4 frustum matrix will be written into\n\t * @param {vec3} eye Position of the viewer\n\t * @param {vec3} center Point the viewer is looking at\n\t * @param {vec3} up vec3 pointing up\n\t * @returns {mat4} out\n\t */\n\tmat4.lookAt = function (out, eye, center, up) {\n\t    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n\t        eyex = eye[0],\n\t        eyey = eye[1],\n\t        eyez = eye[2],\n\t        upx = up[0],\n\t        upy = up[1],\n\t        upz = up[2],\n\t        centerx = center[0],\n\t        centery = center[1],\n\t        centerz = center[2];\n\t\n\t    if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&\n\t        Math.abs(eyey - centery) < glMatrix.EPSILON &&\n\t        Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n\t        return mat4.identity(out);\n\t    }\n\t\n\t    z0 = eyex - centerx;\n\t    z1 = eyey - centery;\n\t    z2 = eyez - centerz;\n\t\n\t    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n\t    z0 *= len;\n\t    z1 *= len;\n\t    z2 *= len;\n\t\n\t    x0 = upy * z2 - upz * z1;\n\t    x1 = upz * z0 - upx * z2;\n\t    x2 = upx * z1 - upy * z0;\n\t    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n\t    if (!len) {\n\t        x0 = 0;\n\t        x1 = 0;\n\t        x2 = 0;\n\t    } else {\n\t        len = 1 / len;\n\t        x0 *= len;\n\t        x1 *= len;\n\t        x2 *= len;\n\t    }\n\t\n\t    y0 = z1 * x2 - z2 * x1;\n\t    y1 = z2 * x0 - z0 * x2;\n\t    y2 = z0 * x1 - z1 * x0;\n\t\n\t    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n\t    if (!len) {\n\t        y0 = 0;\n\t        y1 = 0;\n\t        y2 = 0;\n\t    } else {\n\t        len = 1 / len;\n\t        y0 *= len;\n\t        y1 *= len;\n\t        y2 *= len;\n\t    }\n\t\n\t    out[0] = x0;\n\t    out[1] = y0;\n\t    out[2] = z0;\n\t    out[3] = 0;\n\t    out[4] = x1;\n\t    out[5] = y1;\n\t    out[6] = z1;\n\t    out[7] = 0;\n\t    out[8] = x2;\n\t    out[9] = y2;\n\t    out[10] = z2;\n\t    out[11] = 0;\n\t    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n\t    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n\t    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n\t    out[15] = 1;\n\t\n\t    return out;\n\t};\n\t\n\t/**\n\t * Returns a string representation of a mat4\n\t *\n\t * @param {mat4} mat matrix to represent as a string\n\t * @returns {String} string representation of the matrix\n\t */\n\tmat4.str = function (a) {\n\t    return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n\t                    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n\t                    a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + \n\t                    a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n\t};\n\t\n\t/**\n\t * Returns Frobenius norm of a mat4\n\t *\n\t * @param {mat4} a the matrix to calculate Frobenius norm of\n\t * @returns {Number} Frobenius norm\n\t */\n\tmat4.frob = function (a) {\n\t    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n\t};\n\t\n\t\n\tmodule.exports = mat4;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tvar glMatrix = __webpack_require__(4);\n\tvar mat3 = __webpack_require__(7);\n\tvar vec3 = __webpack_require__(10);\n\tvar vec4 = __webpack_require__(11);\n\t\n\t/**\n\t * @class Quaternion\n\t * @name quat\n\t */\n\tvar quat = {};\n\t\n\t/**\n\t * Creates a new identity quat\n\t *\n\t * @returns {quat} a new quaternion\n\t */\n\tquat.create = function() {\n\t    var out = new glMatrix.ARRAY_TYPE(4);\n\t    out[0] = 0;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 1;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Sets a quaternion to represent the shortest rotation from one\n\t * vector to another.\n\t *\n\t * Both vectors are assumed to be unit length.\n\t *\n\t * @param {quat} out the receiving quaternion.\n\t * @param {vec3} a the initial vector\n\t * @param {vec3} b the destination vector\n\t * @returns {quat} out\n\t */\n\tquat.rotationTo = (function() {\n\t    var tmpvec3 = vec3.create();\n\t    var xUnitVec3 = vec3.fromValues(1,0,0);\n\t    var yUnitVec3 = vec3.fromValues(0,1,0);\n\t\n\t    return function(out, a, b) {\n\t        var dot = vec3.dot(a, b);\n\t        if (dot < -0.999999) {\n\t            vec3.cross(tmpvec3, xUnitVec3, a);\n\t            if (vec3.length(tmpvec3) < 0.000001)\n\t                vec3.cross(tmpvec3, yUnitVec3, a);\n\t            vec3.normalize(tmpvec3, tmpvec3);\n\t            quat.setAxisAngle(out, tmpvec3, Math.PI);\n\t            return out;\n\t        } else if (dot > 0.999999) {\n\t            out[0] = 0;\n\t            out[1] = 0;\n\t            out[2] = 0;\n\t            out[3] = 1;\n\t            return out;\n\t        } else {\n\t            vec3.cross(tmpvec3, a, b);\n\t            out[0] = tmpvec3[0];\n\t            out[1] = tmpvec3[1];\n\t            out[2] = tmpvec3[2];\n\t            out[3] = 1 + dot;\n\t            return quat.normalize(out, out);\n\t        }\n\t    };\n\t})();\n\t\n\t/**\n\t * Sets the specified quaternion with values corresponding to the given\n\t * axes. Each axis is a vec3 and is expected to be unit length and\n\t * perpendicular to all other specified axes.\n\t *\n\t * @param {vec3} view  the vector representing the viewing direction\n\t * @param {vec3} right the vector representing the local \"right\" direction\n\t * @param {vec3} up    the vector representing the local \"up\" direction\n\t * @returns {quat} out\n\t */\n\tquat.setAxes = (function() {\n\t    var matr = mat3.create();\n\t\n\t    return function(out, view, right, up) {\n\t        matr[0] = right[0];\n\t        matr[3] = right[1];\n\t        matr[6] = right[2];\n\t\n\t        matr[1] = up[0];\n\t        matr[4] = up[1];\n\t        matr[7] = up[2];\n\t\n\t        matr[2] = -view[0];\n\t        matr[5] = -view[1];\n\t        matr[8] = -view[2];\n\t\n\t        return quat.normalize(out, quat.fromMat3(out, matr));\n\t    };\n\t})();\n\t\n\t/**\n\t * Creates a new quat initialized with values from an existing quaternion\n\t *\n\t * @param {quat} a quaternion to clone\n\t * @returns {quat} a new quaternion\n\t * @function\n\t */\n\tquat.clone = vec4.clone;\n\t\n\t/**\n\t * Creates a new quat initialized with the given values\n\t *\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @param {Number} z Z component\n\t * @param {Number} w W component\n\t * @returns {quat} a new quaternion\n\t * @function\n\t */\n\tquat.fromValues = vec4.fromValues;\n\t\n\t/**\n\t * Copy the values from one quat to another\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a the source quaternion\n\t * @returns {quat} out\n\t * @function\n\t */\n\tquat.copy = vec4.copy;\n\t\n\t/**\n\t * Set the components of a quat to the given values\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @param {Number} z Z component\n\t * @param {Number} w W component\n\t * @returns {quat} out\n\t * @function\n\t */\n\tquat.set = vec4.set;\n\t\n\t/**\n\t * Set a quat to the identity quaternion\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @returns {quat} out\n\t */\n\tquat.identity = function(out) {\n\t    out[0] = 0;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 1;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Sets a quat from the given angle and rotation axis,\n\t * then returns it.\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {vec3} axis the axis around which to rotate\n\t * @param {Number} rad the angle in radians\n\t * @returns {quat} out\n\t **/\n\tquat.setAxisAngle = function(out, axis, rad) {\n\t    rad = rad * 0.5;\n\t    var s = Math.sin(rad);\n\t    out[0] = s * axis[0];\n\t    out[1] = s * axis[1];\n\t    out[2] = s * axis[2];\n\t    out[3] = Math.cos(rad);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Adds two quat's\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a the first operand\n\t * @param {quat} b the second operand\n\t * @returns {quat} out\n\t * @function\n\t */\n\tquat.add = vec4.add;\n\t\n\t/**\n\t * Multiplies two quat's\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a the first operand\n\t * @param {quat} b the second operand\n\t * @returns {quat} out\n\t */\n\tquat.multiply = function(out, a, b) {\n\t    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n\t        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\t\n\t    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n\t    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n\t    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n\t    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link quat.multiply}\n\t * @function\n\t */\n\tquat.mul = quat.multiply;\n\t\n\t/**\n\t * Scales a quat by a scalar number\n\t *\n\t * @param {quat} out the receiving vector\n\t * @param {quat} a the vector to scale\n\t * @param {Number} b amount to scale the vector by\n\t * @returns {quat} out\n\t * @function\n\t */\n\tquat.scale = vec4.scale;\n\t\n\t/**\n\t * Rotates a quaternion by the given angle about the X axis\n\t *\n\t * @param {quat} out quat receiving operation result\n\t * @param {quat} a quat to rotate\n\t * @param {number} rad angle (in radians) to rotate\n\t * @returns {quat} out\n\t */\n\tquat.rotateX = function (out, a, rad) {\n\t    rad *= 0.5; \n\t\n\t    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n\t        bx = Math.sin(rad), bw = Math.cos(rad);\n\t\n\t    out[0] = ax * bw + aw * bx;\n\t    out[1] = ay * bw + az * bx;\n\t    out[2] = az * bw - ay * bx;\n\t    out[3] = aw * bw - ax * bx;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Rotates a quaternion by the given angle about the Y axis\n\t *\n\t * @param {quat} out quat receiving operation result\n\t * @param {quat} a quat to rotate\n\t * @param {number} rad angle (in radians) to rotate\n\t * @returns {quat} out\n\t */\n\tquat.rotateY = function (out, a, rad) {\n\t    rad *= 0.5; \n\t\n\t    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n\t        by = Math.sin(rad), bw = Math.cos(rad);\n\t\n\t    out[0] = ax * bw - az * by;\n\t    out[1] = ay * bw + aw * by;\n\t    out[2] = az * bw + ax * by;\n\t    out[3] = aw * bw - ay * by;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Rotates a quaternion by the given angle about the Z axis\n\t *\n\t * @param {quat} out quat receiving operation result\n\t * @param {quat} a quat to rotate\n\t * @param {number} rad angle (in radians) to rotate\n\t * @returns {quat} out\n\t */\n\tquat.rotateZ = function (out, a, rad) {\n\t    rad *= 0.5; \n\t\n\t    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n\t        bz = Math.sin(rad), bw = Math.cos(rad);\n\t\n\t    out[0] = ax * bw + ay * bz;\n\t    out[1] = ay * bw - ax * bz;\n\t    out[2] = az * bw + aw * bz;\n\t    out[3] = aw * bw - az * bz;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the W component of a quat from the X, Y, and Z components.\n\t * Assumes that quaternion is 1 unit in length.\n\t * Any existing W component will be ignored.\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a quat to calculate W component of\n\t * @returns {quat} out\n\t */\n\tquat.calculateW = function (out, a) {\n\t    var x = a[0], y = a[1], z = a[2];\n\t\n\t    out[0] = x;\n\t    out[1] = y;\n\t    out[2] = z;\n\t    out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the dot product of two quat's\n\t *\n\t * @param {quat} a the first operand\n\t * @param {quat} b the second operand\n\t * @returns {Number} dot product of a and b\n\t * @function\n\t */\n\tquat.dot = vec4.dot;\n\t\n\t/**\n\t * Performs a linear interpolation between two quat's\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a the first operand\n\t * @param {quat} b the second operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {quat} out\n\t * @function\n\t */\n\tquat.lerp = vec4.lerp;\n\t\n\t/**\n\t * Performs a spherical linear interpolation between two quat\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a the first operand\n\t * @param {quat} b the second operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {quat} out\n\t */\n\tquat.slerp = function (out, a, b, t) {\n\t    // benchmarks:\n\t    //    http://jsperf.com/quaternion-slerp-implementations\n\t\n\t    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n\t        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\t\n\t    var        omega, cosom, sinom, scale0, scale1;\n\t\n\t    // calc cosine\n\t    cosom = ax * bx + ay * by + az * bz + aw * bw;\n\t    // adjust signs (if necessary)\n\t    if ( cosom < 0.0 ) {\n\t        cosom = -cosom;\n\t        bx = - bx;\n\t        by = - by;\n\t        bz = - bz;\n\t        bw = - bw;\n\t    }\n\t    // calculate coefficients\n\t    if ( (1.0 - cosom) > 0.000001 ) {\n\t        // standard case (slerp)\n\t        omega  = Math.acos(cosom);\n\t        sinom  = Math.sin(omega);\n\t        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n\t        scale1 = Math.sin(t * omega) / sinom;\n\t    } else {        \n\t        // \"from\" and \"to\" quaternions are very close \n\t        //  ... so we can do a linear interpolation\n\t        scale0 = 1.0 - t;\n\t        scale1 = t;\n\t    }\n\t    // calculate final values\n\t    out[0] = scale0 * ax + scale1 * bx;\n\t    out[1] = scale0 * ay + scale1 * by;\n\t    out[2] = scale0 * az + scale1 * bz;\n\t    out[3] = scale0 * aw + scale1 * bw;\n\t    \n\t    return out;\n\t};\n\t\n\t/**\n\t * Performs a spherical linear interpolation with two control points\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a the first operand\n\t * @param {quat} b the second operand\n\t * @param {quat} c the third operand\n\t * @param {quat} d the fourth operand\n\t * @param {Number} t interpolation amount\n\t * @returns {quat} out\n\t */\n\tquat.sqlerp = (function () {\n\t  var temp1 = quat.create();\n\t  var temp2 = quat.create();\n\t  \n\t  return function (out, a, b, c, d, t) {\n\t    quat.slerp(temp1, a, d, t);\n\t    quat.slerp(temp2, b, c, t);\n\t    quat.slerp(out, temp1, temp2, 2 * t * (1 - t));\n\t    \n\t    return out;\n\t  };\n\t}());\n\t\n\t/**\n\t * Calculates the inverse of a quat\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a quat to calculate inverse of\n\t * @returns {quat} out\n\t */\n\tquat.invert = function(out, a) {\n\t    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n\t        dot = a0*a0 + a1*a1 + a2*a2 + a3*a3,\n\t        invDot = dot ? 1.0/dot : 0;\n\t    \n\t    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\t\n\t    out[0] = -a0*invDot;\n\t    out[1] = -a1*invDot;\n\t    out[2] = -a2*invDot;\n\t    out[3] = a3*invDot;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the conjugate of a quat\n\t * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a quat to calculate conjugate of\n\t * @returns {quat} out\n\t */\n\tquat.conjugate = function (out, a) {\n\t    out[0] = -a[0];\n\t    out[1] = -a[1];\n\t    out[2] = -a[2];\n\t    out[3] = a[3];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the length of a quat\n\t *\n\t * @param {quat} a vector to calculate length of\n\t * @returns {Number} length of a\n\t * @function\n\t */\n\tquat.length = vec4.length;\n\t\n\t/**\n\t * Alias for {@link quat.length}\n\t * @function\n\t */\n\tquat.len = quat.length;\n\t\n\t/**\n\t * Calculates the squared length of a quat\n\t *\n\t * @param {quat} a vector to calculate squared length of\n\t * @returns {Number} squared length of a\n\t * @function\n\t */\n\tquat.squaredLength = vec4.squaredLength;\n\t\n\t/**\n\t * Alias for {@link quat.squaredLength}\n\t * @function\n\t */\n\tquat.sqrLen = quat.squaredLength;\n\t\n\t/**\n\t * Normalize a quat\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a quaternion to normalize\n\t * @returns {quat} out\n\t * @function\n\t */\n\tquat.normalize = vec4.normalize;\n\t\n\t/**\n\t * Creates a quaternion from the given 3x3 rotation matrix.\n\t *\n\t * NOTE: The resultant quaternion is not normalized, so you should be sure\n\t * to renormalize the quaternion yourself where necessary.\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {mat3} m rotation matrix\n\t * @returns {quat} out\n\t * @function\n\t */\n\tquat.fromMat3 = function(out, m) {\n\t    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n\t    // article \"Quaternion Calculus and Fast Animation\".\n\t    var fTrace = m[0] + m[4] + m[8];\n\t    var fRoot;\n\t\n\t    if ( fTrace > 0.0 ) {\n\t        // |w| > 1/2, may as well choose w > 1/2\n\t        fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n\t        out[3] = 0.5 * fRoot;\n\t        fRoot = 0.5/fRoot;  // 1/(4w)\n\t        out[0] = (m[5]-m[7])*fRoot;\n\t        out[1] = (m[6]-m[2])*fRoot;\n\t        out[2] = (m[1]-m[3])*fRoot;\n\t    } else {\n\t        // |w| <= 1/2\n\t        var i = 0;\n\t        if ( m[4] > m[0] )\n\t          i = 1;\n\t        if ( m[8] > m[i*3+i] )\n\t          i = 2;\n\t        var j = (i+1)%3;\n\t        var k = (i+2)%3;\n\t        \n\t        fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\n\t        out[i] = 0.5 * fRoot;\n\t        fRoot = 0.5 / fRoot;\n\t        out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\n\t        out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\n\t        out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\n\t    }\n\t    \n\t    return out;\n\t};\n\t\n\t/**\n\t * Returns a string representation of a quatenion\n\t *\n\t * @param {quat} vec vector to represent as a string\n\t * @returns {String} string representation of the vector\n\t */\n\tquat.str = function (a) {\n\t    return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n\t};\n\t\n\tmodule.exports = quat;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tvar glMatrix = __webpack_require__(4);\n\t\n\t/**\n\t * @class 3 Dimensional Vector\n\t * @name vec3\n\t */\n\tvar vec3 = {};\n\t\n\t/**\n\t * Creates a new, empty vec3\n\t *\n\t * @returns {vec3} a new 3D vector\n\t */\n\tvec3.create = function() {\n\t    var out = new glMatrix.ARRAY_TYPE(3);\n\t    out[0] = 0;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a new vec3 initialized with values from an existing vector\n\t *\n\t * @param {vec3} a vector to clone\n\t * @returns {vec3} a new 3D vector\n\t */\n\tvec3.clone = function(a) {\n\t    var out = new glMatrix.ARRAY_TYPE(3);\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a new vec3 initialized with the given values\n\t *\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @param {Number} z Z component\n\t * @returns {vec3} a new 3D vector\n\t */\n\tvec3.fromValues = function(x, y, z) {\n\t    var out = new glMatrix.ARRAY_TYPE(3);\n\t    out[0] = x;\n\t    out[1] = y;\n\t    out[2] = z;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Copy the values from one vec3 to another\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the source vector\n\t * @returns {vec3} out\n\t */\n\tvec3.copy = function(out, a) {\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Set the components of a vec3 to the given values\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @param {Number} z Z component\n\t * @returns {vec3} out\n\t */\n\tvec3.set = function(out, x, y, z) {\n\t    out[0] = x;\n\t    out[1] = y;\n\t    out[2] = z;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Adds two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tvec3.add = function(out, a, b) {\n\t    out[0] = a[0] + b[0];\n\t    out[1] = a[1] + b[1];\n\t    out[2] = a[2] + b[2];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Subtracts vector b from vector a\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tvec3.subtract = function(out, a, b) {\n\t    out[0] = a[0] - b[0];\n\t    out[1] = a[1] - b[1];\n\t    out[2] = a[2] - b[2];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec3.subtract}\n\t * @function\n\t */\n\tvec3.sub = vec3.subtract;\n\t\n\t/**\n\t * Multiplies two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tvec3.multiply = function(out, a, b) {\n\t    out[0] = a[0] * b[0];\n\t    out[1] = a[1] * b[1];\n\t    out[2] = a[2] * b[2];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec3.multiply}\n\t * @function\n\t */\n\tvec3.mul = vec3.multiply;\n\t\n\t/**\n\t * Divides two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tvec3.divide = function(out, a, b) {\n\t    out[0] = a[0] / b[0];\n\t    out[1] = a[1] / b[1];\n\t    out[2] = a[2] / b[2];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec3.divide}\n\t * @function\n\t */\n\tvec3.div = vec3.divide;\n\t\n\t/**\n\t * Returns the minimum of two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tvec3.min = function(out, a, b) {\n\t    out[0] = Math.min(a[0], b[0]);\n\t    out[1] = Math.min(a[1], b[1]);\n\t    out[2] = Math.min(a[2], b[2]);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Returns the maximum of two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tvec3.max = function(out, a, b) {\n\t    out[0] = Math.max(a[0], b[0]);\n\t    out[1] = Math.max(a[1], b[1]);\n\t    out[2] = Math.max(a[2], b[2]);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Scales a vec3 by a scalar number\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the vector to scale\n\t * @param {Number} b amount to scale the vector by\n\t * @returns {vec3} out\n\t */\n\tvec3.scale = function(out, a, b) {\n\t    out[0] = a[0] * b;\n\t    out[1] = a[1] * b;\n\t    out[2] = a[2] * b;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Adds two vec3's after scaling the second operand by a scalar value\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @param {Number} scale the amount to scale b by before adding\n\t * @returns {vec3} out\n\t */\n\tvec3.scaleAndAdd = function(out, a, b, scale) {\n\t    out[0] = a[0] + (b[0] * scale);\n\t    out[1] = a[1] + (b[1] * scale);\n\t    out[2] = a[2] + (b[2] * scale);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the euclidian distance between two vec3's\n\t *\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {Number} distance between a and b\n\t */\n\tvec3.distance = function(a, b) {\n\t    var x = b[0] - a[0],\n\t        y = b[1] - a[1],\n\t        z = b[2] - a[2];\n\t    return Math.sqrt(x*x + y*y + z*z);\n\t};\n\t\n\t/**\n\t * Alias for {@link vec3.distance}\n\t * @function\n\t */\n\tvec3.dist = vec3.distance;\n\t\n\t/**\n\t * Calculates the squared euclidian distance between two vec3's\n\t *\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {Number} squared distance between a and b\n\t */\n\tvec3.squaredDistance = function(a, b) {\n\t    var x = b[0] - a[0],\n\t        y = b[1] - a[1],\n\t        z = b[2] - a[2];\n\t    return x*x + y*y + z*z;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec3.squaredDistance}\n\t * @function\n\t */\n\tvec3.sqrDist = vec3.squaredDistance;\n\t\n\t/**\n\t * Calculates the length of a vec3\n\t *\n\t * @param {vec3} a vector to calculate length of\n\t * @returns {Number} length of a\n\t */\n\tvec3.length = function (a) {\n\t    var x = a[0],\n\t        y = a[1],\n\t        z = a[2];\n\t    return Math.sqrt(x*x + y*y + z*z);\n\t};\n\t\n\t/**\n\t * Alias for {@link vec3.length}\n\t * @function\n\t */\n\tvec3.len = vec3.length;\n\t\n\t/**\n\t * Calculates the squared length of a vec3\n\t *\n\t * @param {vec3} a vector to calculate squared length of\n\t * @returns {Number} squared length of a\n\t */\n\tvec3.squaredLength = function (a) {\n\t    var x = a[0],\n\t        y = a[1],\n\t        z = a[2];\n\t    return x*x + y*y + z*z;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec3.squaredLength}\n\t * @function\n\t */\n\tvec3.sqrLen = vec3.squaredLength;\n\t\n\t/**\n\t * Negates the components of a vec3\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a vector to negate\n\t * @returns {vec3} out\n\t */\n\tvec3.negate = function(out, a) {\n\t    out[0] = -a[0];\n\t    out[1] = -a[1];\n\t    out[2] = -a[2];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Returns the inverse of the components of a vec3\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a vector to invert\n\t * @returns {vec3} out\n\t */\n\tvec3.inverse = function(out, a) {\n\t  out[0] = 1.0 / a[0];\n\t  out[1] = 1.0 / a[1];\n\t  out[2] = 1.0 / a[2];\n\t  return out;\n\t};\n\t\n\t/**\n\t * Normalize a vec3\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a vector to normalize\n\t * @returns {vec3} out\n\t */\n\tvec3.normalize = function(out, a) {\n\t    var x = a[0],\n\t        y = a[1],\n\t        z = a[2];\n\t    var len = x*x + y*y + z*z;\n\t    if (len > 0) {\n\t        //TODO: evaluate use of glm_invsqrt here?\n\t        len = 1 / Math.sqrt(len);\n\t        out[0] = a[0] * len;\n\t        out[1] = a[1] * len;\n\t        out[2] = a[2] * len;\n\t    }\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the dot product of two vec3's\n\t *\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {Number} dot product of a and b\n\t */\n\tvec3.dot = function (a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t};\n\t\n\t/**\n\t * Computes the cross product of two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tvec3.cross = function(out, a, b) {\n\t    var ax = a[0], ay = a[1], az = a[2],\n\t        bx = b[0], by = b[1], bz = b[2];\n\t\n\t    out[0] = ay * bz - az * by;\n\t    out[1] = az * bx - ax * bz;\n\t    out[2] = ax * by - ay * bx;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Performs a linear interpolation between two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {vec3} out\n\t */\n\tvec3.lerp = function (out, a, b, t) {\n\t    var ax = a[0],\n\t        ay = a[1],\n\t        az = a[2];\n\t    out[0] = ax + t * (b[0] - ax);\n\t    out[1] = ay + t * (b[1] - ay);\n\t    out[2] = az + t * (b[2] - az);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Performs a hermite interpolation with two control points\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @param {vec3} c the third operand\n\t * @param {vec3} d the fourth operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {vec3} out\n\t */\n\tvec3.hermite = function (out, a, b, c, d, t) {\n\t  var factorTimes2 = t * t,\n\t      factor1 = factorTimes2 * (2 * t - 3) + 1,\n\t      factor2 = factorTimes2 * (t - 2) + t,\n\t      factor3 = factorTimes2 * (t - 1),\n\t      factor4 = factorTimes2 * (3 - 2 * t);\n\t  \n\t  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n\t  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n\t  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\t  \n\t  return out;\n\t};\n\t\n\t/**\n\t * Performs a bezier interpolation with two control points\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @param {vec3} c the third operand\n\t * @param {vec3} d the fourth operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {vec3} out\n\t */\n\tvec3.bezier = function (out, a, b, c, d, t) {\n\t  var inverseFactor = 1 - t,\n\t      inverseFactorTimesTwo = inverseFactor * inverseFactor,\n\t      factorTimes2 = t * t,\n\t      factor1 = inverseFactorTimesTwo * inverseFactor,\n\t      factor2 = 3 * t * inverseFactorTimesTwo,\n\t      factor3 = 3 * factorTimes2 * inverseFactor,\n\t      factor4 = factorTimes2 * t;\n\t  \n\t  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n\t  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n\t  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\t  \n\t  return out;\n\t};\n\t\n\t/**\n\t * Generates a random vector with the given scale\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n\t * @returns {vec3} out\n\t */\n\tvec3.random = function (out, scale) {\n\t    scale = scale || 1.0;\n\t\n\t    var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n\t    var z = (glMatrix.RANDOM() * 2.0) - 1.0;\n\t    var zScale = Math.sqrt(1.0-z*z) * scale;\n\t\n\t    out[0] = Math.cos(r) * zScale;\n\t    out[1] = Math.sin(r) * zScale;\n\t    out[2] = z * scale;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec3 with a mat4.\n\t * 4th vector component is implicitly '1'\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the vector to transform\n\t * @param {mat4} m matrix to transform with\n\t * @returns {vec3} out\n\t */\n\tvec3.transformMat4 = function(out, a, m) {\n\t    var x = a[0], y = a[1], z = a[2],\n\t        w = m[3] * x + m[7] * y + m[11] * z + m[15];\n\t    w = w || 1.0;\n\t    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n\t    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n\t    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec3 with a mat3.\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the vector to transform\n\t * @param {mat4} m the 3x3 matrix to transform with\n\t * @returns {vec3} out\n\t */\n\tvec3.transformMat3 = function(out, a, m) {\n\t    var x = a[0], y = a[1], z = a[2];\n\t    out[0] = x * m[0] + y * m[3] + z * m[6];\n\t    out[1] = x * m[1] + y * m[4] + z * m[7];\n\t    out[2] = x * m[2] + y * m[5] + z * m[8];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec3 with a quat\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the vector to transform\n\t * @param {quat} q quaternion to transform with\n\t * @returns {vec3} out\n\t */\n\tvec3.transformQuat = function(out, a, q) {\n\t    // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\t\n\t    var x = a[0], y = a[1], z = a[2],\n\t        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\t\n\t        // calculate quat * vec\n\t        ix = qw * x + qy * z - qz * y,\n\t        iy = qw * y + qz * x - qx * z,\n\t        iz = qw * z + qx * y - qy * x,\n\t        iw = -qx * x - qy * y - qz * z;\n\t\n\t    // calculate result * inverse quat\n\t    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n\t    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n\t    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Rotate a 3D vector around the x-axis\n\t * @param {vec3} out The receiving vec3\n\t * @param {vec3} a The vec3 point to rotate\n\t * @param {vec3} b The origin of the rotation\n\t * @param {Number} c The angle of rotation\n\t * @returns {vec3} out\n\t */\n\tvec3.rotateX = function(out, a, b, c){\n\t   var p = [], r=[];\n\t\t  //Translate point to the origin\n\t\t  p[0] = a[0] - b[0];\n\t\t  p[1] = a[1] - b[1];\n\t  \tp[2] = a[2] - b[2];\n\t\n\t\t  //perform rotation\n\t\t  r[0] = p[0];\n\t\t  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\n\t\t  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\n\t\n\t\t  //translate to correct position\n\t\t  out[0] = r[0] + b[0];\n\t\t  out[1] = r[1] + b[1];\n\t\t  out[2] = r[2] + b[2];\n\t\n\t  \treturn out;\n\t};\n\t\n\t/**\n\t * Rotate a 3D vector around the y-axis\n\t * @param {vec3} out The receiving vec3\n\t * @param {vec3} a The vec3 point to rotate\n\t * @param {vec3} b The origin of the rotation\n\t * @param {Number} c The angle of rotation\n\t * @returns {vec3} out\n\t */\n\tvec3.rotateY = function(out, a, b, c){\n\t  \tvar p = [], r=[];\n\t  \t//Translate point to the origin\n\t  \tp[0] = a[0] - b[0];\n\t  \tp[1] = a[1] - b[1];\n\t  \tp[2] = a[2] - b[2];\n\t  \n\t  \t//perform rotation\n\t  \tr[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\n\t  \tr[1] = p[1];\n\t  \tr[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\n\t  \n\t  \t//translate to correct position\n\t  \tout[0] = r[0] + b[0];\n\t  \tout[1] = r[1] + b[1];\n\t  \tout[2] = r[2] + b[2];\n\t  \n\t  \treturn out;\n\t};\n\t\n\t/**\n\t * Rotate a 3D vector around the z-axis\n\t * @param {vec3} out The receiving vec3\n\t * @param {vec3} a The vec3 point to rotate\n\t * @param {vec3} b The origin of the rotation\n\t * @param {Number} c The angle of rotation\n\t * @returns {vec3} out\n\t */\n\tvec3.rotateZ = function(out, a, b, c){\n\t  \tvar p = [], r=[];\n\t  \t//Translate point to the origin\n\t  \tp[0] = a[0] - b[0];\n\t  \tp[1] = a[1] - b[1];\n\t  \tp[2] = a[2] - b[2];\n\t  \n\t  \t//perform rotation\n\t  \tr[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\n\t  \tr[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\n\t  \tr[2] = p[2];\n\t  \n\t  \t//translate to correct position\n\t  \tout[0] = r[0] + b[0];\n\t  \tout[1] = r[1] + b[1];\n\t  \tout[2] = r[2] + b[2];\n\t  \n\t  \treturn out;\n\t};\n\t\n\t/**\n\t * Perform some operation over an array of vec3s.\n\t *\n\t * @param {Array} a the array of vectors to iterate over\n\t * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n\t * @param {Number} offset Number of elements to skip at the beginning of the array\n\t * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n\t * @param {Function} fn Function to call for each vector in the array\n\t * @param {Object} [arg] additional argument to pass to fn\n\t * @returns {Array} a\n\t * @function\n\t */\n\tvec3.forEach = (function() {\n\t    var vec = vec3.create();\n\t\n\t    return function(a, stride, offset, count, fn, arg) {\n\t        var i, l;\n\t        if(!stride) {\n\t            stride = 3;\n\t        }\n\t\n\t        if(!offset) {\n\t            offset = 0;\n\t        }\n\t        \n\t        if(count) {\n\t            l = Math.min((count * stride) + offset, a.length);\n\t        } else {\n\t            l = a.length;\n\t        }\n\t\n\t        for(i = offset; i < l; i += stride) {\n\t            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\n\t            fn(vec, vec, arg);\n\t            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\n\t        }\n\t        \n\t        return a;\n\t    };\n\t})();\n\t\n\t/**\n\t * Get the angle between two 3D vectors\n\t * @param {vec3} a The first operand\n\t * @param {vec3} b The second operand\n\t * @returns {Number} The angle in radians\n\t */\n\tvec3.angle = function(a, b) {\n\t   \n\t    var tempA = vec3.fromValues(a[0], a[1], a[2]);\n\t    var tempB = vec3.fromValues(b[0], b[1], b[2]);\n\t \n\t    vec3.normalize(tempA, tempA);\n\t    vec3.normalize(tempB, tempB);\n\t \n\t    var cosine = vec3.dot(tempA, tempB);\n\t\n\t    if(cosine > 1.0){\n\t        return 0;\n\t    } else {\n\t        return Math.acos(cosine);\n\t    }     \n\t};\n\t\n\t/**\n\t * Returns a string representation of a vector\n\t *\n\t * @param {vec3} vec vector to represent as a string\n\t * @returns {String} string representation of the vector\n\t */\n\tvec3.str = function (a) {\n\t    return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n\t};\n\t\n\tmodule.exports = vec3;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tvar glMatrix = __webpack_require__(4);\n\t\n\t/**\n\t * @class 4 Dimensional Vector\n\t * @name vec4\n\t */\n\tvar vec4 = {};\n\t\n\t/**\n\t * Creates a new, empty vec4\n\t *\n\t * @returns {vec4} a new 4D vector\n\t */\n\tvec4.create = function() {\n\t    var out = new glMatrix.ARRAY_TYPE(4);\n\t    out[0] = 0;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 0;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a new vec4 initialized with values from an existing vector\n\t *\n\t * @param {vec4} a vector to clone\n\t * @returns {vec4} a new 4D vector\n\t */\n\tvec4.clone = function(a) {\n\t    var out = new glMatrix.ARRAY_TYPE(4);\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    out[3] = a[3];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a new vec4 initialized with the given values\n\t *\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @param {Number} z Z component\n\t * @param {Number} w W component\n\t * @returns {vec4} a new 4D vector\n\t */\n\tvec4.fromValues = function(x, y, z, w) {\n\t    var out = new glMatrix.ARRAY_TYPE(4);\n\t    out[0] = x;\n\t    out[1] = y;\n\t    out[2] = z;\n\t    out[3] = w;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Copy the values from one vec4 to another\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the source vector\n\t * @returns {vec4} out\n\t */\n\tvec4.copy = function(out, a) {\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    out[3] = a[3];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Set the components of a vec4 to the given values\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @param {Number} z Z component\n\t * @param {Number} w W component\n\t * @returns {vec4} out\n\t */\n\tvec4.set = function(out, x, y, z, w) {\n\t    out[0] = x;\n\t    out[1] = y;\n\t    out[2] = z;\n\t    out[3] = w;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Adds two vec4's\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {vec4} out\n\t */\n\tvec4.add = function(out, a, b) {\n\t    out[0] = a[0] + b[0];\n\t    out[1] = a[1] + b[1];\n\t    out[2] = a[2] + b[2];\n\t    out[3] = a[3] + b[3];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Subtracts vector b from vector a\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {vec4} out\n\t */\n\tvec4.subtract = function(out, a, b) {\n\t    out[0] = a[0] - b[0];\n\t    out[1] = a[1] - b[1];\n\t    out[2] = a[2] - b[2];\n\t    out[3] = a[3] - b[3];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec4.subtract}\n\t * @function\n\t */\n\tvec4.sub = vec4.subtract;\n\t\n\t/**\n\t * Multiplies two vec4's\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {vec4} out\n\t */\n\tvec4.multiply = function(out, a, b) {\n\t    out[0] = a[0] * b[0];\n\t    out[1] = a[1] * b[1];\n\t    out[2] = a[2] * b[2];\n\t    out[3] = a[3] * b[3];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec4.multiply}\n\t * @function\n\t */\n\tvec4.mul = vec4.multiply;\n\t\n\t/**\n\t * Divides two vec4's\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {vec4} out\n\t */\n\tvec4.divide = function(out, a, b) {\n\t    out[0] = a[0] / b[0];\n\t    out[1] = a[1] / b[1];\n\t    out[2] = a[2] / b[2];\n\t    out[3] = a[3] / b[3];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec4.divide}\n\t * @function\n\t */\n\tvec4.div = vec4.divide;\n\t\n\t/**\n\t * Returns the minimum of two vec4's\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {vec4} out\n\t */\n\tvec4.min = function(out, a, b) {\n\t    out[0] = Math.min(a[0], b[0]);\n\t    out[1] = Math.min(a[1], b[1]);\n\t    out[2] = Math.min(a[2], b[2]);\n\t    out[3] = Math.min(a[3], b[3]);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Returns the maximum of two vec4's\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {vec4} out\n\t */\n\tvec4.max = function(out, a, b) {\n\t    out[0] = Math.max(a[0], b[0]);\n\t    out[1] = Math.max(a[1], b[1]);\n\t    out[2] = Math.max(a[2], b[2]);\n\t    out[3] = Math.max(a[3], b[3]);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Scales a vec4 by a scalar number\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the vector to scale\n\t * @param {Number} b amount to scale the vector by\n\t * @returns {vec4} out\n\t */\n\tvec4.scale = function(out, a, b) {\n\t    out[0] = a[0] * b;\n\t    out[1] = a[1] * b;\n\t    out[2] = a[2] * b;\n\t    out[3] = a[3] * b;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Adds two vec4's after scaling the second operand by a scalar value\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @param {Number} scale the amount to scale b by before adding\n\t * @returns {vec4} out\n\t */\n\tvec4.scaleAndAdd = function(out, a, b, scale) {\n\t    out[0] = a[0] + (b[0] * scale);\n\t    out[1] = a[1] + (b[1] * scale);\n\t    out[2] = a[2] + (b[2] * scale);\n\t    out[3] = a[3] + (b[3] * scale);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the euclidian distance between two vec4's\n\t *\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {Number} distance between a and b\n\t */\n\tvec4.distance = function(a, b) {\n\t    var x = b[0] - a[0],\n\t        y = b[1] - a[1],\n\t        z = b[2] - a[2],\n\t        w = b[3] - a[3];\n\t    return Math.sqrt(x*x + y*y + z*z + w*w);\n\t};\n\t\n\t/**\n\t * Alias for {@link vec4.distance}\n\t * @function\n\t */\n\tvec4.dist = vec4.distance;\n\t\n\t/**\n\t * Calculates the squared euclidian distance between two vec4's\n\t *\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {Number} squared distance between a and b\n\t */\n\tvec4.squaredDistance = function(a, b) {\n\t    var x = b[0] - a[0],\n\t        y = b[1] - a[1],\n\t        z = b[2] - a[2],\n\t        w = b[3] - a[3];\n\t    return x*x + y*y + z*z + w*w;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec4.squaredDistance}\n\t * @function\n\t */\n\tvec4.sqrDist = vec4.squaredDistance;\n\t\n\t/**\n\t * Calculates the length of a vec4\n\t *\n\t * @param {vec4} a vector to calculate length of\n\t * @returns {Number} length of a\n\t */\n\tvec4.length = function (a) {\n\t    var x = a[0],\n\t        y = a[1],\n\t        z = a[2],\n\t        w = a[3];\n\t    return Math.sqrt(x*x + y*y + z*z + w*w);\n\t};\n\t\n\t/**\n\t * Alias for {@link vec4.length}\n\t * @function\n\t */\n\tvec4.len = vec4.length;\n\t\n\t/**\n\t * Calculates the squared length of a vec4\n\t *\n\t * @param {vec4} a vector to calculate squared length of\n\t * @returns {Number} squared length of a\n\t */\n\tvec4.squaredLength = function (a) {\n\t    var x = a[0],\n\t        y = a[1],\n\t        z = a[2],\n\t        w = a[3];\n\t    return x*x + y*y + z*z + w*w;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec4.squaredLength}\n\t * @function\n\t */\n\tvec4.sqrLen = vec4.squaredLength;\n\t\n\t/**\n\t * Negates the components of a vec4\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a vector to negate\n\t * @returns {vec4} out\n\t */\n\tvec4.negate = function(out, a) {\n\t    out[0] = -a[0];\n\t    out[1] = -a[1];\n\t    out[2] = -a[2];\n\t    out[3] = -a[3];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Returns the inverse of the components of a vec4\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a vector to invert\n\t * @returns {vec4} out\n\t */\n\tvec4.inverse = function(out, a) {\n\t  out[0] = 1.0 / a[0];\n\t  out[1] = 1.0 / a[1];\n\t  out[2] = 1.0 / a[2];\n\t  out[3] = 1.0 / a[3];\n\t  return out;\n\t};\n\t\n\t/**\n\t * Normalize a vec4\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a vector to normalize\n\t * @returns {vec4} out\n\t */\n\tvec4.normalize = function(out, a) {\n\t    var x = a[0],\n\t        y = a[1],\n\t        z = a[2],\n\t        w = a[3];\n\t    var len = x*x + y*y + z*z + w*w;\n\t    if (len > 0) {\n\t        len = 1 / Math.sqrt(len);\n\t        out[0] = x * len;\n\t        out[1] = y * len;\n\t        out[2] = z * len;\n\t        out[3] = w * len;\n\t    }\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the dot product of two vec4's\n\t *\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {Number} dot product of a and b\n\t */\n\tvec4.dot = function (a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t};\n\t\n\t/**\n\t * Performs a linear interpolation between two vec4's\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {vec4} out\n\t */\n\tvec4.lerp = function (out, a, b, t) {\n\t    var ax = a[0],\n\t        ay = a[1],\n\t        az = a[2],\n\t        aw = a[3];\n\t    out[0] = ax + t * (b[0] - ax);\n\t    out[1] = ay + t * (b[1] - ay);\n\t    out[2] = az + t * (b[2] - az);\n\t    out[3] = aw + t * (b[3] - aw);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Generates a random vector with the given scale\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n\t * @returns {vec4} out\n\t */\n\tvec4.random = function (out, scale) {\n\t    scale = scale || 1.0;\n\t\n\t    //TODO: This is a pretty awful way of doing this. Find something better.\n\t    out[0] = glMatrix.RANDOM();\n\t    out[1] = glMatrix.RANDOM();\n\t    out[2] = glMatrix.RANDOM();\n\t    out[3] = glMatrix.RANDOM();\n\t    vec4.normalize(out, out);\n\t    vec4.scale(out, out, scale);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec4 with a mat4.\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the vector to transform\n\t * @param {mat4} m matrix to transform with\n\t * @returns {vec4} out\n\t */\n\tvec4.transformMat4 = function(out, a, m) {\n\t    var x = a[0], y = a[1], z = a[2], w = a[3];\n\t    out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n\t    out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n\t    out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n\t    out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec4 with a quat\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the vector to transform\n\t * @param {quat} q quaternion to transform with\n\t * @returns {vec4} out\n\t */\n\tvec4.transformQuat = function(out, a, q) {\n\t    var x = a[0], y = a[1], z = a[2],\n\t        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\t\n\t        // calculate quat * vec\n\t        ix = qw * x + qy * z - qz * y,\n\t        iy = qw * y + qz * x - qx * z,\n\t        iz = qw * z + qx * y - qy * x,\n\t        iw = -qx * x - qy * y - qz * z;\n\t\n\t    // calculate result * inverse quat\n\t    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n\t    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n\t    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\t    out[3] = a[3];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Perform some operation over an array of vec4s.\n\t *\n\t * @param {Array} a the array of vectors to iterate over\n\t * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n\t * @param {Number} offset Number of elements to skip at the beginning of the array\n\t * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n\t * @param {Function} fn Function to call for each vector in the array\n\t * @param {Object} [arg] additional argument to pass to fn\n\t * @returns {Array} a\n\t * @function\n\t */\n\tvec4.forEach = (function() {\n\t    var vec = vec4.create();\n\t\n\t    return function(a, stride, offset, count, fn, arg) {\n\t        var i, l;\n\t        if(!stride) {\n\t            stride = 4;\n\t        }\n\t\n\t        if(!offset) {\n\t            offset = 0;\n\t        }\n\t        \n\t        if(count) {\n\t            l = Math.min((count * stride) + offset, a.length);\n\t        } else {\n\t            l = a.length;\n\t        }\n\t\n\t        for(i = offset; i < l; i += stride) {\n\t            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\n\t            fn(vec, vec, arg);\n\t            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\n\t        }\n\t        \n\t        return a;\n\t    };\n\t})();\n\t\n\t/**\n\t * Returns a string representation of a vector\n\t *\n\t * @param {vec4} vec vector to represent as a string\n\t * @returns {String} string representation of the vector\n\t */\n\tvec4.str = function (a) {\n\t    return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n\t};\n\t\n\tmodule.exports = vec4;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tvar glMatrix = __webpack_require__(4);\n\t\n\t/**\n\t * @class 2 Dimensional Vector\n\t * @name vec2\n\t */\n\tvar vec2 = {};\n\t\n\t/**\n\t * Creates a new, empty vec2\n\t *\n\t * @returns {vec2} a new 2D vector\n\t */\n\tvec2.create = function() {\n\t    var out = new glMatrix.ARRAY_TYPE(2);\n\t    out[0] = 0;\n\t    out[1] = 0;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a new vec2 initialized with values from an existing vector\n\t *\n\t * @param {vec2} a vector to clone\n\t * @returns {vec2} a new 2D vector\n\t */\n\tvec2.clone = function(a) {\n\t    var out = new glMatrix.ARRAY_TYPE(2);\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a new vec2 initialized with the given values\n\t *\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @returns {vec2} a new 2D vector\n\t */\n\tvec2.fromValues = function(x, y) {\n\t    var out = new glMatrix.ARRAY_TYPE(2);\n\t    out[0] = x;\n\t    out[1] = y;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Copy the values from one vec2 to another\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the source vector\n\t * @returns {vec2} out\n\t */\n\tvec2.copy = function(out, a) {\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Set the components of a vec2 to the given values\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @returns {vec2} out\n\t */\n\tvec2.set = function(out, x, y) {\n\t    out[0] = x;\n\t    out[1] = y;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Adds two vec2's\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec2} out\n\t */\n\tvec2.add = function(out, a, b) {\n\t    out[0] = a[0] + b[0];\n\t    out[1] = a[1] + b[1];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Subtracts vector b from vector a\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec2} out\n\t */\n\tvec2.subtract = function(out, a, b) {\n\t    out[0] = a[0] - b[0];\n\t    out[1] = a[1] - b[1];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec2.subtract}\n\t * @function\n\t */\n\tvec2.sub = vec2.subtract;\n\t\n\t/**\n\t * Multiplies two vec2's\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec2} out\n\t */\n\tvec2.multiply = function(out, a, b) {\n\t    out[0] = a[0] * b[0];\n\t    out[1] = a[1] * b[1];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec2.multiply}\n\t * @function\n\t */\n\tvec2.mul = vec2.multiply;\n\t\n\t/**\n\t * Divides two vec2's\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec2} out\n\t */\n\tvec2.divide = function(out, a, b) {\n\t    out[0] = a[0] / b[0];\n\t    out[1] = a[1] / b[1];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec2.divide}\n\t * @function\n\t */\n\tvec2.div = vec2.divide;\n\t\n\t/**\n\t * Returns the minimum of two vec2's\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec2} out\n\t */\n\tvec2.min = function(out, a, b) {\n\t    out[0] = Math.min(a[0], b[0]);\n\t    out[1] = Math.min(a[1], b[1]);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Returns the maximum of two vec2's\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec2} out\n\t */\n\tvec2.max = function(out, a, b) {\n\t    out[0] = Math.max(a[0], b[0]);\n\t    out[1] = Math.max(a[1], b[1]);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Scales a vec2 by a scalar number\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the vector to scale\n\t * @param {Number} b amount to scale the vector by\n\t * @returns {vec2} out\n\t */\n\tvec2.scale = function(out, a, b) {\n\t    out[0] = a[0] * b;\n\t    out[1] = a[1] * b;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Adds two vec2's after scaling the second operand by a scalar value\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @param {Number} scale the amount to scale b by before adding\n\t * @returns {vec2} out\n\t */\n\tvec2.scaleAndAdd = function(out, a, b, scale) {\n\t    out[0] = a[0] + (b[0] * scale);\n\t    out[1] = a[1] + (b[1] * scale);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the euclidian distance between two vec2's\n\t *\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {Number} distance between a and b\n\t */\n\tvec2.distance = function(a, b) {\n\t    var x = b[0] - a[0],\n\t        y = b[1] - a[1];\n\t    return Math.sqrt(x*x + y*y);\n\t};\n\t\n\t/**\n\t * Alias for {@link vec2.distance}\n\t * @function\n\t */\n\tvec2.dist = vec2.distance;\n\t\n\t/**\n\t * Calculates the squared euclidian distance between two vec2's\n\t *\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {Number} squared distance between a and b\n\t */\n\tvec2.squaredDistance = function(a, b) {\n\t    var x = b[0] - a[0],\n\t        y = b[1] - a[1];\n\t    return x*x + y*y;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec2.squaredDistance}\n\t * @function\n\t */\n\tvec2.sqrDist = vec2.squaredDistance;\n\t\n\t/**\n\t * Calculates the length of a vec2\n\t *\n\t * @param {vec2} a vector to calculate length of\n\t * @returns {Number} length of a\n\t */\n\tvec2.length = function (a) {\n\t    var x = a[0],\n\t        y = a[1];\n\t    return Math.sqrt(x*x + y*y);\n\t};\n\t\n\t/**\n\t * Alias for {@link vec2.length}\n\t * @function\n\t */\n\tvec2.len = vec2.length;\n\t\n\t/**\n\t * Calculates the squared length of a vec2\n\t *\n\t * @param {vec2} a vector to calculate squared length of\n\t * @returns {Number} squared length of a\n\t */\n\tvec2.squaredLength = function (a) {\n\t    var x = a[0],\n\t        y = a[1];\n\t    return x*x + y*y;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec2.squaredLength}\n\t * @function\n\t */\n\tvec2.sqrLen = vec2.squaredLength;\n\t\n\t/**\n\t * Negates the components of a vec2\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a vector to negate\n\t * @returns {vec2} out\n\t */\n\tvec2.negate = function(out, a) {\n\t    out[0] = -a[0];\n\t    out[1] = -a[1];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Returns the inverse of the components of a vec2\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a vector to invert\n\t * @returns {vec2} out\n\t */\n\tvec2.inverse = function(out, a) {\n\t  out[0] = 1.0 / a[0];\n\t  out[1] = 1.0 / a[1];\n\t  return out;\n\t};\n\t\n\t/**\n\t * Normalize a vec2\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a vector to normalize\n\t * @returns {vec2} out\n\t */\n\tvec2.normalize = function(out, a) {\n\t    var x = a[0],\n\t        y = a[1];\n\t    var len = x*x + y*y;\n\t    if (len > 0) {\n\t        //TODO: evaluate use of glm_invsqrt here?\n\t        len = 1 / Math.sqrt(len);\n\t        out[0] = a[0] * len;\n\t        out[1] = a[1] * len;\n\t    }\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the dot product of two vec2's\n\t *\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {Number} dot product of a and b\n\t */\n\tvec2.dot = function (a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t};\n\t\n\t/**\n\t * Computes the cross product of two vec2's\n\t * Note that the cross product must by definition produce a 3D vector\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec3} out\n\t */\n\tvec2.cross = function(out, a, b) {\n\t    var z = a[0] * b[1] - a[1] * b[0];\n\t    out[0] = out[1] = 0;\n\t    out[2] = z;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Performs a linear interpolation between two vec2's\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {vec2} out\n\t */\n\tvec2.lerp = function (out, a, b, t) {\n\t    var ax = a[0],\n\t        ay = a[1];\n\t    out[0] = ax + t * (b[0] - ax);\n\t    out[1] = ay + t * (b[1] - ay);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Generates a random vector with the given scale\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n\t * @returns {vec2} out\n\t */\n\tvec2.random = function (out, scale) {\n\t    scale = scale || 1.0;\n\t    var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n\t    out[0] = Math.cos(r) * scale;\n\t    out[1] = Math.sin(r) * scale;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec2 with a mat2\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the vector to transform\n\t * @param {mat2} m matrix to transform with\n\t * @returns {vec2} out\n\t */\n\tvec2.transformMat2 = function(out, a, m) {\n\t    var x = a[0],\n\t        y = a[1];\n\t    out[0] = m[0] * x + m[2] * y;\n\t    out[1] = m[1] * x + m[3] * y;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec2 with a mat2d\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the vector to transform\n\t * @param {mat2d} m matrix to transform with\n\t * @returns {vec2} out\n\t */\n\tvec2.transformMat2d = function(out, a, m) {\n\t    var x = a[0],\n\t        y = a[1];\n\t    out[0] = m[0] * x + m[2] * y + m[4];\n\t    out[1] = m[1] * x + m[3] * y + m[5];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec2 with a mat3\n\t * 3rd vector component is implicitly '1'\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the vector to transform\n\t * @param {mat3} m matrix to transform with\n\t * @returns {vec2} out\n\t */\n\tvec2.transformMat3 = function(out, a, m) {\n\t    var x = a[0],\n\t        y = a[1];\n\t    out[0] = m[0] * x + m[3] * y + m[6];\n\t    out[1] = m[1] * x + m[4] * y + m[7];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec2 with a mat4\n\t * 3rd vector component is implicitly '0'\n\t * 4th vector component is implicitly '1'\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the vector to transform\n\t * @param {mat4} m matrix to transform with\n\t * @returns {vec2} out\n\t */\n\tvec2.transformMat4 = function(out, a, m) {\n\t    var x = a[0], \n\t        y = a[1];\n\t    out[0] = m[0] * x + m[4] * y + m[12];\n\t    out[1] = m[1] * x + m[5] * y + m[13];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Perform some operation over an array of vec2s.\n\t *\n\t * @param {Array} a the array of vectors to iterate over\n\t * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n\t * @param {Number} offset Number of elements to skip at the beginning of the array\n\t * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n\t * @param {Function} fn Function to call for each vector in the array\n\t * @param {Object} [arg] additional argument to pass to fn\n\t * @returns {Array} a\n\t * @function\n\t */\n\tvec2.forEach = (function() {\n\t    var vec = vec2.create();\n\t\n\t    return function(a, stride, offset, count, fn, arg) {\n\t        var i, l;\n\t        if(!stride) {\n\t            stride = 2;\n\t        }\n\t\n\t        if(!offset) {\n\t            offset = 0;\n\t        }\n\t        \n\t        if(count) {\n\t            l = Math.min((count * stride) + offset, a.length);\n\t        } else {\n\t            l = a.length;\n\t        }\n\t\n\t        for(i = offset; i < l; i += stride) {\n\t            vec[0] = a[i]; vec[1] = a[i+1];\n\t            fn(vec, vec, arg);\n\t            a[i] = vec[0]; a[i+1] = vec[1];\n\t        }\n\t        \n\t        return a;\n\t    };\n\t})();\n\t\n\t/**\n\t * Returns a string representation of a vector\n\t *\n\t * @param {vec2} vec vector to represent as a string\n\t * @returns {String} string representation of the vector\n\t */\n\tvec2.str = function (a) {\n\t    return 'vec2(' + a[0] + ', ' + a[1] + ')';\n\t};\n\t\n\tmodule.exports = vec2;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * A color\n\t *\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar Color = exports.Color = function () {\n\t  /**\n\t   * Constructor\n\t   *\n\t   * @param {number} r Red color in the range [0-255]\n\t   * @param {number} g Green color in the range [0-255]\n\t   * @param {number} b Blue color in the range [0-255]\n\t   * @param {number=} a Opacity in the range [0-255]\n\t   */\n\t\n\t  function Color(r, g, b) {\n\t    var a = arguments.length <= 3 || arguments[3] === undefined ? 1.0 : arguments[3];\n\t\n\t    _classCallCheck(this, Color);\n\t\n\t    /**\n\t     * Red color in the range [0-1]\n\t     *\n\t     * @type {number}\n\t     * @public\n\t     */\n\t    this.r = r / 255.0;\n\t\n\t    /**\n\t     * Green color in the range [0-1]\n\t     *\n\t     * @type {number}\n\t     * @public\n\t     */\n\t    this.g = g / 255.0;\n\t\n\t    /**\n\t     * Red color in the range [0-1]\n\t     *\n\t     * @type {number}\n\t     * @public\n\t     */\n\t    this.b = b / 255.0;\n\t\n\t    /**\n\t     * Opacity in the range [0-1]\n\t     *\n\t     * @type {number}\n\t     * @public\n\t     */\n\t    this.a = a ? a / 255.0 : 1.0;\n\t  }\n\t\n\t  /**\n\t   * Set color\n\t   *\n\t   * @param {number} r Red color in the range [0-255]\n\t   * @param {number} g Green color in the range [0-255]\n\t   * @param {number} b Blue color in the range [0-255]\n\t   * @param {number=} a Opacity in the range [0-255]\n\t   */\n\t\n\t  _createClass(Color, [{\n\t    key: \"set\",\n\t    value: function set(r, g, b) {\n\t      var a = arguments.length <= 3 || arguments[3] === undefined ? 1.0 : arguments[3];\n\t\n\t      this.r = r / 255.0;\n\t      this.g = g / 255.0;\n\t      this.b = b / 255.0;\n\t      this.a = a ? a / 255.0 : 1.0;\n\t    }\n\t\n\t    /**\n\t     * Check if the given Color instance is equal to this one\n\t     *\n\t     * @param {Color} color A Color instance\n\t     * @return {boolean} True if the two colors are equals, otherwise false\n\t     */\n\t\n\t  }, {\n\t    key: \"isEqual\",\n\t    value: function isEqual(color) {\n\t      return this.r == color.r && this.g == color.g && this.b == color.b && this.a == color.a;\n\t    }\n\t  }]);\n\t\n\t  return Color;\n\t}();\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.DirectionalLight = undefined;\n\t\n\tvar _Light2 = __webpack_require__(15);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * A directional light\n\t *\n\t * @extends {Light}\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar DirectionalLight = exports.DirectionalLight = function (_Light) {\n\t  _inherits(DirectionalLight, _Light);\n\t\n\t  /**\n\t   * Constructor\n\t   */\n\t\n\t  function DirectionalLight() {\n\t    _classCallCheck(this, DirectionalLight);\n\t\n\t    /**\n\t     * Light's direction\n\t     *\n\t     * @type {Array.<number>}\n\t     * @private\n\t     */\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(DirectionalLight).call(this));\n\t\n\t    _this.direction = [];\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Set direction\n\t   *\n\t   * @param {number} x Direction on X\n\t   * @param {number} y Direction on Y\n\t   * @param {number} z Direction on Z\n\t   */\n\t\n\t  _createClass(DirectionalLight, [{\n\t    key: 'setDirection',\n\t    value: function setDirection(x, y, z) {\n\t      this.direction = [x, y, z];\n\t    }\n\t\n\t    /**\n\t     * Get direction\n\t     *\n\t     * @return {Array.<number>} A vector with values for each axis\n\t     */\n\t\n\t  }, {\n\t    key: 'getDirection',\n\t    value: function getDirection() {\n\t      return this.direction;\n\t    }\n\t  }]);\n\t\n\t  return DirectionalLight;\n\t}(_Light2.Light);\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Light = undefined;\n\t\n\tvar _Color = __webpack_require__(13);\n\t\n\tvar _Node2 = __webpack_require__(16);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * A light\n\t\n\t * @extends {Node}\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar Light = exports.Light = function (_Node) {\n\t  _inherits(Light, _Node);\n\t\n\t  /**\n\t   * Constructor\n\t   */\n\t\n\t  function Light() {\n\t    _classCallCheck(this, Light);\n\t\n\t    /**\n\t     * Ambient color\n\t     *\n\t     * @type {Color}\n\t     * @private\n\t     */\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Light).call(this));\n\t\n\t    _this.ambient = new _Color.Color(255, 255, 255);\n\t\n\t    /**\n\t     * Diffuse color\n\t     *\n\t     * @type {Color}\n\t     * @private\n\t     */\n\t    _this.diffuse = new _Color.Color(255, 255, 255);\n\t\n\t    /**\n\t     * Specular color\n\t     *\n\t     * @type {Color}\n\t     * @private\n\t     */\n\t    _this.specular = new _Color.Color(255, 255, 255);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Visit the node and his children\n\t   *\n\t   * @param {RenderTarget} renderTarget Renderer who called this method\n\t   */\n\t\n\t  _createClass(Light, [{\n\t    key: 'visit',\n\t    value: function visit(renderTarget) {\n\t      renderTarget.getRenderAPI().bindLight(this);\n\t    }\n\t\n\t    /**\n\t     * Set ambient color\n\t     *\n\t     * @param {number} r Red value in the range 0 to 255\n\t     * @param {number} g Green value in the range 0 to 255\n\t     * @param {number} b Blue value in the range 0 to 255\n\t     */\n\t\n\t  }, {\n\t    key: 'setAmbientColor',\n\t    value: function setAmbientColor(r, g, b) {\n\t      this.ambient.set(r, g, b);\n\t    }\n\t\n\t    /**\n\t     * Set diffuse color\n\t     *\n\t     * @param {number} r Red value in the range 0 to 255\n\t     * @param {number} g Green value in the range 0 to 255\n\t     * @param {number} b Blue value in the range 0 to 255\n\t     */\n\t\n\t  }, {\n\t    key: 'setDiffuseColor',\n\t    value: function setDiffuseColor(r, g, b) {\n\t      this.diffuse.set(r, g, b);\n\t    }\n\t\n\t    /**\n\t     * Set specular color\n\t     *\n\t     * @param {number} r Red value in the range 0 to 255\n\t     * @param {number} g Green value in the range 0 to 255\n\t     * @param {number} b Blue value in the range 0 to 255\n\t     */\n\t\n\t  }, {\n\t    key: 'setSpecularColor',\n\t    value: function setSpecularColor(r, g, b) {\n\t      this.specular.set(r, g, b);\n\t    }\n\t\n\t    /**\n\t     * Get ambient color\n\t     *\n\t     * @return {Color} A color instance\n\t     */\n\t\n\t  }, {\n\t    key: 'getAmbientColor',\n\t    value: function getAmbientColor() {\n\t      return this.ambient;\n\t    }\n\t\n\t    /**\n\t     * Get diffuse color\n\t     *\n\t     * @return {Color} A color instance\n\t     */\n\t\n\t  }, {\n\t    key: 'getDiffuseColor',\n\t    value: function getDiffuseColor() {\n\t      return this.diffuse;\n\t    }\n\t\n\t    /**\n\t     * Get specular color\n\t     *\n\t     * @return {Color} A color instance\n\t     */\n\t\n\t  }, {\n\t    key: 'getSpecularColor',\n\t    value: function getSpecularColor() {\n\t      return this.specular;\n\t    }\n\t  }]);\n\t\n\t  return Light;\n\t}(_Node2.Node);\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.Node = undefined;\n\t\n\tvar _Transformable2 = __webpack_require__(17);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * A node element is an element of a scene\n\t *\n\t * @description A Node can represent something like a light, a mesh, a sprite, a camera or a text\n\t * @extends {Transformable}\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar Node = exports.Node = function (_Transformable) {\n\t    _inherits(Node, _Transformable);\n\t\n\t    /**\n\t     * Constructor\n\t     *\n\t     * @param {string=} name A string\n\t     */\n\t\n\t    function Node() {\n\t        var name = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n\t\n\t        _classCallCheck(this, Node);\n\t\n\t        /**\n\t         * Node's children\n\t         *\n\t         * @type {Array.<Node>}\n\t         * @private\n\t         */\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Node).call(this));\n\t\n\t        _this.children = [];\n\t\n\t        /**\n\t         * Name, useful to retrieve the node\n\t         *\n\t         * @type {string}\n\t         * @private\n\t         */\n\t        _this.name = name;\n\t\n\t        /**\n\t         * Node's parent\n\t         *\n\t         * @type {?Node}\n\t         * @private\n\t         */\n\t        _this.parent = null;\n\t        return _this;\n\t    }\n\t\n\t    /**\n\t     * Add a child to the node\n\t     *\n\t     * @param {Node} node A Node instance\n\t     */\n\t\n\t    _createClass(Node, [{\n\t        key: 'addChild',\n\t        value: function addChild(node) {\n\t            if (node == this) return;\n\t\n\t            // Detach node from his previous parent\n\t            if (node.parent) node.parent.removeChild(node);\n\t\n\t            // Add as a child\n\t            this.children.push(node);\n\t            node.parent = this;\n\t        }\n\t\n\t        /**\n\t         * Find the child with the given name\n\t         *\n\t         * @param {string} name A string\n\t         * @return {?Node} A Node instance of null\n\t         */\n\t\n\t    }, {\n\t        key: 'findChild',\n\t        value: function findChild(name) {\n\t            for (var i = 0; i < this.children.length; i++) {\n\t                if (this.children[i].name == name) return this.children[i];else {\n\t                    var child = this.children[i].findChild(name);\n\t                    if (child) return child;\n\t                }\n\t            }\n\t\n\t            return null;\n\t        }\n\t\n\t        /**\n\t         * Remove a child from the node\n\t         *\n\t         * @param {Node} node A Node instance\n\t         * @return {boolean} True if the operation is a success\n\t         */\n\t\n\t    }, {\n\t        key: 'removeChild',\n\t        value: function removeChild(node) {\n\t            var index = this.children.indexOf(node);\n\t            if (index != -1) {\n\t                this.children.splice(index, 1);\n\t                node.parent = null;\n\t\n\t                return true;\n\t            }\n\t\n\t            return false;\n\t        }\n\t\n\t        /**\n\t         * Set the name to easily retrieve it later\n\t         *\n\t         * @param {string} name A string\n\t         */\n\t\n\t    }, {\n\t        key: 'setName',\n\t        value: function setName(name) {\n\t            this.name = name;\n\t        }\n\t\n\t        /**\n\t         * Update the node and his children\n\t         *\n\t         * @param {number} deltaTime A floating value representing time elapsed between two frames\n\t         * @param {boolean} parentUpdated Indicate if the parent element have been updated\n\t         * @return {boolean} True if the node have been updated\n\t         */\n\t\n\t    }, {\n\t        key: 'update',\n\t        value: function update(deltaTime, parentUpdated) {\n\t            var parentMatrix = this.parent ? this.parent.getTransformationMatrix() : null;\n\t            return this.computeTransformationMatrix(parentMatrix, parentUpdated);\n\t        }\n\t\n\t        /**\n\t         * Visit the node and his children\n\t         *\n\t         * @param {RenderTarget} renderTarget Renderer who called this method\n\t         */\n\t\n\t    }, {\n\t        key: 'visit',\n\t        value: function visit(renderTarget) {}\n\t    }, {\n\t        key: 'getChildren',\n\t\n\t        /**\n\t         * Return Node's children\n\t         *\n\t         * @return {Array.<Node>} An array of Node\n\t         */\n\t        value: function getChildren() {\n\t            return this.children;\n\t        }\n\t\n\t        /**\n\t         * Indicate if the current node is the scene's root\n\t         *\n\t         * @return {boolean} True if it's the root node, otherwise false\n\t         */\n\t\n\t    }, {\n\t        key: 'isRoot',\n\t        value: function isRoot() {\n\t            return this.parent === null;\n\t        }\n\t    }]);\n\t\n\t    return Node;\n\t}(_Transformable2.Transformable);\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar glMatrix = __webpack_require__(3);\n\t\n\t/**\n\t * Transformable: Manage matrix's transformations\n\t *\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar Transformable = exports.Transformable = function () {\n\t  /**\n\t   * Constructor\n\t   */\n\t\n\t  function Transformable() {\n\t    _classCallCheck(this, Transformable);\n\t\n\t    /**\n\t     * The result matrix\n\t     *\n\t     * @type {glMatrix.mat4}\n\t     * @private\n\t     */\n\t    this.matrix = glMatrix.mat4.create();\n\t\n\t    /**\n\t     * The normal matrix: inverse and transpose the transformation matrix\n\t     *\n\t     * @type {glMatrix.mat4}\n\t     * @private\n\t     */\n\t    this.normalMatrix = glMatrix.mat4.create();\n\t\n\t    /**\n\t     * Origin, useful to apply rotation relatively to a point in space\n\t     *\n\t     * @type {glMatrix.vec3}\n\t     * @private\n\t     */\n\t    this.origin = glMatrix.vec3.create();\n\t\n\t    /**\n\t     * Position\n\t     *\n\t     * @type {glMatrix.vec3}\n\t     * @private\n\t     */\n\t    this.position = glMatrix.vec3.create();\n\t\n\t    /**\n\t     * Rotation\n\t     *\n\t     * @type {glMatrix.quat}\n\t     * @private\n\t     */\n\t    this.rotation = glMatrix.quat.create();\n\t\n\t    /**\n\t     * Matrix with rotation data\n\t     *\n\t     * @type {glMatrix.mat4}\n\t     * @private\n\t     */\n\t    this.rotationMatrix = glMatrix.mat4.create();\n\t\n\t    /**\n\t     * Scale\n\t     *\n\t     * @type {glMatrix.vec3}\n\t     * @private\n\t     */\n\t    this.scale = glMatrix.vec3.fromValues(1.0, 1.0, 1.0);\n\t\n\t    /**\n\t     * Indicate if the matrix/cache need to be updated\n\t     *\n\t     * @type {boolean}\n\t     * @private\n\t     */\n\t    this.needTransformUpdate = true;\n\t  }\n\t\n\t  /**\n\t   * Look at the given position\n\t   *\n\t   * @param {Array.<number>|Float32Array|Float64Array} position An array with value for each axis\n\t   * @param {Array.<number>|Float32Array|Float64Array=} up An array with value for each axis\n\t   */\n\t\n\t  _createClass(Transformable, [{\n\t    key: 'lookAt',\n\t    value: function lookAt() {\n\t      var position = arguments.length <= 0 || arguments[0] === undefined ? [0, 0, 0] : arguments[0];\n\t      var up = arguments.length <= 1 || arguments[1] === undefined ? [0, 1, 0] : arguments[1];\n\t\n\t      // Useful variables\n\t      var xAxis = glMatrix.vec3.create();\n\t      var yAxis = glMatrix.vec3.create();\n\t      var zAxis = glMatrix.vec3.create();\n\t\n\t      // Compute rotation on z-axis\n\t      glMatrix.vec3.subtract(zAxis, position, this.position);\n\t      glMatrix.vec3.normalize(zAxis, zAxis);\n\t\n\t      // Compute rotation on z-axis\n\t      glMatrix.vec3.subtract(zAxis, position, this.position);\n\t      glMatrix.vec3.normalize(zAxis, zAxis);\n\t\n\t      // Compute rotation on x-axis\n\t      glMatrix.vec3.cross(xAxis, up, zAxis);\n\t      glMatrix.vec3.normalize(xAxis, xAxis);\n\t\n\t      // Compute rotation on y-axis\n\t      glMatrix.vec3.cross(yAxis, zAxis, xAxis);\n\t\n\t      // Compute rotation matrix\n\t      var matrix = glMatrix.mat4.create();\n\t      matrix[0] = xAxis[0];\n\t      matrix[1] = xAxis[1];\n\t      matrix[2] = xAxis[2];\n\t      matrix[3] = 0;\n\t\n\t      matrix[4] = yAxis[0];\n\t      matrix[5] = yAxis[1];\n\t      matrix[6] = yAxis[2];\n\t      matrix[7] = 0;\n\t\n\t      matrix[8] = zAxis[0];\n\t      matrix[9] = zAxis[1];\n\t      matrix[10] = zAxis[2];\n\t      matrix[11] = 0;\n\t\n\t      matrix[12] = 0;\n\t      matrix[13] = 0;\n\t      matrix[14] = 0;\n\t      matrix[15] = 1;\n\t\n\t      // Send result\n\t      this.setRotationFromMatrix(matrix);\n\t    }\n\t\n\t    /**\n\t     * Set origin\n\t     *\n\t     * @param {number} x Origin on X\n\t     * @param {number} y Origin on Y\n\t     * @param {number} z Origin on Z\n\t     */\n\t\n\t  }, {\n\t    key: 'setOrigin',\n\t    value: function setOrigin(x, y, z) {\n\t      glMatrix.vec3.set(this.origin, x, y, z);\n\t      this.needTransformUpdate = true;\n\t    }\n\t\n\t    /**\n\t     * Set position\n\t     *\n\t     * @param {number} x Position on X\n\t     * @param {number} y Position on Y\n\t     * @param {number} z Position on Z\n\t     */\n\t\n\t  }, {\n\t    key: 'setPosition',\n\t    value: function setPosition(x, y, z) {\n\t      glMatrix.vec3.set(this.position, x, y, z);\n\t      this.needTransformUpdate = true;\n\t    }\n\t\n\t    /**\n\t     * Set rotation using values in degrees\n\t     *\n\t     * @param {number} x Rotation on X in degrees\n\t     * @param {number} y Rotation on Y in degrees\n\t     * @param {number} z Rotation on Z in degrees\n\t     */\n\t\n\t  }, {\n\t    key: 'setRotation',\n\t    value: function setRotation(x, y, z) {\n\t      // Compute rotation matrix\n\t      glMatrix.mat4.identity(this.rotationMatrix);\n\t      glMatrix.mat4.rotateX(this.rotationMatrix, this.rotationMatrix, glMatrix.glMatrix.toRadian(x));\n\t      glMatrix.mat4.rotateY(this.rotationMatrix, this.rotationMatrix, glMatrix.glMatrix.toRadian(y));\n\t      glMatrix.mat4.rotateZ(this.rotationMatrix, this.rotationMatrix, glMatrix.glMatrix.toRadian(z));\n\t\n\t      // Compute quaterion\n\t      var m3 = glMatrix.mat3.create();\n\t      glMatrix.mat3.fromMat4(m3, this.rotationMatrix);\n\t      glMatrix.quat.fromMat3(this.rotation, m3);\n\t\n\t      this.needTransformUpdate = true;\n\t    }\n\t\n\t    /**\n\t     * Set rotation from a quaternion\n\t     *\n\t     * @param {glMatrix.quat} quaternion A quaternion\n\t     */\n\t\n\t  }, {\n\t    key: 'setRotationFromQuaternion',\n\t    value: function setRotationFromQuaternion(quaternion) {\n\t      glMatrix.mat4.fromQuat(this.rotationMatrix, quaternion);\n\t\n\t      this.rotation = quaternion;\n\t      this.needTransformUpdate = true;\n\t    }\n\t\n\t    /**\n\t     * Set rotation from a rotation matrix\n\t     *\n\t     * @param {glMatrix.mat4} matrix A Matrix\n\t     */\n\t\n\t  }, {\n\t    key: 'setRotationFromMatrix',\n\t    value: function setRotationFromMatrix(matrix) {\n\t      glMatrix.quat.fromMat3(this.rotation, matrix);\n\t\n\t      this.rotationMatrix = matrix;\n\t      this.needTransformUpdate = true;\n\t    }\n\t\n\t    /**\n\t     * Set scale\n\t     *\n\t     * @param {number} x Position on X\n\t     * @param {number} y Position on Y\n\t     * @param {number} z Position on Z\n\t     */\n\t\n\t  }, {\n\t    key: 'setScale',\n\t    value: function setScale(x, y, z) {\n\t      glMatrix.vec3.set(this.scale, x, y, z);\n\t      this.needTransformUpdate = true;\n\t    }\n\t\n\t    /**\n\t     * Update matrix\n\t     *\n\t     * @param {?glMatrix.mat4} parentMatrix Parent transformable's matrix\n\t     * @param {boolean} forceUpdate True to force an update\n\t     * @return {boolean} True if the matrix have been updated, otherwise false\n\t     */\n\t\n\t  }, {\n\t    key: 'computeTransformationMatrix',\n\t    value: function computeTransformationMatrix(parentMatrix, forceUpdate) {\n\t      // Avoid useless updates\n\t      if (!forceUpdate && !this.needTransformUpdate) return false;\n\t\n\t      // Compute matrix\n\t      glMatrix.mat4.identity(this.matrix);\n\t      glMatrix.mat4.translate(this.matrix, this.matrix, this.position);\n\t      glMatrix.mat4.multiply(this.matrix, this.matrix, this.rotationMatrix);\n\t      glMatrix.mat4.scale(this.matrix, this.matrix, this.scale);\n\t\n\t      // Apply parent's transformations\n\t      if (parentMatrix) glMatrix.mat4.multiply(this.matrix, parentMatrix, this.matrix);\n\t\n\t      // Compute inverse matrix\n\t      glMatrix.mat4.invert(this.normalMatrix, this.matrix);\n\t      glMatrix.mat4.transpose(this.normalMatrix, this.normalMatrix);\n\t\n\t      this.needTransformUpdate = false;\n\t\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Return computed matrix\n\t     *\n\t     * @return {glMatrix.mat4} A reference to the object's matrix\n\t     */\n\t\n\t  }, {\n\t    key: 'getTransformationMatrix',\n\t    value: function getTransformationMatrix() {\n\t      return this.matrix;\n\t    }\n\t\n\t    /**\n\t     * Return computed normal matrix\n\t     *\n\t     * @return {glMatrix.mat4} A matrix\n\t     */\n\t\n\t  }, {\n\t    key: 'getNormalMatrix',\n\t    value: function getNormalMatrix() {\n\t      return this.normalMatrix;\n\t    }\n\t\n\t    /**\n\t     * Return the origin\n\t     *\n\t     * @return {glMatrix.vec3} A vector with the value for each axis\n\t     */\n\t\n\t  }, {\n\t    key: 'getOrigin',\n\t    value: function getOrigin() {\n\t      return this.origin;\n\t    }\n\t\n\t    /**\n\t     * Return relative position\n\t     *\n\t     * @return {glMatrix.vec3} A vector with the value for each axis\n\t     */\n\t\n\t  }, {\n\t    key: 'getPosition',\n\t    value: function getPosition() {\n\t      return this.position;\n\t    }\n\t\n\t    /**\n\t     * Return the rotation in degrees\n\t     *\n\t     * @return {Array.<number>} A vector with the value for each axis in degrees\n\t     * @todo Implement this function\n\t     */\n\t\n\t  }, {\n\t    key: 'getRotation',\n\t    value: function getRotation() {\n\t      throw '\\'getRotation\\' is not implemented for now …';\n\t    }\n\t\n\t    /**\n\t     * Return the scale\n\t     *\n\t     * @return {glMatrix.vec3} A vector with the value for each axis\n\t     */\n\t\n\t  }, {\n\t    key: 'getScale',\n\t    value: function getScale() {\n\t      return this.scale;\n\t    }\n\t  }]);\n\t\n\t  return Transformable;\n\t}();\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.StencilOperation = exports.StencilFunction = exports.FaceCulling = exports.DrawingMode = exports.DepthFunction = exports.StateBlock = undefined;\n\t\n\tvar _BlendMode = __webpack_require__(1);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * A rendering state\n\t *\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar StateBlock = exports.StateBlock = function () {\n\t  /**\n\t   * Constructor\n\t   */\n\t\n\t  function StateBlock() {\n\t    _classCallCheck(this, StateBlock);\n\t\n\t    /**\n\t     * Blend mode\n\t     *\n\t     * @type {BlendMode}\n\t     * @public\n\t     */\n\t    this.blendMode = new _BlendMode.BlendMode();\n\t\n\t    /**\n\t     * Depth function to use\n\t     *\n\t     * @type {DepthFunction}\n\t     * @default {DepthFunction.Less}\n\t     * @public\n\t     */\n\t    this.depthFunction = DepthFunction.Less;\n\t\n\t    /**\n\t     * Indicate if we want to write in the depth buffer\n\t     *\n\t     * @type {boolean}\n\t     * @default {true}\n\t     * @public\n\t     */\n\t    this.depthWrite = true;\n\t\n\t    /**\n\t     * Indicate if we want to test pixels with values in the depth buffer\n\t     *\n\t     * @type {boolean}\n\t     * @default {true}\n\t     * @public\n\t     */\n\t    this.depthTest = true;\n\t\n\t    /**\n\t     * Drawing mode\n\t     *\n\t     * @type {DrawingMode}\n\t     * @default {DrawingMode.Triangles}\n\t     * @public\n\t     */\n\t    this.drawingMode = DrawingMode.Triangles;\n\t\n\t    /**\n\t     * Face culling\n\t     *\n\t     * @type {FaceCulling}\n\t     * @default {FaceCulling.Back}\n\t     * @public\n\t     */\n\t    this.faceCulling = FaceCulling.Back;\n\t\n\t    /**\n\t     * Stencil function to use\n\t     *\n\t     * @type {StencilFunction}\n\t     * @default {StencilFunction.Less}\n\t     * @public\n\t     */\n\t    this.stencilFunction = StencilFunction.Less;\n\t\n\t    /**\n\t     * Stencil reference value\n\t     *\n\t     * @type {number}\n\t     * @default {0}\n\t     * @public\n\t     */\n\t    this.stencilReference = 0;\n\t\n\t    /**\n\t     * Stencil mask value\n\t     *\n\t     * @type {number}\n\t     * @default {255}\n\t     * @public\n\t     */\n\t    this.stencilMask = 255;\n\t\n\t    /**\n\t     * Indicate if stencil test is active\n\t     *\n\t     * @type {boolean}\n\t     * @default {false}\n\t     * @public\n\t     */\n\t    this.stencilTest = false;\n\t\n\t    /**\n\t     * Value to write in the stencil buffer when stencil is active\n\t     *\n\t     * @type {number}\n\t     * @default {0xFF}\n\t     * @public\n\t     */\n\t    this.stencilWrite = 0xFF;\n\t\n\t    /**\n\t     * Operation to execute when stencil test failed\n\t     *\n\t     * @type {StencilOperation}\n\t     * @default {StencilOperation.Keep}\n\t     * @public\n\t     */\n\t    this.stencilTestFail = StencilOperation.Keep;\n\t\n\t    /**\n\t     * Operation to execute when stencil test failed using depth buffer\n\t     *\n\t     * @type {StencilOperation}\n\t     * @default {StencilOperation.Keep}\n\t     * @public\n\t     */\n\t    this.stencilDepthTestFail = StencilOperation.Keep;\n\t\n\t    /**\n\t     * Operation to execute when stencil test is a success\n\t     *\n\t     * @type {StencilOperation}\n\t     * @default {StencilOperation.Keep}\n\t     * @public\n\t     */\n\t    this.stencilSuccess = StencilOperation.Keep;\n\t  }\n\t\n\t  /**\n\t   * Check if the given StateBlock instance is equal to this one\n\t   *\n\t   * @param {StateBlock} state A StateBlock instance\n\t   * @return {boolean} True if the two states are equals, otherwise false\n\t   */\n\t\n\t  _createClass(StateBlock, [{\n\t    key: 'isEqual',\n\t    value: function isEqual(state) {\n\t      return this.blendMode.isEqual(state.blendMode) && this.depthFunction == state.depthFunction && this.depthWrite == state.depthWrite && this.depthTest == state.depthTest && this.stencilFunction == state.stencilFunction && this.stencilReference == state.stencilReference && this.stencilMask == state.stencilMask && this.stencilTest == state.stencilTest && this.stencilWrite == state.stencilWrite && this.stencilTestFail == state.stencilTestFail && this.stencilDepthTestFail == state.stencilDepthTestFail && this.stencilSuccess == state.stencilSuccess;\n\t    }\n\t  }]);\n\t\n\t  return StateBlock;\n\t}();\n\t\n\t/**\n\t * Depth function to use\n\t */\n\t\n\tvar DepthFunction = exports.DepthFunction = function DepthFunction() {\n\t  _classCallCheck(this, DepthFunction);\n\t};\n\t\n\t/**\n\t * Never\n\t *\n\t * @type {number}\n\t */\n\t\n\tDepthFunction.Never = 0;\n\t\n\t/**\n\t * Less\n\t *\n\t * @type {number}\n\t */\n\tDepthFunction.Less = 1;\n\t\n\t/**\n\t * Equal\n\t *\n\t * @type {number}\n\t */\n\tDepthFunction.Equal = 2;\n\t\n\t/**\n\t * LessEqual\n\t *\n\t * @type {number}\n\t */\n\tDepthFunction.LessEqual = 3;\n\t\n\t/**\n\t * Greater\n\t *\n\t * @type {number}\n\t */\n\tDepthFunction.Greater = 4;\n\t\n\t/**\n\t * NotEqual\n\t *\n\t * @type {number}\n\t */\n\tDepthFunction.NotEqual = 5;\n\t\n\t/**\n\t * GreaterEqual\n\t *\n\t * @type {number}\n\t */\n\tDepthFunction.GreaterEqual = 6;\n\t\n\t/**\n\t * Always\n\t *\n\t * @type {number}\n\t */\n\tDepthFunction.Always = 7;\n\t\n\t/**\n\t* Drawing modes\n\t*/\n\t\n\tvar DrawingMode = exports.DrawingMode = function DrawingMode() {\n\t  _classCallCheck(this, DrawingMode);\n\t};\n\t\n\t/**\n\t * Draw as points\n\t *\n\t * @type {number}\n\t */\n\t\n\tDrawingMode.Points = 0;\n\t\n\t/**\n\t * Draw as lines\n\t *\n\t * @type {number}\n\t */\n\tDrawingMode.Lines = 1;\n\t\n\t/**\n\t * Draw as lines strip\n\t *\n\t * @type {number}\n\t */\n\tDrawingMode.LinesStrip = 2;\n\t\n\t/**\n\t * Draw as lines loop\n\t *\n\t * @type {number}\n\t */\n\tDrawingMode.LinesLoop = 3;\n\t\n\t/**\n\t * Draw as triangles\n\t *\n\t * @type {number}\n\t */\n\tDrawingMode.Triangles = 4;\n\t\n\t/**\n\t * Draw as triangles strip\n\t *\n\t * @type {number}\n\t */\n\tDrawingMode.TrianglesStrip = 5;\n\t\n\t/**\n\t * Draw as triangles fan\n\t *\n\t * @type {number}\n\t */\n\tDrawingMode.TrianglesFan = 6;\n\t\n\t/**\n\t * Face culling\n\t */\n\t\n\tvar FaceCulling = exports.FaceCulling = function FaceCulling() {\n\t  _classCallCheck(this, FaceCulling);\n\t};\n\t\n\t/**\n\t * Don't draw back face\n\t *\n\t * @type {number}\n\t */\n\t\n\tFaceCulling.Back = 0;\n\t\n\t/**\n\t * Don't draw front face\n\t *\n\t * @type {number}\n\t */\n\tFaceCulling.Front = 1;\n\t\n\t/**\n\t * Draw both faces, disable face culling\n\t *\n\t * @type {number}\n\t */\n\tFaceCulling.None = 2;\n\t\n\t/**\n\t * Stencil functions\n\t */\n\t\n\tvar StencilFunction = exports.StencilFunction = function StencilFunction() {\n\t  _classCallCheck(this, StencilFunction);\n\t};\n\t\n\t/**\n\t * Never\n\t *\n\t * @type {number}\n\t */\n\t\n\tStencilFunction.Never = 0;\n\t\n\t/**\n\t * Less\n\t *\n\t * @type {number}\n\t */\n\tStencilFunction.Less = 1;\n\t\n\t/**\n\t * Equal\n\t *\n\t * @type {number}\n\t */\n\tStencilFunction.Equal = 2;\n\t\n\t/**\n\t * LessEqual\n\t *\n\t * @type {number}\n\t */\n\tStencilFunction.LessEqual = 3;\n\t\n\t/**\n\t * Greater\n\t *\n\t * @type {number}\n\t */\n\tStencilFunction.Greater = 4;\n\t\n\t/**\n\t * NotEqual\n\t *\n\t * @type {number}\n\t */\n\tStencilFunction.NotEqual = 5;\n\t\n\t/**\n\t * GreaterEqual\n\t *\n\t * @type {number}\n\t */\n\tStencilFunction.GreaterEqual = 6;\n\t\n\t/**\n\t * Always\n\t *\n\t * @type {number}\n\t */\n\tStencilFunction.Always = 7;\n\t\n\t/**\n\t * Stencil operations\n\t */\n\t\n\tvar StencilOperation = exports.StencilOperation = function StencilOperation() {\n\t  _classCallCheck(this, StencilOperation);\n\t};\n\t\n\t/**\n\t * Keep\n\t *\n\t * @type {number}\n\t */\n\t\n\tStencilOperation.Keep = 0;\n\t\n\t/**\n\t * Zero\n\t *\n\t * @type {number}\n\t */\n\tStencilOperation.Zero = 1;\n\t\n\t/**\n\t * Replace\n\t *\n\t * @type {number}\n\t */\n\tStencilOperation.Replace = 2;\n\t\n\t/**\n\t * Increment\n\t *\n\t * @type {number}\n\t */\n\tStencilOperation.Increment = 3;\n\t\n\t/**\n\t * Decrement\n\t *\n\t * @type {number}\n\t */\n\tStencilOperation.Decrement = 4;\n\t\n\t/**\n\t * Invert\n\t *\n\t * @type {number}\n\t */\n\tStencilOperation.Invert = 5;\n\t\n\t/**\n\t * IncrementWrap\n\t *\n\t * @type {number}\n\t */\n\tStencilOperation.IncrementWrap = 6;\n\t\n\t/**\n\t * DecrementWrap\n\t *\n\t * @type {number}\n\t */\n\tStencilOperation.DecrementWrap = 7;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * A class to load file using Ajax\n\t *\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar FileLoader = exports.FileLoader = function () {\n\t    function FileLoader() {\n\t        _classCallCheck(this, FileLoader);\n\t    }\n\t\n\t    _createClass(FileLoader, null, [{\n\t        key: 'load',\n\t\n\t        /**\n\t         * Load a file\n\t         *\n\t         * @param {string} filePath Path to the file to load\n\t         * @param {function(boolean, string, Object=)} callback Callback\n\t         * @param {Object=} userData User data\n\t         */\n\t        value: function load(filePath, callback, userData) {\n\t            var reader = new XMLHttpRequest();\n\t            reader.onreadystatechange = function () {\n\t                if (reader.readyState === 4 && (reader.status === 200 || reader.status === 0)) callback(true, reader.responseText, userData);\n\t            };\n\t            reader.open('GET', filePath, true);\n\t            reader.send();\n\t        }\n\t    }]);\n\t\n\t    return FileLoader;\n\t}();\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.Geometry = undefined;\n\t\n\tvar _ContextResource2 = __webpack_require__(21);\n\t\n\tvar _VertexFormat = __webpack_require__(22);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * A geometry\n\t *\n\t * @extends {ContextResource}\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar Geometry = exports.Geometry = function (_ContextResource) {\n\t    _inherits(Geometry, _ContextResource);\n\t\n\t    /**\n\t     * Constructor\n\t     */\n\t\n\t    function Geometry() {\n\t        _classCallCheck(this, Geometry);\n\t\n\t        /**\n\t         * Colors\n\t         *\n\t         * @type {Float32Array}\n\t         * @private\n\t         */\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Geometry).call(this));\n\t\n\t        _this.colors = null;\n\t\n\t        /**\n\t         * Indices\n\t         *\n\t         * @type {Uint16Array}\n\t         * @private\n\t         */\n\t        _this.indices = null;\n\t\n\t        /**\n\t         * Normals\n\t         *\n\t         * @type {Float32Array}\n\t         * @private\n\t         */\n\t        _this.normals = null;\n\t\n\t        /**\n\t         * Positions\n\t         *\n\t         * @type {Float32Array}\n\t         * @private\n\t         */\n\t        _this.positions = null;\n\t\n\t        /**\n\t         * Uvs\n\t         *\n\t         * @type {Float32Array}\n\t         * @private\n\t         */\n\t        _this.uvs = null;\n\t\n\t        /**\n\t         * Format\n\t         *\n\t         * @type {VertexFormat}\n\t         * @private\n\t         */\n\t        _this.vertexFormat = null;\n\t        return _this;\n\t    }\n\t\n\t    /**\n\t     * Set vertices colors\n\t     *\n\t     * @param {Float32Array} colors An array of float values representing colors (r, g, b, a, r, g, b, a, …)\n\t     */\n\t\n\t    _createClass(Geometry, [{\n\t        key: 'setColors',\n\t        value: function setColors(colors) {\n\t            this.colors = new Float32Array(colors);\n\t\n\t            // Indicate that an attribute of the geometry need an update.\n\t            if (this.vertexFormat) this.vertexFormat.setStreamAsWaitingUpdate(_VertexFormat.VertexElement.Usage.Color, true);\n\t        }\n\t\n\t        /**\n\t         * Set indices\n\t         *\n\t         * @param {Uint16Array} indices An array of unsigned integer values representing indices order\n\t         */\n\t\n\t    }, {\n\t        key: 'setIndices',\n\t        value: function setIndices(indices) {\n\t            this.indices = new Uint16Array(indices);\n\t\n\t            // Indicate that indices need an update.\n\t            if (this.vertexFormat) this.vertexFormat.setIndicesAsWaitingUpdate(true);\n\t        }\n\t\n\t        /**\n\t         * Set vertices normals\n\t         *\n\t         * @param {Float32Array} normals An array of float values representing normals (x, y, z, x, y, z, …)\n\t         */\n\t\n\t    }, {\n\t        key: 'setNormals',\n\t        value: function setNormals(normals) {\n\t            this.normals = new Float32Array(normals);\n\t\n\t            // Indicate that an attribut of the geometry need an update.\n\t            if (this.vertexFormat) this.vertexFormat.setStreamAsWaitingUpdate(_VertexFormat.VertexElement.Usage.Normal, true);\n\t        }\n\t\n\t        /**\n\t         * Set vertices positions\n\t         *\n\t         * @param {Float32Array} positions An array of float values representing positions (x, y, z, x, y, z, …)\n\t         */\n\t\n\t    }, {\n\t        key: 'setPositions',\n\t        value: function setPositions(positions) {\n\t            this.positions = new Float32Array(positions);\n\t\n\t            // Indicate that an attribute of the geometry need an update.\n\t            if (this.vertexFormat) this.vertexFormat.setStreamAsWaitingUpdate(_VertexFormat.VertexElement.Usage.Position, true);\n\t        }\n\t\n\t        /**\n\t         * Set texture coordinates (uvs) for each vertex\n\t         *\n\t         * @param {Float32Array} uvs An array of float values representing texture coordinates (u, v, u, v, …)\n\t         */\n\t\n\t    }, {\n\t        key: 'setTextureUVs',\n\t        value: function setTextureUVs(uvs) {\n\t            this.uvs = new Float32Array(uvs);\n\t\n\t            // Indicate that an attribute of the geometry need an update\n\t            if (this.vertexFormat) this.vertexFormat.setStreamAsWaitingUpdate(_VertexFormat.VertexElement.Usage.UVS, true);\n\t        }\n\t    }, {\n\t        key: 'setVertexFormat',\n\t\n\t        /**\n\t         * Set geometry's format\n\t         *\n\t         * @param {VertexFormat} vertexFormat A VertexFormat instance\n\t         */\n\t        value: function setVertexFormat(vertexFormat) {\n\t            this.vertexFormat = vertexFormat;\n\t        }\n\t\n\t        /**\n\t         * Get format\n\t         *\n\t         * @return {VertexFormat} A VertexFormat instance\n\t         */\n\t\n\t    }, {\n\t        key: 'getVertexFormat',\n\t        value: function getVertexFormat() {\n\t            return this.vertexFormat;\n\t        }\n\t\n\t        /**\n\t         * Return index count\n\t         *\n\t         * @return {number} Indices array's length\n\t         */\n\t\n\t    }, {\n\t        key: 'getIndexCount',\n\t        value: function getIndexCount() {\n\t            return this.indices.length;\n\t        }\n\t\n\t        /**\n\t         * Return the indices\n\t         *\n\t         * @return {Uint16Array} Indices array\n\t         */\n\t\n\t    }, {\n\t        key: 'getIndices',\n\t        value: function getIndices() {\n\t            return this.indices;\n\t        }\n\t\n\t        /**\n\t         * Return an array with the color for each vertex\n\t         *\n\t         * @return {Float32Array} An array with the format [r, g, b, a, r, g, b, a, …]\n\t         */\n\t\n\t    }, {\n\t        key: 'getVerticesColors',\n\t        value: function getVerticesColors() {\n\t            return this.colors;\n\t        }\n\t\n\t        /**\n\t         * Return an array with the position for each vertex\n\t         *\n\t         * @return {Float32Array} An array with the format [x, y, z, x, y, z, …]\n\t         */\n\t\n\t    }, {\n\t        key: 'getVerticesPositions',\n\t        value: function getVerticesPositions() {\n\t            return this.positions;\n\t        }\n\t\n\t        /**\n\t         * Return an array with the normal for each vertex\n\t         *\n\t         * @return {Float32Array} An array with the format [x, y, z, x, y, z, …]\n\t         */\n\t\n\t    }, {\n\t        key: 'getVerticesNormals',\n\t        value: function getVerticesNormals() {\n\t            return this.normals;\n\t        }\n\t\n\t        /**\n\t         * Return an array with the texture coordinates for each vertex\n\t         *\n\t         * @return {Float32Array} An array with the format [u, v, u, v, …]\n\t         */\n\t\n\t    }, {\n\t        key: 'getVerticesUVs',\n\t        value: function getVerticesUVs() {\n\t            return this.uvs;\n\t        }\n\t\n\t        /**\n\t         * Create a cube\n\t         *\n\t         * @param {number} width Width\n\t         * @param {number} height Height\n\t         * @param {number} depth Depth\n\t         * @return {Geometry} A Geometry instance\n\t         */\n\t\n\t    }], [{\n\t        key: 'createCube',\n\t        value: function createCube(width, height, depth) {\n\t            var geometry = new Geometry();\n\t\n\t            // Set format\n\t            var format = new _VertexFormat.VertexFormat();\n\t            format.add(new _VertexFormat.VertexElement(_VertexFormat.VertexElement.Usage.Position, 0, _VertexFormat.VertexElement.Type.Float, 3, false));\n\t            format.add(new _VertexFormat.VertexElement(_VertexFormat.VertexElement.Usage.Color, 2, _VertexFormat.VertexElement.Type.Float, 4, false));\n\t            format.add(new _VertexFormat.VertexElement(_VertexFormat.VertexElement.Usage.UVS, 1, _VertexFormat.VertexElement.Type.Float, 2, false));\n\t            format.add(new _VertexFormat.VertexElement(_VertexFormat.VertexElement.Usage.Normal, 3, _VertexFormat.VertexElement.Type.Float, 3, false));\n\t            geometry.setVertexFormat(format);\n\t\n\t            // Set positions\n\t            var positions = new Float32Array([-width, -height, depth, width, -height, depth, width, height, depth, -width, height, depth, -width, -height, -depth, -width, height, -depth, width, height, -depth, width, -height, -depth, -width, height, -depth, -width, height, depth, width, height, depth, width, height, -depth, -width, -height, -depth, width, -height, -depth, width, -height, depth, -width, -height, depth, width, -height, -depth, width, height, -depth, width, height, depth, width, -height, depth, -width, -height, -depth, -width, -height, depth, -width, height, depth, -width, height, -depth]);\n\t            geometry.setPositions(positions);\n\t\n\t            // Set colors\n\t            var colors = new Float32Array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]);\n\t            geometry.setColors(colors);\n\t\n\t            // Texture uvs\n\t            var uvs = new Float32Array([0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1]);\n\t            geometry.setTextureUVs(uvs);\n\t\n\t            // Normals\n\t            var normals = new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0]);\n\t            geometry.setNormals(normals);\n\t\n\t            // Indices.\n\t            var indices = new Uint16Array([0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23]);\n\t            geometry.setIndices(indices);\n\t\n\t            return geometry;\n\t        }\n\t\n\t        /**\n\t         * Create a rectangle\n\t         *\n\t         * @param {number} width Width\n\t         * @param {number} height Height\n\t         * @return {Geometry} A Geometry instance\n\t         */\n\t\n\t    }, {\n\t        key: 'createRectangle',\n\t        value: function createRectangle(width, height) {\n\t            var geometry = new Geometry();\n\t\n\t            // Set format\n\t            var format = new _VertexFormat.VertexFormat();\n\t            format.add(new _VertexFormat.VertexElement(_VertexFormat.VertexElement.Usage.Position, 0, _VertexFormat.VertexElement.Type.Float, 3, false));\n\t            format.add(new _VertexFormat.VertexElement(_VertexFormat.VertexElement.Usage.Color, 1, _VertexFormat.VertexElement.Type.Float, 4, false));\n\t            format.add(new _VertexFormat.VertexElement(_VertexFormat.VertexElement.Usage.UVS, 2, _VertexFormat.VertexElement.Type.Float, 2, false));\n\t            format.add(new _VertexFormat.VertexElement(_VertexFormat.VertexElement.Usage.Normal, 3, _VertexFormat.VertexElement.Type.Float, 3, false));\n\t            geometry.setVertexFormat(format);\n\t\n\t            // Set positions\n\t            var positions = new Float32Array([-width, -height, 0, -width, height, 0, width, -height, 0, width, height, 0]);\n\t            geometry.setPositions(positions);\n\t\n\t            // Set colors\n\t            var colors = new Float32Array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]);\n\t            geometry.setColors(colors);\n\t\n\t            // Texture uvs\n\t            var uvs = new Float32Array([0, 1, 0, 0, 1, 1, 1, 0]);\n\t            geometry.setTextureUVs(uvs);\n\t\n\t            // Normals\n\t            var normals = new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0]);\n\t            geometry.setNormals(normals);\n\t\n\t            // Indices\n\t            geometry.setIndices(new Uint16Array([0, 2, 1, 3]));\n\t\n\t            return geometry;\n\t        }\n\t    }]);\n\t\n\t    return Geometry;\n\t}(_ContextResource2.ContextResource);\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * A context resource:\n\t * - Indicate that the object have a refence to the graphic API.\n\t * - The object have a unique ID.\n\t *\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar ContextResource = exports.ContextResource = function () {\n\t  /**\n\t   * Constructor\n\t   */\n\t\n\t  function ContextResource() {\n\t    _classCallCheck(this, ContextResource);\n\t\n\t    /**\n\t     * Unique identifier\n\t     *\n\t     * @type {number}\n\t     * @public\n\t     */\n\t    this.UID = ++ContextResource.globalID;\n\t  }\n\t\n\t  /**\n\t   * Get unique ID\n\t   *\n\t   * @return {number} An unsigned integer\n\t   */\n\t\n\t  _createClass(ContextResource, [{\n\t    key: \"getUID\",\n\t    value: function getUID() {\n\t      return this.UID;\n\t    }\n\t  }]);\n\t\n\t  return ContextResource;\n\t}();\n\t\n\t/**\n\t* Global ID\n\t *\n\t* @type {number}\n\t*/\n\t\n\tContextResource.globalID = -1;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Represent one of the element of a vertex.\n\t * It can be a position, a normal, a color, ….\n\t *\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar VertexElement =\n\t/**\n\t * Constructor\n\t *\n\t * @param {VertexElement.Usage} usage Element usage\n\t * @param {number} stream Stream index\n\t * @param {VertexElement.Type} type Type of element\n\t * @param {number?} count Value count, ex: A \"vec2\" will have \"2\" for this parameter\n\t * @param {boolean?} normalize True to ask rendering API to normalize values\n\t */\n\texports.VertexElement = function VertexElement(usage, stream, type) {\n\t  var count = arguments.length <= 3 || arguments[3] === undefined ? 0 : arguments[3];\n\t  var normalize = arguments.length <= 4 || arguments[4] === undefined ? false : arguments[4];\n\t\n\t  _classCallCheck(this, VertexElement);\n\t\n\t  /**\n\t   * Value count for this element\n\t   *\n\t   * @type {number}\n\t   * @public\n\t   */\n\t  this.count = count;\n\t\n\t  /**\n\t   * Indicate if the value need to be normalized by the graphic API\n\t   *\n\t   * @type {boolean}\n\t   * @public\n\t   */\n\t  this.normalize = normalize;\n\t\n\t  /**\n\t   * Offset in the vertex data\n\t   *\n\t   * @type {number}\n\t   * @public\n\t   */\n\t  this.offset = 0;\n\t\n\t  /**\n\t   * Stream index\n\t   *\n\t   * @type {number}\n\t   * @public\n\t   */\n\t  this.stream = stream;\n\t\n\t  /**\n\t   * Stream stride.\n\t   * @type {number}\n\t   * @public\n\t   */\n\t  this.stride = 0;\n\t\n\t  /**\n\t   * Type of value\n\t   *\n\t   * @type {VertexElement.Type}\n\t   * @public\n\t   */\n\t  this.type = type;\n\t\n\t  /**\n\t   * Type of element\n\t   *\n\t   * @type {VertexElement.Usage}\n\t   * @public\n\t   */\n\t  this.usage = usage;\n\t};\n\t\n\t/**\n\t * Type of stream available\n\t *\n\t * @enum {number}\n\t */\n\t\n\tVertexElement.StreamType = { Static: 0, Dynamic: 1, Stream: 2 };\n\t\n\t/**\n\t * VertexElement's types\n\t *\n\t * @enum {number}\n\t */\n\tVertexElement.Type = { Byte: 0, Float: 1, Int: 2, Short: 3 };\n\t\n\t/**\n\t * VertexElement's usage\n\t *\n\t * @enum {number}\n\t */\n\tVertexElement.Usage = { Position: 0, Color: 1, UVS: 2, Normal: 3, Tangent: 4 };\n\t\n\t/**\n\t * Indicate the format of a vertex\n\t *\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar VertexFormat = exports.VertexFormat = function () {\n\t  /**\n\t   * Constructor\n\t   */\n\t\n\t  function VertexFormat() {\n\t    _classCallCheck(this, VertexFormat);\n\t\n\t    /**\n\t     * Elements inside this format\n\t     *\n\t     * @type {Array.<VertexElement>}\n\t     * @private\n\t     */\n\t    this.elements = [];\n\t\n\t    /**\n\t     * Stream's strides\n\t     *\n\t     * @type {Array.<VertexElement.StreamType>}\n\t     * @private\n\t     */\n\t    this.streamType = [];\n\t\n\t    /**\n\t     * Stream's strides\n\t     *\n\t     * @type {Array.<number>}\n\t     * @private\n\t     */\n\t    this.streamStride = [];\n\t\n\t    /**\n\t     * Stream's state\n\t     *\n\t     * @type {Array.<boolean>}\n\t     * @private\n\t     */\n\t    this.streamNeedUpdate = [];\n\t\n\t    /**\n\t     * Indicate if the indices have changed\n\t     *\n\t     * @type {boolean}\n\t     * @private\n\t     */\n\t    this.indicesNeedUpdate = true;\n\t  }\n\t\n\t  /**\n\t   * Add an element to the format\n\t   *\n\t   * @param {VertexElement} element A VertexElement instance\n\t   */\n\t\n\t  _createClass(VertexFormat, [{\n\t    key: \"add\",\n\t    value: function add(element) {\n\t      this.elements.push(element);\n\t      this.compute();\n\t    }\n\t  }, {\n\t    key: \"set\",\n\t\n\t    /**\n\t     * Set elements\n\t     *\n\t     * @param {Array.<VertexElement>} elements An array of VertexElement instance\n\t     */\n\t    value: function set(elements) {\n\t      this.elements = elements;\n\t      this.compute();\n\t    }\n\t\n\t    /**\n\t     * Get stream's type\n\t     *\n\t     * @param {number} index Stream index\n\t     * @param {VertexElement.StreamType} type A type\n\t     */\n\t\n\t  }, {\n\t    key: \"setStreamType\",\n\t    value: function setStreamType(index, type) {\n\t      this.streamType[index] = type;\n\t    }\n\t\n\t    /**\n\t     * Compute offset and vertex format's data\n\t     *\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: \"compute\",\n\t    value: function compute() {\n\t      var offset = 0;\n\t      var size = 0;\n\t      var previousStream = 0;\n\t\n\t      // Sort elements by stream (ascending)\n\t      this.elements.sort(function (a, b) {\n\t        if (a.stream < b.stream) return -1;else if (a.stream > b.stream) return 1;\n\t\n\t        return 0;\n\t      });\n\t\n\t      // Compute values\n\t      for (var i = 0; i < this.elements.length; i++) {\n\t        // Reset offset and stride when we change stream\n\t        if (previousStream != this.elements[i].stream) {\n\t          this.streamStride[previousStream] = offset;\n\t          offset = 0;\n\t        }\n\t\n\t        switch (this.elements[i].type) {\n\t          case VertexElement.Type.Float:\n\t          case VertexElement.Type.Int:\n\t            size = 4;\n\t            break;\n\t          case VertexElement.Type.Short:\n\t            size = 2;\n\t            break;\n\t          case VertexElement.Type.Byte:\n\t            size = 1;\n\t            break;\n\t          default:\n\t            size = 1;\n\t            break;\n\t        }\n\t\n\t        this.elements[i].offset = offset;\n\t        size *= this.elements[i].count;\n\t        offset += size;\n\t        previousStream = this.elements[i].stream;\n\t      }\n\t\n\t      this.streamStride[previousStream] = offset;\n\t    }\n\t\n\t    /**\n\t     * Indicate if the indices need an update\n\t     *\n\t     * @param {boolean} state True to ask an update\n\t     */\n\t\n\t  }, {\n\t    key: \"setIndicesAsWaitingUpdate\",\n\t    value: function setIndicesAsWaitingUpdate(state) {\n\t      this.indicesNeedUpdate = state;\n\t    }\n\t\n\t    /**\n\t     * Indicate if the stream need an update.\n\t     * @param {VertexElement.Usage } usage Stream usage.\n\t     * @param {boolean} state True to ask an update.\n\t     */\n\t\n\t  }, {\n\t    key: \"setStreamAsWaitingUpdate\",\n\t    value: function setStreamAsWaitingUpdate(usage, state) {\n\t      for (var i = 0; i < this.elements.length; i++) {\n\t        if (this.elements[i].usage == usage) this.streamNeedUpdate[this.elements[i].stream] = state;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Get elements\n\t     *\n\t     * @return {Array.<VertexElement>} An array of VertexElement\n\t     */\n\t\n\t  }, {\n\t    key: \"getElements\",\n\t    value: function getElements() {\n\t      return this.elements;\n\t    }\n\t\n\t    /**\n\t     * Get stride of the asked stream\n\t     *\n\t     * @param {number} index Stream index\n\t     * @return {number} A stride value, 0 if the stream don't exist\n\t     */\n\t\n\t  }, {\n\t    key: \"getStreamStride\",\n\t    value: function getStreamStride(index) {\n\t      return this.streamStride[index] || 0;\n\t    }\n\t\n\t    /**\n\t     * Get stream's type\n\t     *\n\t     * @param {number} index Stream index\n\t     * @return {VertexElement.StreamType} A type, default: stream\n\t     */\n\t\n\t  }, {\n\t    key: \"getStreamType\",\n\t    value: function getStreamType(index) {\n\t      return this.streamType[index] || VertexElement.StreamType.Stream;\n\t    }\n\t\n\t    /**\n\t     * Check if indices need an update\n\t     *\n\t     * @return {boolean} True if the indices need an update, otherwise false\n\t     */\n\t\n\t  }, {\n\t    key: \"isIndicesWaitingUpdate\",\n\t    value: function isIndicesWaitingUpdate() {\n\t      return this.indicesNeedUpdate;\n\t    }\n\t\n\t    /**\n\t     * Check if the asked stream need an update\n\t     *\n\t     * @param {number} index Stream index\n\t     * @return {boolean} True if the stream need an update, otherwise false\n\t     */\n\t\n\t  }, {\n\t    key: \"isStreamWaitingUpdate\",\n\t    value: function isStreamWaitingUpdate(index) {\n\t      return this.streamNeedUpdate[index];\n\t    }\n\t  }]);\n\t\n\t  return VertexFormat;\n\t}();\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.Material = undefined;\n\t\n\tvar _Pass = __webpack_require__(24);\n\t\n\tvar _Types = __webpack_require__(25);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * A material\n\t *\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar Material = exports.Material = function () {\n\t    /**\n\t     * Constructor\n\t     */\n\t\n\t    function Material() {\n\t        _classCallCheck(this, Material);\n\t\n\t        /**\n\t         * Index of the technique to use\n\t         *\n\t         * @type {number}\n\t         * @private\n\t         */\n\t        this.activeTechnique = 0;\n\t\n\t        /**\n\t         * An array of passes per technique\n\t         * By default, we have at least one technique available\n\t         *\n\t         * @type {Array.<Array.<Pass>>}\n\t         * @private\n\t         */\n\t        this.techniques = [];\n\t\n\t        // Add a default technique\n\t        this.createTechnique();\n\t    }\n\t\n\t    /**\n\t     * Shortcut to create common materials\n\t     *\n\t     * @return {Material} A Material instance\n\t     */\n\t\n\t    _createClass(Material, [{\n\t        key: 'createPass',\n\t\n\t        /**\n\t         * Add a pass to a technique\n\t         *\n\t         * @param {number=} techniqueIndex Targeted technique's index (default: 0)\n\t         * @return {Pass} A Pass instance.\n\t         */\n\t        value: function createPass() {\n\t            var techniqueIndex = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\t\n\t            var pass = new _Pass.Pass();\n\t            this.techniques[techniqueIndex].push(pass);\n\t\n\t            return pass;\n\t        }\n\t\n\t        /**\n\t         * Create a new technique\n\t         *\n\t         * @return {number} The technique index.\n\t         */\n\t\n\t    }, {\n\t        key: 'createTechnique',\n\t        value: function createTechnique() {\n\t            this.techniques.push([]);\n\t            return this.techniques.length - 1;\n\t        }\n\t\n\t        /**\n\t         * Set technique to use\n\t         *\n\t         * @param {number} techniqueIndex Targeted technique's index\n\t         */\n\t\n\t    }, {\n\t        key: 'setActiveTechnique',\n\t        value: function setActiveTechnique(techniqueIndex) {\n\t            this.activeTechnique = techniqueIndex;\n\t        }\n\t\n\t        /**\n\t         * Get active technique's index\n\t         *\n\t         * @return {number} A positive integer\n\t         */\n\t\n\t    }, {\n\t        key: 'getActiveTechnique',\n\t        value: function getActiveTechnique() {\n\t            return this.activeTechnique;\n\t        }\n\t\n\t        /**\n\t         * Get a pass\n\t         *\n\t         * @param {number} techniqueIndex Targeted technique's index\n\t         * @param {number} passIndex Pass's index\n\t         * @return {?Pass} A Pass instance or null if the technique or the pass don't exist\n\t         */\n\t\n\t    }, {\n\t        key: 'getPass',\n\t        value: function getPass(techniqueIndex, passIndex) {\n\t            if (techniqueIndex >= this.techniques.length) return null;\n\t\n\t            return this.techniques[techniqueIndex][passIndex] || null;\n\t        }\n\t\n\t        /**\n\t         * Get pass count\n\t         *\n\t         * @param {number} techniqueIndex Targeted technique's index\n\t         * @return {number} A signed integer\n\t         */\n\t\n\t    }, {\n\t        key: 'getPassCount',\n\t        value: function getPassCount() {\n\t            var techniqueIndex = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\t\n\t            if (techniqueIndex >= this.techniques.length) return 0;\n\t\n\t            return this.techniques[techniqueIndex].length;\n\t        }\n\t    }], [{\n\t        key: 'create',\n\t        value: function create(name) {\n\t            var material = new Material();\n\t            var pass = material.createPass();\n\t\n\t            if (name == 'default') {\n\t                pass.add(\"material.ambient\", _Types.Type.Float, [0.0, 0.0, 0.0]);\n\t                pass.add(\"material.diffuse\", _Types.Type.Float, [0.55, 0.55, 0.55]);\n\t                pass.add(\"material.specular\", _Types.Type.Float, [0.7, 0.7, 0.7]);\n\t                pass.add(\"material.shininess\", _Types.Type.Float, 38.4);\n\t            }\n\t\n\t            return material;\n\t        }\n\t    }]);\n\t\n\t    return Material;\n\t}();\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.Pass = exports.PassParameter = undefined;\n\t\n\tvar _StateBlock2 = __webpack_require__(18);\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * A pass parameter\n\t *\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar PassParameter =\n\t/**\n\t * Constructor\n\t *\n\t * @param {string} name Name to assign\n\t * @param {Type} type Element's type\n\t * @param {Array.<number>|number|boolean|Texture|Float32Array} value Element's value\n\t */\n\texports.PassParameter = function PassParameter(name, type, value) {\n\t    _classCallCheck(this, PassParameter);\n\t\n\t    /**\n\t     * Name\n\t     *\n\t     * @type {string}\n\t     * @public\n\t     */\n\t    this.name = name;\n\t\n\t    /**\n\t     * Type\n\t     *\n\t     * @type {Type}\n\t     * @public\n\t     */\n\t    this.type = type;\n\t\n\t    /**\n\t     * Value\n\t     *\n\t     * @type {Array.<number>|number|boolean|Texture|Float32Array}\n\t     * @public\n\t     */\n\t    this.value = value;\n\t};\n\t\n\t/**\n\t * A pass\n\t *\n\t * @extends {StateBlock}\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar Pass = exports.Pass = function (_StateBlock) {\n\t    _inherits(Pass, _StateBlock);\n\t\n\t    /**\n\t     * Constructor\n\t     *\n\t     * @param {string} name Name to assign\n\t     * @param {Type} type Element's type\n\t     * @param {Array.<number>|number|boolean|Texture|Float32Array} value Element's value\n\t     */\n\t\n\t    function Pass(name, type, value) {\n\t        _classCallCheck(this, Pass);\n\t\n\t        /**\n\t        * Parameters: elements to send to the GPU\n\t        *\n\t        * @type {Array.<PassParameter>}\n\t        * @private\n\t        */\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Pass).call(this));\n\t\n\t        _this.parameters = [];\n\t        return _this;\n\t    }\n\t\n\t    /**\n\t     * Add a parameter to the material\n\t     *\n\t     * @param {string} name Parameter's name\n\t     * @param {Type} type Parameter's type\n\t     * @param {Array.<number>|number|boolean|Texture|Float32Array} value Parameter's value\n\t     */\n\t\n\t    _createClass(Pass, [{\n\t        key: 'add',\n\t        value: function add(name, type, value) {\n\t            // A value with this name already exist? We erase previous data …\n\t            for (var i = 0; i < this.parameters.length; i++) {\n\t                if (this.parameters[i].name == name) {\n\t                    this.parameters[i].value = value;\n\t                    this.parameters[i].type = type;\n\t                    return;\n\t                }\n\t            }\n\t\n\t            // … otherwise we create a new one\n\t            this.parameters.push(new PassParameter(name, type, value));\n\t        }\n\t\n\t        /**\n\t         * Set parameter's value\n\t         *\n\t         * @param {string} name Parameter's name\n\t         * @param {Array.<number>|number|boolean|Texture|Float32Array} value Parameter's value\n\t         */\n\t\n\t    }, {\n\t        key: 'set',\n\t        value: function set(name, value) {\n\t            for (var i = 0; i < this.parameters.length; i++) {\n\t                if (this.parameters[i].name == name) {\n\t                    this.parameters[i].value = value;\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Return an array with all material's parameters\n\t         *\n\t         * @return {Array.<PassParameter>} An array of PassParameter\n\t         */\n\t\n\t    }, {\n\t        key: 'getParameters',\n\t        value: function getParameters() {\n\t            return this.parameters;\n\t        }\n\t    }]);\n\t\n\t    return Pass;\n\t}(_StateBlock2.StateBlock);\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Types available\n\t */\n\t\n\tvar Type = exports.Type = function Type() {\n\t  _classCallCheck(this, Type);\n\t};\n\t\n\t/**\n\t * Float\n\t *\n\t * @type {number}\n\t */\n\t\n\tType.Float = 0;\n\t\n\t/**\n\t * Integer\n\t *\n\t * @type {number}\n\t */\n\tType.Int = 1;\n\t\n\t/**\n\t * Bool\n\t *\n\t * @type {number}\n\t */\n\tType.Bool = 2;\n\t\n\t/**\n\t * Matrix\n\t *\n\t * @type {number}\n\t */\n\tType.Matrix = 3;\n\t\n\t/**\n\t * 2D Texture\n\t *\n\t * @type {number}\n\t */\n\tType.Texture2D = 4;\n\t\n\t/**\n\t * 3D Texture\n\t *\n\t * @type {number}\n\t */\n\tType.TextureCube = 5;\n\t\n\t/**\n\t * Byte\n\t *\n\t * @type {number}\n\t */\n\tType.Byte = 6;\n\t\n\t/**\n\t * u_Byte\n\t *\n\t * @type {number}\n\t */\n\tType.u_Byte = 7;\n\t\n\t/**\n\t * Short\n\t *\n\t * @type {number}\n\t */\n\tType.Short = 8;\n\t\n\t/**\n\t * u_Short\n\t *\n\t * @type {number}\n\t */\n\tType.u_Short = 9;\n\t\n\t/**\n\t * u_Int\n\t * \n\t * @type {number}\n\t */\n\tType.u_Int = 10;\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Mesh = undefined;\n\t\n\tvar _Drawable2 = __webpack_require__(27);\n\t\n\tvar _MeshCommand = __webpack_require__(28);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * A mesh\n\t *\n\t * @extends {Drawable}\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar Mesh = exports.Mesh = function (_Drawable) {\n\t  _inherits(Mesh, _Drawable);\n\t\n\t  /**\n\t   * Constructor\n\t   */\n\t\n\t  function Mesh() {\n\t    _classCallCheck(this, Mesh);\n\t\n\t    /**\n\t     * Geometry\n\t     *\n\t     * @type {Geometry}\n\t     * @private\n\t     */\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Mesh).call(this));\n\t\n\t    _this.geometry = null;\n\t\n\t    /**\n\t     * Material\n\t     *\n\t     * @type {Material}\n\t     * @private\n\t     */\n\t    _this.material = null;\n\t\n\t    /**\n\t     * Program\n\t     *\n\t     * @type {Program}\n\t     * @private\n\t     */\n\t    _this.program = null;\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Draw the element\n\t   *\n\t   * @param {RenderTarget} renderTarget Renderer who called this method\n\t   */\n\t\n\t  _createClass(Mesh, [{\n\t    key: 'draw',\n\t    value: function draw(renderTarget) {\n\t      if (!this.geometry || !this.material || !this.program) return;\n\t\n\t      var task = renderTarget.getActiveTask();\n\t      var activeTechnique = this.material.getActiveTechnique();\n\t      var passCount = this.material.getPassCount(activeTechnique);\n\t\n\t      for (var i = 0; i < passCount; i++) {\n\t        task.addCommand(new _MeshCommand.MeshCommand(this.geometry, this.material.getPass(activeTechnique, i), this.program, this.getTransformationMatrix(), this.getNormalMatrix(), 0, this.geometry.getIndexCount()));\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setGeometry',\n\t\n\t    /**\n\t     * Set geometry\n\t     *\n\t     * @param {Geometry} geometry A Geometry instance\n\t     */\n\t    value: function setGeometry(geometry) {\n\t      this.geometry = geometry;\n\t    }\n\t\n\t    /**\n\t     * Set material\n\t     *\n\t     * @param {Material} material A Material instance\n\t     */\n\t\n\t  }, {\n\t    key: 'setMaterial',\n\t    value: function setMaterial(material) {\n\t      this.material = material;\n\t    }\n\t  }, {\n\t    key: 'setProgram',\n\t\n\t    /**\n\t     * Set program\n\t     *\n\t     * @param {Program} program A Program instance\n\t     */\n\t    value: function setProgram(program) {\n\t      this.program = program;\n\t    }\n\t\n\t    /**\n\t     * Return a reference to the program use by this mesh\n\t     *\n\t     * @return {Program} A Program instance\n\t     */\n\t\n\t  }, {\n\t    key: 'getProgram',\n\t    value: function getProgram() {\n\t      return this.program;\n\t    }\n\t  }]);\n\t\n\t  return Mesh;\n\t}(_Drawable2.Drawable);\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Drawable = undefined;\n\t\n\tvar _Node2 = __webpack_require__(16);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * A drawable element\n\t *\n\t * @extends {Node}\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar Drawable = exports.Drawable = function (_Node) {\n\t  _inherits(Drawable, _Node);\n\t\n\t  function Drawable() {\n\t    _classCallCheck(this, Drawable);\n\t\n\t    return _possibleConstructorReturn(this, Object.getPrototypeOf(Drawable).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Drawable, [{\n\t    key: 'draw',\n\t\n\t    /**\n\t     * Draw the element\n\t     *\n\t     * @param {RenderTarget} renderTarget Renderer who called this method\n\t     */\n\t    value: function draw(renderTarget) {}\n\t  }, {\n\t    key: 'visit',\n\t\n\t    /**\n\t     * Visit the node and his children\n\t     *\n\t     * @param {RenderTarget} renderTarget Renderer who called this method\n\t     */\n\t    value: function visit(renderTarget) {\n\t      this.draw(renderTarget);\n\t    }\n\t  }]);\n\t\n\t  return Drawable;\n\t}(_Node2.Node);\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.MeshCommand = undefined;\n\t\n\tvar _Program = __webpack_require__(29);\n\t\n\tvar _RenderCommand2 = __webpack_require__(30);\n\t\n\tvar _Types = __webpack_require__(25);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Draw meshes\n\t *\n\t * @extends {RenderCommand}\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar MeshCommand = exports.MeshCommand = function (_RenderCommand) {\n\t  _inherits(MeshCommand, _RenderCommand);\n\t\n\t  /**\n\t   * Constructor\n\t   *\n\t   * @param {Geometry} geometry A Geometry instance\n\t   * @param {Pass} pass A Pass instance\n\t   * @param {Program} program A Program instance\n\t   * @param {mat4} modelMatrix A Matrix with model's transformations (scale, rotate, translate)\n\t   * @param {mat4} normalMatrix A Matrix with model's normals transformed\n\t   * @param {number} startVertex First vertex to draw\n\t   * @param {number} endVertex Last vertex to draw\n\t   */\n\t\n\t  function MeshCommand(geometry, pass, program, modelMatrix, normalMatrix, startVertex, endVertex) {\n\t    _classCallCheck(this, MeshCommand);\n\t\n\t    /**\n\t     * Last vertex to draw\n\t     *\n\t     * @type {number}\n\t     * @private\n\t     */\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(MeshCommand).call(this));\n\t\n\t    _this.endVertex = endVertex;\n\t\n\t    /**\n\t     * Geometry\n\t     *\n\t     * @type {Geometry}\n\t     * @private\n\t     */\n\t    _this.geometry = geometry;\n\t\n\t    /**\n\t     * Model's matrix\n\t     *\n\t     * @type {mat4}\n\t     * @private\n\t     */\n\t    _this.modelMatrix = modelMatrix;\n\t\n\t    /**\n\t     * Model's normal matrix\n\t     *\n\t     * @type {mat4}\n\t     * @private\n\t     */\n\t    _this.normalMatrix = normalMatrix;\n\t\n\t    /**\n\t     * Pass\n\t     *\n\t     * @type {Pass}\n\t     * @private\n\t     */\n\t    _this.pass = pass;\n\t\n\t    /**\n\t     * Program\n\t     *\n\t     * @type {Program}\n\t     * @private\n\t     */\n\t    _this.program = program;\n\t\n\t    /**\n\t     * First vertex to draw\n\t     *\n\t     * @type {number}\n\t     * @private\n\t     */\n\t    _this.startVertex = startVertex;\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Execute the command\n\t   *\n\t   * @param {RenderAPI} renderAPI RenderAPI instance used to process the commands\n\t   */\n\t\n\t  _createClass(MeshCommand, [{\n\t    key: 'execute',\n\t    value: function execute(renderAPI) {\n\t      // Program\n\t      var programCode = renderAPI.setProgram(this.program);\n\t      if (programCode == -1) return;\n\t\n\t      // Must send/update shared uniforms\n\t      if (programCode == 1) renderAPI.setUniform(this.program, 'uCamera', _Types.Type.Matrix, renderAPI.getActiveCamera().getViewProjectionMatrix());\n\t\n\t      // Send uniforms.\n\t      renderAPI.setUniform(this.program, 'uModel', _Types.Type.Matrix, this.modelMatrix);\n\t      renderAPI.setUniform(this.program, 'uModelNormal', _Types.Type.Matrix, this.normalMatrix);\n\t\n\t      // State.\n\t      renderAPI.applyStateBlock(this.pass);\n\t\n\t      // Material.\n\t      var parameters = this.pass.getParameters();\n\t      var slot = 0;\n\t      for (var i = 0; i < parameters.length; i++) {\n\t        var parameter = parameters[i];\n\t        switch (parameter.type) {\n\t          case _Types.Type.Texture2D:\n\t            {\n\t              renderAPI.setUniform(this.program, parameter.name, _Types.Type.Int, slot);\n\t              renderAPI.bindTexture(slot, /** @type {TextureInterface} */parameter.value);\n\t              slot++;\n\t              break;\n\t            }\n\t          default:\n\t            {\n\t              renderAPI.setUniform(this.program, parameter.name, parameter.type, parameter.value);\n\t              break;\n\t            }\n\t        }\n\t      }\n\t\n\t      // Bind geometry\n\t      renderAPI.setGeometry(this.geometry);\n\t\n\t      // Draw object\n\t      renderAPI.drawIndexedPrimitives(this.pass.drawingMode, this.startVertex, this.endVertex);\n\t    }\n\t  }]);\n\t\n\t  return MeshCommand;\n\t}(_RenderCommand2.RenderCommand);\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.ProgramElement = exports.Program = undefined;\n\t\n\tvar _ContextResource2 = __webpack_require__(21);\n\t\n\tvar _FileLoader = __webpack_require__(19);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * A program\n\t *\n\t * @extends {ContextResource}\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar Program = exports.Program = function (_ContextResource) {\n\t  _inherits(Program, _ContextResource);\n\t\n\t  /**\n\t   * Constructor\n\t   *\n\t   * @constructor\n\t   */\n\t\n\t  function Program() {\n\t    _classCallCheck(this, Program);\n\t\n\t    /**\n\t     * Attributes\n\t     *\n\t     * @type {Array.<ProgramElement>}\n\t     * @private\n\t     */\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Program).call(this));\n\t\n\t    _this.attributes = [];\n\t\n\t    /**\n\t     * Shader sources\n\t     *\n\t     * - First index is for the vertex shader\n\t     * - Second index is for the fragment shader\n\t     *\n\t     * @type {Array.<string>}\n\t     * @private\n\t     */\n\t    _this.sources = [null, null];\n\t\n\t    /**\n\t     * Uniforms\n\t     *\n\t     * @type {Array.<Program.Element>}\n\t     * @private\n\t     */\n\t    _this.uniforms = [];\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Load program from shader files\n\t   *\n\t   * @param {string} vertexFile Path to the vertex shader file\n\t   * @param {string} fragmentFile Path to the fragment shader file\n\t   */\n\t\n\t  _createClass(Program, [{\n\t    key: 'loadFromFiles',\n\t    value: function loadFromFiles(vertexFile, fragmentFile) {\n\t      var _this2 = this;\n\t\n\t      // Vertex file.\n\t      _FileLoader.FileLoader.load(vertexFile, function (status, data) {\n\t        _this2.sources[0] = data;\n\t      });\n\t\n\t      // Fragment file.\n\t      _FileLoader.FileLoader.load(fragmentFile, function (status, data) {\n\t        _this2.sources[1] = data;\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadFromData',\n\t\n\t    /**\n\t     * Load program from data\n\t     *\n\t     * @param {string} vertexSource Vertex shader code\n\t     * @param {string} fragmentSource Fragment shader code\n\t     */\n\t    value: function loadFromData(vertexSource, fragmentSource) {\n\t      this.sources[0] = vertexSource;\n\t      this.sources[1] = fragmentSource;\n\t    }\n\t\n\t    /**\n\t     * Get attributes\n\t     *\n\t     * @return {Array.<ProgramElement>} An array of attribute\n\t     */\n\t\n\t  }, {\n\t    key: 'getAttributes',\n\t    value: function getAttributes() {\n\t      return this.attributes;\n\t    }\n\t\n\t    /**\n\t     * Get program's sources\n\t     *\n\t     * @return {Array.<string>} Index 0: Vertex shader, Index 1: Fragment shader\n\t     */\n\t\n\t  }, {\n\t    key: 'getSources',\n\t    value: function getSources() {\n\t      return this.sources;\n\t    }\n\t\n\t    /**\n\t     * Get uniform\n\t     *\n\t     * @param {string} name Name of the uniform\n\t     * @return {?ProgramElement} A program Element or null if uniform doesn't exist\n\t     */\n\t\n\t  }, {\n\t    key: 'getUniform',\n\t    value: function getUniform(name) {\n\t      return this.uniforms[name] || null;\n\t    }\n\t\n\t    /**\n\t     * Get uniforms\n\t     *\n\t     * @return {Array.<ProgramElement>} An array of uniforms\n\t     */\n\t\n\t  }, {\n\t    key: 'getUniforms',\n\t    value: function getUniforms() {\n\t      return this.uniforms;\n\t    }\n\t\n\t    /**\n\t     * Say if program is ready to be use\n\t     *\n\t     * Source array must have two elements: the fragment and the vertex shaders\n\t     * @return {boolean} True if program is ready, otherwise false\n\t     */\n\t\n\t  }, {\n\t    key: 'isReady',\n\t    value: function isReady() {\n\t      return this.sources.length === 2 && this.sources[0] !== null && this.sources[1] !== null;\n\t    }\n\t  }]);\n\t\n\t  return Program;\n\t}(_ContextResource2.ContextResource);\n\t\n\t/**\n\t * An element from the shader\n\t *\n\t * @constructor\n\t */\n\t\n\tvar ProgramElement =\n\t/**\n\t * Constructor\n\t *\n\t * @param {number} location Location in the shader\n\t * @param {string} name His name\n\t * @param {Type} type Element's type (float, vec, …)\n\t * @param {number} size Element's size\n\t */\n\texports.ProgramElement = function ProgramElement(location, name, type, size) {\n\t  _classCallCheck(this, ProgramElement);\n\t\n\t  /**\n\t   * Location in the shader\n\t   *\n\t   * @type {number}\n\t   * @public\n\t   */\n\t  this.location = location;\n\t\n\t  /**\n\t   * Name\n\t   *\n\t   * @type {string}\n\t   * @public\n\t   */\n\t  this.name = name;\n\t\n\t  /**\n\t   * Type\n\t   *\n\t   * @type {Type}\n\t   * @public\n\t   */\n\t  this.type = type;\n\t\n\t  /**\n\t   * Size/Count\n\t   *\n\t   * @type {number}\n\t   * @public\n\t   */\n\t  this.size = size;\n\t};\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * An abstract rendering command\n\t *\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar RenderCommand = exports.RenderCommand = function () {\n\t  function RenderCommand() {\n\t    _classCallCheck(this, RenderCommand);\n\t  }\n\t\n\t  _createClass(RenderCommand, [{\n\t    key: \"isOpaque\",\n\t\n\t    /**\n\t     * Indicate if the command concern an opaque element\n\t     *\n\t     * @return {boolean} True if command must be in the opaque queue\n\t     */\n\t    value: function isOpaque() {\n\t      return true;\n\t    }\n\t  }, {\n\t    key: \"execute\",\n\t\n\t    /**\n\t     * Execute the command\n\t     *\n\t     * @param {RenderAPI} renderAPI RenderAPI instance used to process the commands\n\t     */\n\t    value: function execute(renderAPI) {}\n\t  }]);\n\t\n\t  return RenderCommand;\n\t}();\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Model = undefined;\n\t\n\tvar _Drawable2 = __webpack_require__(27);\n\t\n\tvar _ModelLoader = __webpack_require__(32);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * A model\n\t *\n\t * @extends {Drawable}\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar Model = exports.Model = function (_Drawable) {\n\t  _inherits(Model, _Drawable);\n\t\n\t  /**\n\t   * Constructor\n\t   *\n\t   * @param {string} filePath Path to the file with model's data\n\t   */\n\t\n\t  function Model() {\n\t    var filePath = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n\t\n\t    _classCallCheck(this, Model);\n\t\n\t    /**\n\t     * Meshes\n\t     *\n\t     * @type {Array.<Mesh>}\n\t     * @public\n\t     */\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Model).call(this));\n\t\n\t    _this.meshes = [];\n\t\n\t    if (filePath.length) _this.loadFromFile(filePath);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Update the node and his children\n\t   *\n\t   * @param {number} deltaTime A floating value representing time elapsed between two frames\n\t   * @param {boolean} parentUpdated Indicate if the parent element have been updated\n\t   * @return {boolean} True if the node have been updated\n\t   */\n\t\n\t  _createClass(Model, [{\n\t    key: 'update',\n\t    value: function update(deltaTime, parentUpdated) {\n\t      // Call parent method\n\t      var updated = _get(Object.getPrototypeOf(Model.prototype), 'update', this).call(this, deltaTime, parentUpdated);\n\t\n\t      // Update meshes.\n\t      for (var i = 0; i < this.meshes.length; i++) {\n\t        this.meshes[i].computeTransformationMatrix(this.getTransformationMatrix(), updated);\n\t      }return updated;\n\t    }\n\t\n\t    /**\n\t     * Draw the element\n\t     *\n\t     * @param {RenderTarget} renderTarget Renderer who called this method\n\t     */\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw(renderTarget) {\n\t      for (var i = 0; i < this.meshes.length; i++) {\n\t        this.meshes[i].draw(renderTarget);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Load model from a file\n\t     *\n\t     * @param {string} filePath Path to the file with model's data\n\t     */\n\t\n\t  }, {\n\t    key: 'loadFromFile',\n\t    value: function loadFromFile(filePath) {\n\t      _ModelLoader.ModelLoader.loadFromFile(filePath, this);\n\t    }\n\t  }]);\n\t\n\t  return Model;\n\t}(_Drawable2.Drawable);\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.ModelLoader = undefined;\n\t\n\tvar _StateBlock = __webpack_require__(18);\n\t\n\tvar _FileLoader = __webpack_require__(19);\n\t\n\tvar _Geometry = __webpack_require__(20);\n\t\n\tvar _Material = __webpack_require__(23);\n\t\n\tvar _Mesh = __webpack_require__(26);\n\t\n\tvar _ProgramLibrary = __webpack_require__(33);\n\t\n\tvar _Texture = __webpack_require__(34);\n\t\n\tvar _Types = __webpack_require__(25);\n\t\n\tvar _VertexFormat = __webpack_require__(22);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * A class to load 3D models\n\t *\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar ModelLoader = exports.ModelLoader = function () {\n\t    function ModelLoader() {\n\t        _classCallCheck(this, ModelLoader);\n\t    }\n\t\n\t    _createClass(ModelLoader, null, [{\n\t        key: 'loadFromFile',\n\t\n\t        /**\n\t         * Load a 3D model from a JSON file\n\t         *\n\t         * @see https://github.com/acgessler/assimp2json\n\t         * @param {string} filePath Path to the file with the 3D model\n\t         * @param {Model} model Model to fill with data\n\t         */\n\t        value: function loadFromFile(filePath, model) {\n\t            _FileLoader.FileLoader.load(filePath, function (status, data, userData) {\n\t                // Compute path to the parent folder\n\t                var folder = userData.filePath.replace(/[^\\/]*$/, '');\n\t\n\t                // Parse file.\n\t                ModelLoader.parseJSON(data, userData.model, folder);\n\t            }, { model: model, filePath: filePath });\n\t        }\n\t\n\t        /**\n\t         * Parse given data and fill model with it\n\t         *\n\t         * @param {string} data JSON data\n\t         * @param {Model} model Model to fill with data\n\t         * @param {string?} relativePath Relative path to the externals assets\n\t         * @see https://github.com/acgessler/assimp2json\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: 'parseJSON',\n\t        value: function parseJSON(data, model) {\n\t            var relativePath = arguments.length <= 2 || arguments[2] === undefined ? '' : arguments[2];\n\t\n\t            // Get JSON data\n\t            var obj = /** @type {{materials:Array<{properties: Array<{index: number, key:string, semantic: number, type:number, value: (Array|number)}>}>, meshes: Array<{vertices: Array, normals: Array, faces: Array, texturecoords: Array, numuvcomponents: Array, materialindex: number}>}} */JSON.parse(data);\n\t\n\t            // Materials.\n\t            var materials = [];\n\t            var i = undefined,\n\t                j = undefined,\n\t                k = undefined,\n\t                l = undefined;\n\t\n\t            for (i = 0; i < obj.materials.length; i++) {\n\t                var material = new _Material.Material();\n\t                var pass = material.createPass();\n\t\n\t                // Default data\n\t                pass.drawingMode = _StateBlock.DrawingMode.Triangles;\n\t\n\t                var properties = obj.materials[i].properties;\n\t                for (j = 0; j < properties.length; j++) {\n\t                    var property = properties[j];\n\t\n\t                    // Colors.\n\t                    if (property.type == 1) {\n\t                        if (property.key == '$mat.twosided' && property.value == 1) pass.faceCulling = FaceCulling.None;else if (property.key == '$mat.shininess') pass.add('material.shininess', _Types.Type.Float, /** @type {number} */property.value);else if (property.key == '$clr.ambient') pass.add('material.ambient', _Types.Type.Float, [property.value[0], property.value[1], property.value[2]]);else if (property.key == '$clr.diffuse') pass.add('material.diffuse', _Types.Type.Float, [property.value[0], property.value[1], property.value[2]]);else if (property.key == '$clr.specular') pass.add('material.specular', _Types.Type.Float, [property.value[0], property.value[1], property.value[2]]);else if (property.key == '$clr.emissive') pass.add('material.emissive', _Types.Type.Float, [property.value[0], property.value[1], property.value[2]]);\n\t                    }\n\t                    // Textures.\n\t                    else if (property.type == 3 && property.key != '?mat.name') {\n\t                            var texture = new _Texture.Texture();\n\t                            texture.loadFromFile(relativePath + property.value);\n\t\n\t                            var name = 'material.diffuseTexture';\n\t                            switch (property.semantic) {\n\t                                default:\n\t                                case 1:\n\t                                    name = 'material.diffuseTexture';\n\t                                    break;\n\t                                case 2:\n\t                                    name = 'material.specularTexture';\n\t                                    break;\n\t                                case 3:\n\t                                    name = 'material.ambientTexture';\n\t                                    break;\n\t                                case 4:\n\t                                    name = 'material.emissiveTexture';\n\t                                    break;\n\t                                case 5:\n\t                                    name = 'material.heightTexture';\n\t                                    break;\n\t                                case 6:\n\t                                    name = 'material.normalsTexture';\n\t                                    break;\n\t                                case 7:\n\t                                    name = 'material.shininessTexture';\n\t                                    break;\n\t                                case 8:\n\t                                    name = 'material.opacityTexture';\n\t                                    break;\n\t                                case 9:\n\t                                    name = 'material.displacementTexture';\n\t                                    break;\n\t                            }\n\t\n\t                            pass.add(name, _Types.Type.Texture2D, texture);\n\t                        }\n\t                }\n\t\n\t                materials.push(material);\n\t            }\n\t\n\t            // Geometries\n\t            for (i = 0; i < obj.meshes.length; i++) {\n\t                // Create a new mesh\n\t                var mesh = new _Mesh.Mesh();\n\t                model.meshes.push(mesh);\n\t\n\t                // Add data\n\t                var meshData = obj.meshes[i];\n\t\n\t                // Geometry\n\t                {\n\t                    var geometry = new _Geometry.Geometry();\n\t\n\t                    // Format\n\t                    var format = new _VertexFormat.VertexFormat();\n\t                    geometry.setVertexFormat(format);\n\t\n\t                    // Positions\n\t                    var positions = new Float32Array(meshData.vertices);\n\t                    format.add(new _VertexFormat.VertexElement(_VertexFormat.VertexElement.Usage.Position, 0, _VertexFormat.VertexElement.Type.Float, 3, false));\n\t                    geometry.setPositions(positions);\n\t\n\t                    // Normals\n\t                    var normals = new Float32Array(meshData.normals);\n\t                    format.add(new _VertexFormat.VertexElement(_VertexFormat.VertexElement.Usage.Normal, 1, _VertexFormat.VertexElement.Type.Float, 3, false));\n\t                    geometry.setNormals(normals);\n\t\n\t                    // UVs\n\t                    if (meshData.texturecoords) {\n\t                        var uvs = new Float32Array(meshData.texturecoords[0]);\n\t                        format.add(new _VertexFormat.VertexElement(_VertexFormat.VertexElement.Usage.UVS, 2, _VertexFormat.VertexElement.Type.Float, meshData.numuvcomponents[0], false));\n\t                        geometry.setTextureUVs(uvs);\n\t                    }\n\t\n\t                    // Indices\n\t                    var indices = new Uint16Array(meshData.faces.length * 3);\n\t                    for (k = 0, l = 0; k < meshData.faces.length; k++, l += 3) {\n\t                        indices[l + 0] = meshData.faces[k][0];\n\t                        indices[l + 1] = meshData.faces[k][1];\n\t                        indices[l + 2] = meshData.faces[k][2];\n\t                    }\n\t                    geometry.setIndices(indices);\n\t\n\t                    mesh.setGeometry(geometry);\n\t                }\n\t\n\t                // Material.\n\t                if (meshData.materialindex !== undefined && materials[meshData.materialindex]) mesh.setMaterial(materials[meshData.materialindex]);else {\n\t                    var material = new _Material.Material();\n\t                    var pass = material.createPass();\n\t                    pass.drawingMode = _StateBlock.DrawingMode.Triangles;\n\t                    pass.add('material.ambient', _Types.Type.Float, [0.0, 0.0, 0.0]);\n\t                    pass.add('material.diffuse', _Types.Type.Float, [0.55, 0.55, 0.55]);\n\t                    pass.add('material.specular', _Types.Type.Float, [0.7, 0.7, 0.7]);\n\t                    pass.add('material.shininess', _Types.Type.Float, 38.4);\n\t                    mesh.setMaterial(material);\n\t                }\n\t\n\t                // Program\n\t                mesh.setProgram(_ProgramLibrary.ProgramLibrary.get('PhongShader'));\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return ModelLoader;\n\t}();\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.ProgramLibrary = undefined;\n\t\n\tvar _FileLoader = __webpack_require__(19);\n\t\n\tvar _Program = __webpack_require__(29);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * A class to manage programs/shaders\n\t *\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar ProgramLibrary = exports.ProgramLibrary = function () {\n\t    function ProgramLibrary() {\n\t        _classCallCheck(this, ProgramLibrary);\n\t    }\n\t\n\t    _createClass(ProgramLibrary, null, [{\n\t        key: 'get',\n\t\n\t        /**\n\t         * Get the program with the given name\n\t         *\n\t         * @param {string} name Program's name\n\t         * @return {Program} A Program instance, otherwise null is the program doesn't exist\n\t         */\n\t        value: function get(name) {\n\t            var program = ProgramLibrary.programs[name];\n\t            if (!program) {\n\t                program = new _Program.Program();\n\t                ProgramLibrary.programs[name] = program;\n\t            }\n\t\n\t            return program;\n\t        }\n\t\n\t        /**\n\t         * Load a new program\n\t         *\n\t         * @param {string} name Program's name\n\t         * @param {string} vertexShaderFile Path to the vertex shader file\n\t         * @param {string} fragmentShaderFile Path to the fragment shader file\n\t         * @param {Array.<string>=} defines An array with defines data\n\t         * @return {?Program} A Program instance\n\t         */\n\t\n\t    }, {\n\t        key: 'load',\n\t        value: function load(name, vertexShaderFile, fragmentShaderFile, defines) {\n\t            // Get/Create program\n\t            var program = ProgramLibrary.get(name);\n\t\n\t            // Chunck variables\n\t            var chunkPatterns = /include\\[([^\\]]*)\\]/g;\n\t\n\t            // Prepare cache\n\t            ProgramLibrary.cache[name] = { data: null, ready: false, sources: [] };\n\t\n\t            /**\n\t            * Callback for chunks\n\t            *\n\t            * @param {boolean} status Load status\n\t            * @param {string} chunkData Chunk data\n\t            * @param {Object=} userData Additional data\n\t            */\n\t            var chunkCallback = function chunkCallback(status, chunkData, userData) {\n\t                // Put chunk data in cache\n\t                ProgramLibrary.chunks[userData].data = chunkData;\n\t                ProgramLibrary.chunks[userData].ready = true;\n\t\n\t                // Try to update\n\t                ProgramLibrary.tryUpdateWaitingPrograms();\n\t            };\n\t\n\t            // Callback processing chunk\n\t            var callback = function callback(type, programName, data) {\n\t                var program = ProgramLibrary.programs[name];\n\t                var sources = program.getSources();\n\t                var chunks = data.match(chunkPatterns);\n\t\n\t                // Analyse if the file ask external chunks\n\t                if (chunks) {\n\t                    var missingChunkCount = chunks.length;\n\t\n\t                    for (var i = 0; i < chunks.length; i++) {\n\t                        var chunk = chunks[i];\n\t                        var chunkPath = chunk.substring(chunk.lastIndexOf('[') + 1, chunk.lastIndexOf(']'));\n\t\n\t                        if (ProgramLibrary.chunks[chunkPath] && ProgramLibrary.chunks[chunkPath].ready) missingChunkCount--;else if (!ProgramLibrary.chunks[chunkPath]) {\n\t                            ProgramLibrary.chunks[chunkPath] = { data: '', ready: false };\n\t                            _FileLoader.FileLoader.load(ProgramLibrary.folderPath + chunkPath + '?' + new Date().getTime(), chunkCallback, chunkPath);\n\t                        }\n\t                    }\n\t\n\t                    // Everything is in memory? We can fill the program directly\n\t                    var result = ProgramLibrary.replaceChunks(data);\n\t                    if (missingChunkCount === 0) ProgramLibrary.fillProgram(sources, program, name, type, result || '');\n\t                } else ProgramLibrary.fillProgram(sources, program, name, type, data);\n\t            };\n\t\n\t            // Load vertex file\n\t            _FileLoader.FileLoader.load(ProgramLibrary.folderPath + vertexShaderFile + '?' + new Date().getTime(), function (status, data) {\n\t                data = ProgramLibrary.addDefines(data, defines || []);\n\t                ProgramLibrary.cache[name].sources[0] = data;\n\t                callback(ProgramLibrary.Target.Vertex, name, data);\n\t            });\n\t\n\t            // Load fragment file\n\t            _FileLoader.FileLoader.load(ProgramLibrary.folderPath + fragmentShaderFile + '?' + new Date().getTime(), function (status, data) {\n\t                data = ProgramLibrary.addDefines(data, defines || []);\n\t\n\t                ProgramLibrary.cache[name].sources[1] = data;\n\t                callback(ProgramLibrary.Target.Fragment, name, data);\n\t            });\n\t\n\t            return program;\n\t        }\n\t\n\t        /**\n\t         * Shortcut to fill program with sources and clear the cache.\n\t         * @private\n\t         * @param {Array.<string>} sources Vertex and fragment sources.\n\t         * @param {Program} program A Program instance.\n\t         * @param {string} name Program's name.\n\t         * @param {ProgramLibrary.Target} type Type of data.\n\t         * @param {string} data Data to add to the program.\n\t         */\n\t\n\t    }, {\n\t        key: 'fillProgram',\n\t        value: function fillProgram(sources, program, name, type, data) {\n\t            if (type == ProgramLibrary.Target.Vertex) program.loadFromData(data, sources[1]);else program.loadFromData(sources[0], data);\n\t\n\t            if (program.isReady()) delete ProgramLibrary.cache[name];\n\t        }\n\t    }, {\n\t        key: 'tryUpdateWaitingPrograms',\n\t\n\t        /**\n\t         * Update waiting programs\n\t         *\n\t         * @private\n\t         */\n\t        value: function tryUpdateWaitingPrograms() {\n\t            for (var i in ProgramLibrary.programs) {\n\t                if (!ProgramLibrary.programs[i].isReady()) {\n\t                    var sources = ProgramLibrary.programs[i].getSources();\n\t                    for (var j = 0; j < 2; j++) {\n\t                        if (!sources[j]) {\n\t                            var source = ProgramLibrary.replaceChunks(ProgramLibrary.cache[i].sources[j]);\n\t                            if (source) ProgramLibrary.fillProgram(sources, ProgramLibrary.programs[i], i, j === 0 ? ProgramLibrary.Target.Vertex : ProgramLibrary.Target.Fragment, source);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Fill programs with chunks data\n\t         *\n\t         * @private\n\t         * @param {string} data Data to process\n\t         * @return {?string} A string if everything is ok, otherwise null\n\t         */\n\t\n\t    }, {\n\t        key: 'replaceChunks',\n\t        value: function replaceChunks(data) {\n\t            var chunkPattern = /include\\[([^\\]]*)\\]/;\n\t            var result = data;\n\t\n\t            while (chunkPattern.test(result)) {\n\t                var chunk = result.match(chunkPattern);\n\t                var chunkName = chunk[0].substring(chunk[0].lastIndexOf('[') + 1, chunk[0].lastIndexOf(']'));\n\t\n\t                // We need to wait all chunks to continue.\n\t                if (!ProgramLibrary.chunks[chunkName] || !ProgramLibrary.chunks[chunkName].ready) return null;\n\t\n\t                result = result.replace(chunk[0], ProgramLibrary.chunks[chunkName].data || '');\n\t            }\n\t\n\t            return result;\n\t        }\n\t\n\t        /**\n\t         * Add defines to the program\n\t         *\n\t         * @private\n\t         * @param {string} source Source data\n\t         * @param {Array.<string>} defines An array with defines to add to the source parameter\n\t         * @return {string} The new string\n\t         */\n\t\n\t    }, {\n\t        key: 'addDefines',\n\t        value: function addDefines(source, defines) {\n\t            if (!defines) return source;\n\t\n\t            var defineString = '';\n\t            for (var i = 0; i < defines.length; i++) {\n\t                defineString += '#define ' + defines[i] + '\\n';\n\t            }return defineString + source;\n\t        }\n\t    }]);\n\t\n\t    return ProgramLibrary;\n\t}();\n\t\n\t/**\n\t * Put data in cache due to asynchrone loading\n\t *\n\t * @type {Array.<{data: null, ready: boolean, sources: Array<string>}>}\n\t */\n\t\n\tProgramLibrary.cache = [];\n\t\n\t/**\n\t * Chunks in cache\n\t *\n\t * @type {Array.<{data: string, ready: boolean}>}\n\t */\n\tProgramLibrary.chunks = [];\n\t\n\t/**\n\t * Path to the folder with shaders\n\t *\n\t * @type {string}\n\t */\n\tProgramLibrary.folderPath = '../shaders/';\n\t\n\t/**\n\t * Shaders\n\t *\n\t * @type {Array.<Program>}\n\t */\n\tProgramLibrary.programs = [];\n\t\n\t/**\n\t * Target\n\t *\n\t * @enum {number}\n\t */\n\tProgramLibrary.Target = { Vertex: 0, Fragment: 1 };\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Texture = undefined;\n\t\n\tvar _TextureInterface2 = __webpack_require__(35);\n\t\n\tvar _Image = __webpack_require__(36);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * A texture\n\t *\n\t * @extends {TextureInterface}\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar Texture = exports.Texture = function (_TextureInterface) {\n\t  _inherits(Texture, _TextureInterface);\n\t\n\t  /**\n\t   * Constructor\n\t   *\n\t   * @param {string} path Path to the texture file\n\t   */\n\t\n\t  function Texture() {\n\t    var path = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n\t\n\t    _classCallCheck(this, Texture);\n\t\n\t    /**\n\t     * Image instance\n\t     *\n\t     * @type {Image}\n\t     * @private\n\t     */\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Texture).call(this));\n\t\n\t    _this.image = null;\n\t\n\t    /**\n\t     * Repeat the texture\n\t     *\n\t     * @type {boolean}\n\t     * @private\n\t     */\n\t    _this.repeat = true;\n\t\n\t    /**\n\t     * Smooth the texture\n\t     *\n\t     * @type {boolean}\n\t     * @private\n\t     */\n\t    _this.smooth = true;\n\t\n\t    if (path.length) _this.loadFromFile(path);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Load texture from a file\n\t   *\n\t   * @param {string} path Path to the texture file\n\t   */\n\t\n\t  _createClass(Texture, [{\n\t    key: 'loadFromFile',\n\t    value: function loadFromFile(path) {\n\t      this.image = new _Image.Img();\n\t      this.image.loadFromFile(path);\n\t    }\n\t\n\t    /**\n\t     * Load texture from an Image\n\t     *\n\t     * @param {Image} image An Image instance\n\t     */\n\t\n\t  }, {\n\t    key: 'loadFromImage',\n\t    value: function loadFromImage(image) {\n\t      this.image = image;\n\t    }\n\t\n\t    /**\n\t     * Repeat the texture\n\t     *\n\t     * @param {boolean} value True to repeat, otherwise false\n\t     */\n\t\n\t  }, {\n\t    key: 'setRepeated',\n\t    value: function setRepeated(value) {\n\t      this.repeat = value;\n\t    }\n\t\n\t    /**\n\t     * Smooth the texture\n\t     *\n\t     * @param {boolean} value True to smooth, otherwise false\n\t     */\n\t\n\t  }, {\n\t    key: 'setSmooth',\n\t    value: function setSmooth(value) {\n\t      this.smooth = value;\n\t    }\n\t\n\t    /**\n\t     * Get image instance\n\t     *\n\t     * @return {?Image} An Image instance\n\t     */\n\t\n\t  }, {\n\t    key: 'getImage',\n\t    value: function getImage() {\n\t      return this.image;\n\t    }\n\t\n\t    /**\n\t     * Indicate if texture is ready\n\t     *\n\t     * @return {boolean} True if the texture is ready to be use\n\t     */\n\t\n\t  }, {\n\t    key: 'isReady',\n\t    value: function isReady() {\n\t      if (!this.image) return false;\n\t\n\t      var textureSize = this.image.getSize();\n\t      if (textureSize[0] === 0 || textureSize[1] === 0) return false;\n\t\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Indicate if the texture is repeated\n\t     *\n\t     * @return {boolean} True if the texture is repeated\n\t     * @override\n\t     */\n\t\n\t  }, {\n\t    key: 'isRepeated',\n\t    value: function isRepeated() {\n\t      return this.repeat;\n\t    }\n\t\n\t    /**\n\t     * Indicate if the texture is smoothed\n\t     *\n\t     * @return {boolean} True if the texture is smoothed\n\t     * @override\n\t     */\n\t\n\t  }, {\n\t    key: 'isSmoothed',\n\t    value: function isSmoothed() {\n\t      return this.smooth;\n\t    }\n\t  }]);\n\t\n\t  return Texture;\n\t}(_TextureInterface2.TextureInterface);\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TextureInterface = undefined;\n\t\n\tvar _ContextResource2 = __webpack_require__(21);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * A texture\n\t *\n\t * @extends {ContextResource}\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar TextureInterface = exports.TextureInterface = function (_ContextResource) {\n\t  _inherits(TextureInterface, _ContextResource);\n\t\n\t  /**\n\t   * Constructor\n\t   */\n\t\n\t  function TextureInterface() {\n\t    _classCallCheck(this, TextureInterface);\n\t\n\t    /**\n\t     * State\n\t     *\n\t     * @type {boolean}\n\t     * @protected\n\t     */\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(TextureInterface).call(this));\n\t\n\t    _this.ready = false;\n\t\n\t    /**\n\t     * Mipmap state\n\t     *\n\t     * @type {boolean}\n\t     * @protected\n\t     */\n\t    _this.mipmap = true;\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Indicate if texture is ready\n\t   *\n\t   * @return {boolean} True if the texture is ready to be use\n\t   */\n\t\n\t  _createClass(TextureInterface, [{\n\t    key: 'isReady',\n\t    value: function isReady() {\n\t      return this.ready;\n\t    }\n\t\n\t    /**\n\t     * Indicate if the texture use mip-mapping\n\t     *\n\t     * @return {boolean} True if the texture is mip-mapped\n\t     */\n\t\n\t  }, {\n\t    key: 'isMipmaped',\n\t    value: function isMipmaped() {\n\t      return this.mipmap;\n\t    }\n\t\n\t    /**\n\t     * Indicate if the texture is repeated\n\t     *\n\t     * @return {boolean} True if the texture is repeated\n\t     */\n\t\n\t  }, {\n\t    key: 'isRepeated',\n\t    value: function isRepeated() {\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Indicate if the texture is smoothed\n\t     *\n\t     * @return {boolean} True if the texture is smoothed\n\t     */\n\t\n\t  }, {\n\t    key: 'isSmoothed',\n\t    value: function isSmoothed() {\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Indicate if the texture must use mip-mapping\n\t     *\n\t     * @param {boolean} value True to use mip-mapping\n\t     */\n\t\n\t  }, {\n\t    key: 'useMipmap',\n\t    value: function useMipmap(value) {\n\t      this.mipmap = value;\n\t    }\n\t  }]);\n\t\n\t  return TextureInterface;\n\t}(_ContextResource2.ContextResource);\n\n/***/ },\n/* 36 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * An image\n\t * Use a weird name due to the lack of namespace in Javascript :(\n\t *\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar Img = exports.Img = function () {\n\t  /**\n\t   * Constructor\n\t   */\n\t\n\t  function Img() {\n\t    _classCallCheck(this, Img);\n\t\n\t    /**\n\t     * Native instance\n\t     *\n\t     * @type {Image}\n\t     * @private\n\t     */\n\t    this.data = new Image();\n\t\n\t    /**\n\t     * Height\n\t     *\n\t     * @type {number}\n\t     * @private\n\t     */\n\t    this.height = 0;\n\t\n\t    /**\n\t     * Pixels\n\t     *\n\t     * @type {Uint8Array}\n\t     * @private\n\t     */\n\t    this.pixels = null;\n\t\n\t    /**\n\t     * Status\n\t     *\n\t     * @type {Img.Status}\n\t     * @private\n\t     */\n\t    this.status = Img.Status.Unload;\n\t\n\t    /**\n\t     * Width\n\t     *\n\t     * @type {number}\n\t     * @private\n\t     */\n\t    this.width = 0;\n\t  }\n\t\n\t  /**\n\t   * Load image from a file\n\t   *\n\t   * @param {string} path Path to the image file\n\t   */\n\t\n\t  _createClass(Img, [{\n\t    key: \"loadFromFile\",\n\t    value: function loadFromFile(path) {\n\t      var _this = this;\n\t\n\t      this.data.onload = function () {\n\t        _this.status = Img.Status.Loaded;\n\t        _this.width = _this.data.width;\n\t        _this.height = _this.data.height;\n\t        _this.pixels = null;\n\t      };\n\t\n\t      this.data.src = path;\n\t    }\n\t\n\t    /**\n\t     * Create a new image\n\t     *\n\t     * @param {number} width Image's width\n\t     * @param {number} height Image's height\n\t     * @param {Uint8Array?} data An array with pixels (r, g, b, a)\n\t     */\n\t\n\t  }, {\n\t    key: \"create\",\n\t    value: function create(width, height) {\n\t      var data = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\t\n\t      this.pixels = data ? data : new Uint8Array(width * height * 4);\n\t      this.data = null;\n\t      this.width = width;\n\t      this.height = height;\n\t      this.status = Img.Status.Loaded;\n\t    }\n\t\n\t    /**\n\t     * Get image's dimensions\n\t     *\n\t     * @return {Array.<number>} Image's width and height in pixel\n\t     */\n\t\n\t  }, {\n\t    key: \"getSize\",\n\t    value: function getSize() {\n\t      return [this.width, this.height];\n\t    }\n\t\n\t    /**\n\t     * Get Image's data\n\t     *\n\t     * @return {Image|Uint8Array} A native Image object or an array depending method use to load the image\n\t     */\n\t\n\t  }, {\n\t    key: \"getData\",\n\t    value: function getData() {\n\t      return this.data || this.pixels;\n\t    }\n\t\n\t    /**\n\t     * Indicate if the image is ready to be use\n\t     *\n\t     * @return {boolean} True if image is ready, otherwise false\n\t     */\n\t\n\t  }, {\n\t    key: \"isReady\",\n\t    value: function isReady() {\n\t      return this.status == Img.Status.Loaded;\n\t    }\n\t  }]);\n\t\n\t  return Img;\n\t}();\n\t\n\t/**\n\t * Status\n\t *\n\t * @enum {number}\n\t */\n\t\n\tImg.Status = { Unload: 0, Loading: 1, Loaded: 2 };\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.PointLight = undefined;\n\t\n\tvar _Light2 = __webpack_require__(15);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * A point light\n\t *\n\t * @extends {Light}\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar PointLight = exports.PointLight = function (_Light) {\n\t  _inherits(PointLight, _Light);\n\t\n\t  /**\n\t   * Constructor\n\t   */\n\t\n\t  function PointLight() {\n\t    _classCallCheck(this, PointLight);\n\t\n\t    /**\n\t     * Constant value\n\t     *\n\t     * @type {number}\n\t     * @private\n\t     */\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(PointLight).call(this));\n\t\n\t    _this.constant = 1.0;\n\t\n\t    /**\n\t     * Lieanr value\n\t     *\n\t     * @type {number}\n\t     * @private\n\t     */\n\t    _this.linear = 0.09;\n\t\n\t    /**\n\t     * Quadratic value\n\t     *\n\t     * @type {number}\n\t     * @private\n\t     */\n\t    _this.quadratic = 0.032;\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Set point light's values\n\t   *\n\t   * @param {number} constant The constant value\n\t   * @param {number} linear The linear value\n\t   * @param {number} quadratic The quadratic value\n\t   */\n\t\n\t  _createClass(PointLight, [{\n\t    key: 'setValues',\n\t    value: function setValues(constant, linear, quadratic) {\n\t      this.constant = constant;\n\t      this.linear = linear;\n\t      this.quadratic = quadratic;\n\t    }\n\t\n\t    /**\n\t     * Get values\n\t     *\n\t     * @return {Array.<number>} An array with constant, linear and quadratic values\n\t     */\n\t\n\t  }, {\n\t    key: 'getValues',\n\t    value: function getValues() {\n\t      return [this.constant, this.linear, this.quadratic];\n\t    }\n\t  }]);\n\t\n\t  return PointLight;\n\t}(_Light2.Light);\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.PostEffect = undefined;\n\t\n\tvar _Color = __webpack_require__(13);\n\t\n\tvar _RenderTexture = __webpack_require__(39);\n\t\n\tvar _Sprite = __webpack_require__(50);\n\t\n\tvar _SpriteCommand = __webpack_require__(51);\n\t\n\tvar _RenderWebGL = __webpack_require__(43);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * A class to create post-effects\n\t *\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar PostEffect = exports.PostEffect = function () {\n\t    /**\n\t     * Constructor\n\t     *\n\t     * @param {Program} program A Program instance.\n\t     */\n\t\n\t    function PostEffect(program) {\n\t        _classCallCheck(this, PostEffect);\n\t\n\t        /**\n\t        * The render API to use\n\t        *\n\t        * @type {RenderAPI}\n\t        * @protected\n\t        */\n\t        this.renderApi = _RenderWebGL.WebGL.getInstance();\n\t\n\t        /**\n\t        * Textures where we will apply effects\n\t        *\n\t        * @type {RenderTexture}\n\t        * @private\n\t        */\n\t        this.renderTexture = null;\n\t\n\t        /**\n\t        * Full screen sprite with the resulting effects\n\t        *\n\t        * @type {Sprite}\n\t        * @private\n\t        */\n\t        this.sprite = new _Sprite.Sprite();\n\t        this.sprite.setCustomProgram(program);\n\t    }\n\t\n\t    /**\n\t     * Init the post effect composer\n\t     *\n\t     * @param {number} width Resulting effect width\n\t     * @param {number} height Resulting effect height\n\t     * @param {boolean=} useDepthBuffer True to use depth buffer (useful in 3D)\n\t     * @param {boolean=} userStencilBuffer True to use stencil buffer\n\t     */\n\t\n\t    _createClass(PostEffect, [{\n\t        key: 'init',\n\t        value: function init(width, height) {\n\t            var useDepthBuffer = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];\n\t            var userStencilBuffer = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];\n\t\n\t            // Init texture\n\t            this.renderTexture = new _RenderTexture.RenderTexture(width, height, 1, useDepthBuffer, userStencilBuffer);\n\t\n\t            // Link resulting texture to the sprite\n\t            this.sprite.setSize(1, 1);\n\t            this.sprite.setTexture(this.renderTexture.getTextures()[0]);\n\t            this.sprite.setTextureRect(0, 0, width, height);\n\t        }\n\t\n\t        /**\n\t         * Begin\n\t         *\n\t         * @param {Color=} color A Color instance\n\t         */\n\t\n\t    }, {\n\t        key: 'begin',\n\t        value: function begin() {\n\t            var color = arguments.length <= 0 || arguments[0] === undefined ? new _Color.Color(30, 30, 30) : arguments[0];\n\t\n\t            if (!this.renderTexture) return;\n\t\n\t            this.renderTexture.clear(color);\n\t        }\n\t\n\t        /**\n\t         * End\n\t         */\n\t\n\t    }, {\n\t        key: 'end',\n\t        value: function end() {\n\t            if (!this.renderTexture) return;\n\t\n\t            // Display result\n\t            this.renderTexture.display();\n\t\n\t            // Draw the full screen quad\n\t            _SpriteCommand.SpriteCommand.draw(this.renderApi, this.sprite);\n\t        }\n\t    }, {\n\t        key: 'render',\n\t\n\t        /**\n\t         * Render the given scene\n\t         *\n\t         * @param {Scene} scene A Scene instance\n\t         * @param {Camera} camera A Camera instance\n\t         */\n\t        value: function render(scene, camera) {\n\t            this.renderTexture.render(scene, camera);\n\t        }\n\t\n\t        /**\n\t         * Set program to use\n\t         *\n\t         * @param {Program} program A Program instance\n\t         */\n\t\n\t    }, {\n\t        key: 'setProgram',\n\t        value: function setProgram(program) {\n\t            this.sprite.setCustomProgram(program);\n\t        }\n\t\n\t        /**\n\t         * Set value of an element from the program\n\t         *\n\t         * @param {string} name Element's name in the shader\n\t         * @param {Type} type Type of value to send\n\t         * @param {Array.<number>|number|boolean|Texture|Float32Array} value A value\n\t         */\n\t\n\t    }, {\n\t        key: 'setEffectValue',\n\t        value: function setEffectValue(name, type, value, groupCount) {\n\t            this.renderApi.setUniform(this.sprite.getCustomProgram(), name, type, value, groupCount);\n\t        }\n\t    }]);\n\t\n\t    return PostEffect;\n\t}();\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.RenderTexture = undefined;\n\t\n\tvar _Image = __webpack_require__(36);\n\t\n\tvar _RenderTarget2 = __webpack_require__(40);\n\t\n\tvar _Texture = __webpack_require__(34);\n\t\n\tvar _RenderWebGL = __webpack_require__(43);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * A rendering texture: Supported by WebGL only.\n\t *\n\t * @extends {RenderTarget}\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar RenderTexture = exports.RenderTexture = function (_RenderTarget) {\n\t    _inherits(RenderTexture, _RenderTarget);\n\t\n\t    /**\n\t     * Constructor\n\t     *\n\t     * @param {number} width Texture's width\n\t     * @param {number} height Texture's height\n\t     * @param {number} textureCount Texture count\n\t     * @param {boolean=} useDepthBuffer True to use a depth buffer\n\t     * @param {boolean=} useStencilBuffer True to use a stencil buffer\n\t     */\n\t\n\t    function RenderTexture(width, height, textureCount) {\n\t        var useDepthBuffer = arguments.length <= 3 || arguments[3] === undefined ? true : arguments[3];\n\t        var useStencilBuffer = arguments.length <= 4 || arguments[4] === undefined ? false : arguments[4];\n\t\n\t        _classCallCheck(this, RenderTexture);\n\t\n\t        /**\n\t        * The render API to use\n\t        *\n\t        * @type {RenderAPI}\n\t        * @protected\n\t        */\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(RenderTexture).call(this));\n\t\n\t        _this.renderApi = _RenderWebGL.WebGL.getInstance();\n\t\n\t        /**\n\t        * Frame buffer identifier\n\t        *\n\t        * @type {number}\n\t        * @private\n\t        */\n\t        _this.framebuffer = _this.renderApi.createFrameBuffer();\n\t\n\t        /**\n\t        * An array with the textures to draw in\n\t        *\n\t        * @type {Array.<Texture>}\n\t        * @private\n\t        */\n\t        _this.textures = [];\n\t\n\t        // Init the render texture\n\t        _this.init(width, height, textureCount, useDepthBuffer, useStencilBuffer);\n\t        return _this;\n\t    }\n\t\n\t    /**\n\t     * Init\n\t     *\n\t     * @param {number} width Texture's width\n\t     * @param {number} height Texture's height\n\t     * @param {number} textureCount Texture count\n\t     * @param {boolean=} useDepthBuffer True to use a depth buffer\n\t     * @param {boolean=} useStencilBuffer True to use a depth buffer\n\t     * @private\n\t     */\n\t\n\t    _createClass(RenderTexture, [{\n\t        key: 'init',\n\t        value: function init(width, height, textureCount) {\n\t            var useDepthBuffer = arguments.length <= 3 || arguments[3] === undefined ? true : arguments[3];\n\t            var useStencilBuffer = arguments.length <= 4 || arguments[4] === undefined ? false : arguments[4];\n\t\n\t            // Create textures.\n\t            for (var i = 0; i < textureCount; i++) {\n\t                var image = new _Image.Img();\n\t                image.create(width, height, null);\n\t\n\t                var texture = new _Texture.Texture();\n\t                texture.setRepeated(false);\n\t                texture.setSmooth(true);\n\t                texture.useMipmap(false);\n\t                texture.loadFromImage(image);\n\t                this.textures.push(texture);\n\t            }\n\t\n\t            // Attach the texture to the frame buffer\n\t            this.renderApi.initFrameBuffer(this.framebuffer, this.textures, useDepthBuffer, useStencilBuffer);\n\t        }\n\t\n\t        /**\n\t         * Clear the texture\n\t         *\n\t         * @param {Color} color A Color instance\n\t         */\n\t\n\t    }, {\n\t        key: 'clear',\n\t        value: function clear(color) {\n\t            // Remove previous tasks.\n\t            this.removeTasks();\n\t\n\t            // Bind frame buffer.\n\t            this.begin();\n\t\n\t            // Clear screen.\n\t            this.renderApi.clear(color);\n\t        }\n\t\n\t        /**\n\t         * Begin rendering to texture\n\t         */\n\t\n\t    }, {\n\t        key: 'begin',\n\t        value: function begin() {\n\t            this.renderApi.bindFrameBuffer(this.framebuffer);\n\t        }\n\t\n\t        /**\n\t         * Display\n\t         */\n\t\n\t    }, {\n\t        key: 'display',\n\t        value: function display() {\n\t            _get(Object.getPrototypeOf(RenderTexture.prototype), 'display', this).call(this);\n\t\n\t            // Go back to the default buffer\n\t            this.renderApi.bindFrameBuffer(-1);\n\t        }\n\t\n\t        /**\n\t         * Output Textures\n\t         *\n\t         * @return {Array.<Texture>} An array of Texture\n\t         */\n\t\n\t    }, {\n\t        key: 'getTextures',\n\t        value: function getTextures() {\n\t            return this.textures;\n\t        }\n\t    }]);\n\t\n\t    return RenderTexture;\n\t}(_RenderTarget2.RenderTarget);\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.RenderTarget = undefined;\n\t\n\tvar _Context = __webpack_require__(41);\n\t\n\tvar _RenderTask = __webpack_require__(42);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * A rendering target\n\t *\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar RenderTarget = exports.RenderTarget = function () {\n\t    /**\n\t     * Constructor\n\t     */\n\t\n\t    function RenderTarget() {\n\t        _classCallCheck(this, RenderTarget);\n\t\n\t        /**\n\t        * A reference to the active task\n\t        *\n\t        * @type {null|RenderTask} \n\t        * @protected\n\t        */\n\t        this.activeTask = null;\n\t\n\t        /**\n\t        * Context instance\n\t        *\n\t        * @type {Context} \n\t        * @protected\n\t        */\n\t        this.context = new _Context.Context();\n\t\n\t        /**\n\t        * Tasks to execute\n\t        *\n\t        * @type {Array.<RenderTask>} \n\t        * @protected\n\t        */\n\t        this.tasks = [];\n\t\n\t        /**\n\t        * The render API to use\n\t        *\n\t        * @type {RenderAPI}\n\t        * @protected\n\t        */\n\t        this.renderApi = null;\n\t    }\n\t\n\t    /**\n\t     * Clear the rendering target\n\t     *\n\t     * @param {Color} color A Color instance\n\t     */\n\t\n\t    _createClass(RenderTarget, [{\n\t        key: 'clear',\n\t        value: function clear(color) {}\n\t    }, {\n\t        key: 'display',\n\t\n\t        /**\n\t         * Display\n\t         */\n\t        value: function display() {\n\t            for (var i = 0; i < this.tasks.length; i++) {\n\t                this.tasks[i].execute(this.renderApi);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Create a new task\n\t         *\n\t         * @return {number} RenderTask's index\n\t         */\n\t\n\t    }, {\n\t        key: 'createTask',\n\t        value: function createTask() {\n\t            this.tasks.push(new _RenderTask.RenderTask());\n\t            return this.tasks.length - 1;\n\t        }\n\t\n\t        /**\n\t         * Render the given scene\n\t         *\n\t         * @param {Scene} scene A Scene instance\n\t         * @param {Camera} camera A Camera instance\n\t         */\n\t\n\t    }, {\n\t        key: 'render',\n\t        value: function render(scene, camera) {\n\t            // Clear render API cache\n\t            this.renderApi.clearCache();\n\t\n\t            // Set default camera\n\t            this.renderApi.setActiveCamera(camera);\n\t\n\t            // Ensure at least one task is alive\n\t            if (!this.getActiveTask()) this.setActiveTask(this.createTask());\n\t\n\t            // Manage the scene\n\t            scene.visit(this);\n\t        }\n\t\n\t        /**\n\t         * Set the task with the given index active\n\t         *\n\t         * @param {number} index An integer representing task's index\n\t         */\n\t\n\t    }, {\n\t        key: 'setActiveTask',\n\t        value: function setActiveTask(index) {\n\t            if (index >= 0 && index < this.tasks.length) this.activeTask = this.tasks[index];\n\t        }\n\t\n\t        /**\n\t         * Get the active task\n\t         *\n\t         * @return {?RenderTask} A RenderTask or null\n\t         */\n\t\n\t    }, {\n\t        key: 'getActiveTask',\n\t        value: function getActiveTask() {\n\t            return this.activeTask;\n\t        }\n\t\n\t        /**\n\t         * Remove all the tasks in memory\n\t         */\n\t\n\t    }, {\n\t        key: 'removeTasks',\n\t        value: function removeTasks() {\n\t            this.tasks.length = 0;\n\t            this.activeTask = null;\n\t        }\n\t\n\t        /**\n\t         * Get the render API\n\t         *\n\t         * @return {RenderAPI} A Render API instance\n\t         */\n\t\n\t    }, {\n\t        key: 'getRenderAPI',\n\t        value: function getRenderAPI() {\n\t            return this.renderApi;\n\t        }\n\t\n\t        /**\n\t         * Get size\n\t         *\n\t         * @return {Array.<number>} A array with size on x and y\n\t         */\n\t\n\t    }, {\n\t        key: 'getSize',\n\t        value: function getSize() {\n\t            return this.context.getSize();\n\t        }\n\t    }]);\n\t\n\t    return RenderTarget;\n\t}();\n\n/***/ },\n/* 41 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * A context\n\t *\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar Context = exports.Context = function () {\n\t  /**\n\t   * Constructor\n\t   */\n\t\n\t  function Context() {\n\t    _classCallCheck(this, Context);\n\t\n\t    /**\n\t     * The DOM element\n\t     *\n\t     * @type {Element}\n\t     */\n\t    this.domElement = null;\n\t\n\t    /**\n\t     * Context instance\n\t     *\n\t     * @type {WebGLRenderingContext|Object}\n\t     * @public\n\t     */\n\t    this.instance = null;\n\t  }\n\t\n\t  /**\n\t   * Shortcut to the active context's instance\n\t   *\n\t   * @enum {Object}\n\t   */\n\t\n\t  _createClass(Context, [{\n\t    key: 'init',\n\t\n\t    /**\n\t     * Init\n\t     *\n\t     * @param {Context.Type} type Type of context\n\t     * @param {{antialiasing: boolean, width: (number|undefined), height: (number|undefined)}} options Options\n\t     * @param {string} targetID Targeted DOM element\n\t     */\n\t    value: function init(type, options, targetID) {\n\t      // Get DOM element.\n\t      var target = document.getElementById(targetID);\n\t      if (!target) throw '404 - Canvas with the name ' + targetID + ' not found.';\n\t\n\t      // Init webgl context.\n\t      if (type == Context.Type.WebGL) {\n\t        // Create canvas.\n\t        this.domElement = document.createElement('canvas');\n\t        this.domElement.width = target.offsetWidth;\n\t        this.domElement.height = target.offsetHeight;\n\t        target.appendChild(this.domElement);\n\t\n\t        // Init WebGL.\n\t        this.instance = this.domElement.getContext('webgl', { antialias: options.antialiasing || true });\n\t        this.instance.viewportWidth = this.domElement.width;\n\t        this.instance.viewportHeight = this.domElement.height;\n\t      }\n\t\n\t      // Set as active context.\n\t      if (!Context.current) Context.current = this;\n\t    }\n\t\n\t    /**\n\t     * Resize context\n\t     *\n\t     * @param {number} width Width to assign in pixel\n\t     * @param {number} height Height to assign in pixel\n\t     */\n\t\n\t  }, {\n\t    key: 'resize',\n\t    value: function resize(width, height) {\n\t      if (!this.domElement || !this.instance) return;\n\t\n\t      // DOM\n\t      this.domElement.width = width;\n\t      this.domElement.height = height;\n\t\n\t      // WebGL\n\t      this.instance.viewportWidth = width;\n\t      this.instance.viewportHeight = height;\n\t    }\n\t\n\t    /**\n\t     * Activate the context\n\t     *\n\t     * The context become the one used by the renderer\n\t     */\n\t\n\t  }, {\n\t    key: 'activate',\n\t    value: function activate() {\n\t      Context.current = this;\n\t    }\n\t\n\t    /**\n\t     * Get size\n\t     *\n\t     * @return {Array.<number>} A array with size on x and y\n\t     */\n\t\n\t  }, {\n\t    key: 'getSize',\n\t    value: function getSize() {\n\t      return [this.domElement.width, this.domElement.height];\n\t    }\n\t  }], [{\n\t    key: 'getActive',\n\t    value: function getActive() {\n\t      return Context.current.instance;\n\t    }\n\t  }]);\n\t\n\t  return Context;\n\t}();\n\t\n\t/**\n\t * Type of context\n\t *\n\t * @enum {number}\n\t */\n\t\n\tContext.Type = { WebGL: 0 };\n\t\n\t/**\n\t * Active context\n\t *\n\t * @type {Context}\n\t */\n\tContext.current = null;\n\n/***/ },\n/* 42 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * A rendering task\n\t *\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar RenderTask = exports.RenderTask = function () {\n\t    /**\n\t     * Constructor\n\t     */\n\t\n\t    function RenderTask() {\n\t        _classCallCheck(this, RenderTask);\n\t\n\t        /**\n\t        * Queue with opaques commands to process\n\t        *\n\t        * @type {Array.<Array.<RenderCommand>>}\n\t        * @private\n\t        */\n\t        this.opaqueQueue = [];\n\t\n\t        /**\n\t        * Queue with transparents commands to process\n\t        *\n\t        * @type {Array.<Array.<RenderCommand>>}\n\t        * @private\n\t        */\n\t        this.transparentQueue = [];\n\t    }\n\t\n\t    /**\n\t     * Add a command to the task\n\t     *\n\t     * @param {RenderCommand} command A RenderCommand instance\n\t     * @param {number=} queue ID of the queue\n\t     */\n\t\n\t    _createClass(RenderTask, [{\n\t        key: \"addCommand\",\n\t        value: function addCommand(command) {\n\t            var queue = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\t\n\t            if (command.isOpaque()) {\n\t                this.opaqueQueue[queue] = this.opaqueQueue[queue] || [];\n\t                this.opaqueQueue[queue].push(command);\n\t            } else {\n\t                this.transparentQueue[queue] = this.transparentQueue[queue] || [];\n\t                this.transparentQueue[queue].push(command);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Execute the task\n\t         *\n\t         * @param {RenderAPI} renderAPI RenderAPI instance used to process the commands\n\t         */\n\t\n\t    }, {\n\t        key: \"execute\",\n\t        value: function execute(renderAPI) {\n\t            var i = 0,\n\t                j = 0;\n\t\n\t            // First we execute opaque commands\n\t            for (i = 0; i < this.opaqueQueue.length; i++) {\n\t                for (j = 0; j < this.opaqueQueue[i].length; j++) {\n\t                    this.opaqueQueue[i][j].execute(renderAPI);\n\t                }\n\t            }\n\t\n\t            // Secondly, we execute non-opaque ones\n\t            for (i = 0; i < this.transparentQueue.length; i++) {\n\t                for (j = 0; j < this.transparentQueue[i].length; j++) {\n\t                    this.transparentQueue[i][j].execute(renderAPI);\n\t                }\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return RenderTask;\n\t}();\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.WebGL = undefined;\n\t\n\tvar _Cache = __webpack_require__(44);\n\t\n\tvar _Context = __webpack_require__(41);\n\t\n\tvar _DirectionalLight = __webpack_require__(14);\n\t\n\tvar _Instances = __webpack_require__(45);\n\t\n\tvar _PointLight = __webpack_require__(37);\n\t\n\tvar _Program = __webpack_require__(29);\n\t\n\tvar _RenderAPI2 = __webpack_require__(46);\n\t\n\tvar _StateBlock = __webpack_require__(18);\n\t\n\tvar _TextureCube = __webpack_require__(47);\n\t\n\tvar _TextureVideo = __webpack_require__(48);\n\t\n\tvar _Types = __webpack_require__(25);\n\t\n\tvar _VertexFormat = __webpack_require__(22);\n\t\n\tvar _WebGL = __webpack_require__(49);\n\t\n\tvar WebGLConst = _interopRequireWildcard(_WebGL);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t// Unique instance\n\tvar instance = null;\n\t\n\t/**\n\t * WebGL renderer\n\t *\n\t * @extends {RenderAPI}\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar WebGL = exports.WebGL = function (_RenderAPI) {\n\t    _inherits(WebGL, _RenderAPI);\n\t\n\t    /**\n\t     * Constructor\n\t     */\n\t\n\t    function WebGL() {\n\t        var _ret;\n\t\n\t        _classCallCheck(this, WebGL);\n\t\n\t        // Singleton\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(WebGL).call(this));\n\t\n\t        if (!instance) instance = _this;\n\t\n\t        /**\n\t         * Cache\n\t         *\n\t         * @type {WebGL.Cache}\n\t         * @private\n\t         */\n\t        _this.cache = new _Cache.Cache();\n\t\n\t        /**\n\t         * Array with enabled attribut\n\t         *\n\t         * @type {Array.<boolean>}\n\t         * @private\n\t         */\n\t        _this.enabledVertexAttribArray = [];\n\t\n\t        /**\n\t         * WebGL instances\n\t         *\n\t         * @type {Instances}\n\t         * @private\n\t         */\n\t        _this.instances = new _Instances.Instances();\n\t\n\t        /**\n\t         * Active states\n\t         *\n\t         * @type {StateBlock}\n\t         * @private\n\t         */\n\t        _this.state = new _StateBlock.StateBlock();\n\t\n\t        // Init state block\n\t        _this.initStateBlockWithDefaultValues(_this.state);\n\t\n\t        return _ret = instance, _possibleConstructorReturn(_this, _ret);\n\t    }\n\t\n\t    /**\n\t     * Get unique instance\n\t     */\n\t\n\t    _createClass(WebGL, [{\n\t        key: 'bindLight',\n\t\n\t        /**\n\t         * Bind light\n\t         *\n\t         * @param {Light} light A Light instance\n\t         */\n\t        value: function bindLight(light) {\n\t            this.cache.lights.push(light);\n\t        }\n\t\n\t        /**\n\t         * Bind the given framebuffer\n\t         *\n\t         * @param {number} framebufferID An identifier, -1 to bind default the frame buffer\n\t         */\n\t\n\t    }, {\n\t        key: 'bindFrameBuffer',\n\t        value: function bindFrameBuffer(framebufferID) {\n\t            var gl = _Context.Context.getActive();\n\t\n\t            if (framebufferID == -1) gl.bindFramebuffer(WebGLConst.FRAMEBUFFER, null);else {\n\t                var webGLBuffer = this.instances.frameBuffers[framebufferID];\n\t                if (!webGLBuffer) return;\n\t\n\t                gl.bindFramebuffer(WebGLConst.FRAMEBUFFER, webGLBuffer);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Bind texture to the the given slot\n\t         *\n\t         * @param {number} slot Targeted slot's index\n\t         * @param {Private.TextureInterface} texture A Texture instance\n\t         */\n\t\n\t    }, {\n\t        key: 'bindTexture',\n\t        value: function bindTexture(slot, texture) {\n\t            if (!texture.isReady()) return;\n\t\n\t            var isTextureVideo = texture instanceof _TextureVideo.TextureVideo;\n\t            var needUpdate = false;\n\t\n\t            // Retrieve context\n\t            var gl = _Context.Context.getActive();\n\t\n\t            // Create WebGL instance\n\t            var webGLTexture = this.instances.textures[texture.getUID()];\n\t            if (!webGLTexture) {\n\t                webGLTexture = gl.createTexture();\n\t                this.instances.textures[texture.getUID()] = webGLTexture;\n\t                needUpdate = true;\n\t            }\n\t\n\t            // Bind it!\n\t            if (this.cache.texture != texture) {\n\t                gl.activeTexture(WebGLConst.TEXTURE0 + slot);\n\t                gl.bindTexture(WebGLConst.TEXTURE_2D, webGLTexture);\n\t            }\n\t\n\t            // Need to update the texture?\n\t            if (needUpdate) {\n\t                var imageSize = [0, 0];\n\t\n\t                gl.pixelStorei(WebGLConst.UNPACK_FLIP_Y_WEBGL, true);\n\t\n\t                // Upload to the GPU\n\t                if (isTextureVideo) gl.texImage2D(WebGLConst.TEXTURE_2D, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, texture.getVideoData());else {\n\t                    // WebGL support image loading from HTMLImage instance and from array of pixels\n\t                    var image = texture.getImage();\n\t                    var data = image.getData();\n\t                    imageSize = image.getSize();\n\t\n\t                    if (data instanceof Image) gl.texImage2D(WebGLConst.TEXTURE_2D, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, data);else gl.texImage2D(WebGLConst.TEXTURE_2D, 0, WebGLConst.RGBA, imageSize[0], imageSize[1], 0, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, data);\n\t                }\n\t\n\t                var isPOT = (imageSize[0] & imageSize[0] - 1) === 0 && (imageSize[1] & imageSize[1] - 1) === 0;\n\t\n\t                // Apply filters.\n\t                gl.texParameteri(WebGLConst.TEXTURE_2D, WebGLConst.TEXTURE_WRAP_S, texture.isRepeated() ? WebGLConst.REPEAT : WebGLConst.CLAMP_TO_EDGE);\n\t                gl.texParameteri(WebGLConst.TEXTURE_2D, WebGLConst.TEXTURE_WRAP_T, texture.isRepeated() ? WebGLConst.REPEAT : WebGLConst.CLAMP_TO_EDGE);\n\t\n\t                gl.texParameteri(WebGLConst.TEXTURE_2D, WebGLConst.TEXTURE_MAG_FILTER, texture.isSmoothed() ? WebGLConst.LINEAR : WebGLConst.NEAREST);\n\t\n\t                var min_filter = isPOT && texture.isMipmaped() ? WebGLConst.LINEAR_MIPMAP_NEAREST : WebGLConst.LINEAR;\n\t                gl.texParameteri(WebGLConst.TEXTURE_2D, WebGLConst.TEXTURE_MIN_FILTER, texture.isSmoothed() ? min_filter : WebGLConst.NEAREST);\n\t\n\t                if (!isTextureVideo && isPOT && texture.isMipmaped()) gl.generateMipmap(WebGLConst.TEXTURE_2D);\n\t            }\n\t            // Video need to be updated continuously\n\t            else if (isTextureVideo) gl.texImage2D(WebGLConst.TEXTURE_2D, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, texture.getVideoData());\n\t\n\t            this.cache.texture = texture;\n\t        }\n\t\n\t        /**\n\t         * Bind texture cube to the the given slot\n\t         *\n\t         * @param {number} slot Targeted slot's index\n\t         * @param {TextureCube} texture A TextureCube instance\n\t         */\n\t\n\t    }, {\n\t        key: 'bindTextureCube',\n\t        value: function bindTextureCube(slot, texture) {\n\t            // Cache\n\t            if (!texture.isReady()) return;\n\t\n\t            // Retrieve context\n\t            var gl = _Context.Context.getActive();\n\t\n\t            // Create geometry's data\n\t            var needUpdate = false;\n\t            var webGLTexture = this.instances.textures[texture.getUID()];\n\t            if (!webGLTexture) {\n\t                webGLTexture = gl.createTexture();\n\t                this.instances.textures[texture.getUID()] = webGLTexture;\n\t                needUpdate = true;\n\t            }\n\t\n\t            if (this.cache.texture != texture) {\n\t                gl.activeTexture(WebGLConst.TEXTURE0 + slot);\n\t                gl.bindTexture(WebGLConst.TEXTURE_CUBE_MAP, webGLTexture);\n\t            }\n\t\n\t            // Need to update the texture?\n\t            if (needUpdate) {\n\t                var images = texture.getImages();\n\t\n\t                // Upload to the GPU\n\t                gl.texImage2D(WebGLConst.TEXTURE_CUBE_MAP_POSITIVE_X, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, images[_TextureCube.TextureCube.Face.Left].getData());\n\t                gl.texImage2D(WebGLConst.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, images[_TextureCube.TextureCube.Face.Right].getData());\n\t                gl.texImage2D(WebGLConst.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, images[_TextureCube.TextureCube.Face.Up].getData());\n\t                gl.texImage2D(WebGLConst.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, images[_TextureCube.TextureCube.Face.Down].getData());\n\t                gl.texImage2D(WebGLConst.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, images[_TextureCube.TextureCube.Face.Front].getData());\n\t                gl.texImage2D(WebGLConst.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, images[_TextureCube.TextureCube.Face.Back].getData());\n\t\n\t                // Apply filters\n\t                gl.texParameteri(WebGLConst.TEXTURE_CUBE_MAP, WebGLConst.TEXTURE_MAG_FILTER, WebGLConst.NEAREST);\n\t                gl.texParameteri(WebGLConst.TEXTURE_CUBE_MAP, WebGLConst.TEXTURE_MIN_FILTER, WebGLConst.NEAREST);\n\t            }\n\t\n\t            this.cache.texture = texture;\n\t        }\n\t\n\t        /**\n\t         * Clear the rendering target\n\t         *\n\t         * @param {Color} color A Color instance\n\t         */\n\t\n\t    }, {\n\t        key: 'clear',\n\t        value: function clear(color) {\n\t            // Apply color.\n\t            if (!color.isEqual(this.cache.clearColor)) {\n\t                _Context.Context.getActive().clearColor(color.r, color.g, color.b, color.a);\n\t                this.cache.clearColor = color;\n\t            }\n\t\n\t            // Clear buffers\n\t            _Context.Context.getActive().clear(WebGLConst.COLOR_BUFFER_BIT | WebGLConst.DEPTH_BUFFER_BIT | WebGLConst.DEPTH_BUFFER_BIT);\n\t        }\n\t\n\t        /**\n\t         * Clear cache.\n\t         */\n\t\n\t    }, {\n\t        key: 'clearCache',\n\t        value: function clearCache() {\n\t            this.cache.program = null;\n\t            this.cache.lights.length = 0;\n\t        }\n\t\n\t        /**\n\t         * Create a new frame buffer\n\t         *\n\t         * @return {number} An identifier to work with it later\n\t         */\n\t\n\t    }, {\n\t        key: 'createFrameBuffer',\n\t        value: function createFrameBuffer() {\n\t            var identifier = this.instances.frameBuffers.length;\n\t\n\t            var frameBuffer = _Context.Context.getActive().createFramebuffer();\n\t            this.instances.frameBuffers.push(frameBuffer);\n\t\n\t            return identifier;\n\t        }\n\t\n\t        /**\n\t        * Draw indexed primitives\n\t        *\n\t        * @param {DrawingMode} drawingMode Drawing mode to use\n\t        * @param {number} firstVertexIndex Index of the first vertex to draw, useful to draw some parts\n\t        * @param {number} vertexCount Vertex count to draw\n\t        */\n\t\n\t    }, {\n\t        key: 'drawIndexedPrimitives',\n\t        value: function drawIndexedPrimitives(drawingMode, firstVertexIndex, vertexCount) {\n\t            _Context.Context.getActive().drawElements(this.convertDrawingModeToConstant(drawingMode), vertexCount, WebGLConst.UNSIGNED_SHORT, firstVertexIndex);\n\t            this.disableVertexAttribArray();\n\t        }\n\t\n\t        /**\n\t        * Draw primitives\n\t        *\n\t        * @param {DrawingMode} drawingMode Drawing mode to use\n\t        * @param {number} firstVertexIndex Index of the first vertex to draw, useful to draw some parts\n\t        * @param {number} vertexCount Vertex count to draw\n\t        */\n\t\n\t    }, {\n\t        key: 'drawPrimitives',\n\t        value: function drawPrimitives(drawingMode, firstVertexIndex, vertexCount) {\n\t            _Context.Context.getActive().drawArrays(this.convertDrawingModeToConstant(drawingMode), firstVertexIndex, vertexCount);\n\t            this.disableVertexAttribArray();\n\t        }\n\t\n\t        /**\n\t        * Disable enabled vertex attributs array\n\t        *\n\t        * @private\n\t        */\n\t\n\t    }, {\n\t        key: 'disableVertexAttribArray',\n\t        value: function disableVertexAttribArray() {\n\t            // Retrieve context.\n\t            var gl = _Context.Context.getActive();\n\t\n\t            // Disable attributs\n\t            for (var i in this.enabledVertexAttribArray) {\n\t                gl.disableVertexAttribArray(i);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Init frame buffer: attach it to textures, depth buffer and/or a stencil buffer\n\t         *\n\t         * @param {number} framebufferID Targeted slot's index\n\t         * @param {Array.<Texture>} textures An array of Texture instances\n\t         * @param {boolean=} useDepthBuffer True to use a depth buffer\n\t         * @param {boolean=} useStencilBuffer True to use a stencil buffer\n\t         */\n\t\n\t    }, {\n\t        key: 'initFrameBuffer',\n\t        value: function initFrameBuffer(framebufferID, textures) {\n\t            var useDepthBuffer = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];\n\t            var useStencilBuffer = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];\n\t\n\t            // Ensure FBO is ready\n\t            var webGLBuffer = this.instances.frameBuffers[framebufferID];\n\t            if (!webGLBuffer) return;\n\t\n\t            // Retrieve context\n\t            var gl = _Context.Context.getActive();\n\t            var size = [0, 0]; // We will retrieve FBO's size from his textures\n\t\n\t            // Bind frame buffer\n\t            this.bindFrameBuffer(framebufferID);\n\t\n\t            // Attach textures.\n\t            for (var i = 0; i < textures.length; i++) {\n\t                // Force texture creation\n\t                this.bindTexture(i, textures[i]);\n\t\n\t                // Retrieve size\n\t                size = textures[i].getImage().getSize();\n\t\n\t                // Attach texture\n\t                var webGLTexture = this.instances.textures[textures[i].getUID()];\n\t\n\t                // Multiple attachements are not supported by WebGL\n\t                gl.framebufferTexture2D(WebGLConst.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, WebGLConst.TEXTURE_2D, webGLTexture, 0);\n\t            }\n\t\n\t            // Attach depth and/or stencil buffers.\n\t            if (useDepthBuffer || useStencilBuffer) {\n\t                var renderBuffer = gl.createRenderbuffer();\n\t                gl.bindRenderbuffer(WebGLConst.RENDERBUFFER, renderBuffer);\n\t\n\t                if (!useStencilBuffer) {\n\t                    gl.renderbufferStorage(WebGLConst.RENDERBUFFER, WebGLConst.DEPTH_COMPONENT16, size[0], size[1]);\n\t                    gl.framebufferRenderbuffer(WebGLConst.FRAMEBUFFER, WebGLConst.DEPTH_ATTACHMENT, WebGLConst.RENDERBUFFER, renderBuffer);\n\t                } else {\n\t                    gl.renderbufferStorage(WebGLConst.RENDERBUFFER, WebGLConst.DEPTH_STENCIL, size[0], size[1]);\n\t                    gl.framebufferRenderbuffer(WebGLConst.FRAMEBUFFER, WebGLConst.DEPTH_STENCIL_ATTACHMENT, WebGLConst.RENDERBUFFER, renderBuffer);\n\t                }\n\t\n\t                gl.bindRenderbuffer(WebGLConst.RENDERBUFFER, null);\n\t            }\n\t\n\t            // Unbind FBO safely\n\t            this.bindFrameBuffer(-1);\n\t        }\n\t\n\t        /**\n\t        * Set default values on the state block instance\n\t        *\n\t        * @private\n\t        */\n\t\n\t    }, {\n\t        key: 'initStateBlockWithDefaultValues',\n\t        value: function initStateBlockWithDefaultValues(stateBlock) {\n\t            this.state.depthTest = false;\n\t            this.state.depthWrite = false;\n\t            this.state.stencilTest = false;\n\t        }\n\t\n\t        /**\n\t         * Send lights to the given program\n\t         *\n\t         * @param {Program} program A Program instance\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: 'sendLights',\n\t        value: function sendLights(program) {\n\t            var webGLProgram = this.instances.programs[program.getUID()];\n\t            if (!webGLProgram) return;\n\t\n\t            var lightCount = this.cache.lights.length;\n\t\n\t            // Fill arrays.\n\t            var light = this.cache.lights[0];\n\t            var needData = false;\n\t            var needDirection = false;\n\t            for (var i = 0, j = 0; i < this.cache.lights.length; i++, j += 3) {\n\t                light = this.cache.lights[i];\n\t\n\t                // Type of light\n\t                if (light instanceof _PointLight.PointLight) this.cache.lightsType[i] = 0;else if (light instanceof _DirectionalLight.DirectionalLight) this.cache.lightsType[i] = 1;else this.cache.lightsType[i] = 2;\n\t\n\t                // Ambient\n\t                var ambient = light.getAmbientColor();\n\t                this.cache.lightsAmbient[j] = ambient.r;\n\t                this.cache.lightsAmbient[j + 1] = ambient.g;\n\t                this.cache.lightsAmbient[j + 2] = ambient.b;\n\t\n\t                // Data (linear, quadratic and constant data)\n\t                if (this.cache.lightsType[i] != 1) {\n\t                    var values = light.getValues();\n\t                    this.cache.lightsData[j] = values[0];\n\t                    this.cache.lightsData[j + 1] = values[1];\n\t                    this.cache.lightsData[j + 2] = values[2];\n\t                    needData = true;\n\t                } else {\n\t                    this.cache.lightsData[j] = 0;\n\t                    this.cache.lightsData[j + 1] = 0;\n\t                    this.cache.lightsData[j + 2] = 0;\n\t                }\n\t\n\t                // Diffuse.\n\t                var diffuse = light.getDiffuseColor();\n\t                this.cache.lightsDiffuse[j] = diffuse.r;\n\t                this.cache.lightsDiffuse[j + 1] = diffuse.g;\n\t                this.cache.lightsDiffuse[j + 2] = diffuse.b;\n\t\n\t                // Direction.\n\t                if (this.cache.lightsType[i] !== 0) {\n\t                    var direction = light.getDirection();\n\t                    this.cache.lightsDirection[j] = direction[0];\n\t                    this.cache.lightsDirection[j + 1] = direction[1];\n\t                    this.cache.lightsDirection[j + 2] = direction[2];\n\t                    needDirection = true;\n\t                } else {\n\t                    this.cache.lightsDirection[j] = 0;\n\t                    this.cache.lightsDirection[j + 1] = 0;\n\t                    this.cache.lightsDirection[j + 2] = 0;\n\t                }\n\t\n\t                var position = light.getPosition();\n\t                this.cache.lightsPosition[j] = position[0];\n\t                this.cache.lightsPosition[j + 1] = position[1];\n\t                this.cache.lightsPosition[j + 2] = position[2];\n\t\n\t                // Specular.\n\t                var specular = light.getSpecularColor();\n\t                this.cache.lightsSpecular[j] = specular.r;\n\t                this.cache.lightsSpecular[j + 1] = specular.g;\n\t                this.cache.lightsSpecular[j + 2] = specular.b;\n\t            }\n\t\n\t            // Send data.\n\t            if (this.cache.lights.length) {\n\t                this.setUniform(program, 'uCameraPosition', _Types.Type.Float, this.activeCamera.getPosition());\n\t                this.setUniform(program, 'lights.count', _Types.Type.Int, lightCount);\n\t                this.setUniform(program, 'lights.ambient', _Types.Type.Float, this.cache.lightsAmbient, 3);\n\t\n\t                if (needData) this.setUniform(program, 'lights.data', _Types.Type.Float, this.cache.lightsData, 3);\n\t\n\t                this.setUniform(program, 'lights.diffuse', _Types.Type.Float, this.cache.lightsDiffuse, 3);\n\t\n\t                if (needDirection) this.setUniform(program, 'lights.direction', _Types.Type.Float, this.cache.lightsDirection, 3);\n\t\n\t                this.setUniform(program, 'lights.position', _Types.Type.Float, this.cache.lightsPosition, 3);\n\t                this.setUniform(program, 'lights.specular', _Types.Type.Float, this.cache.lightsSpecular, 3);\n\t                this.setUniform(program, 'lights.type', _Types.Type.Int, this.cache.lightsType, 1);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Set camera to use\n\t         *\n\t         * @param {Camera} camera A Camera instance\n\t         */\n\t\n\t    }, {\n\t        key: 'setActiveCamera',\n\t        value: function setActiveCamera(camera) {\n\t            _get(Object.getPrototypeOf(WebGL.prototype), 'setActiveCamera', this).call(this, camera);\n\t\n\t            var viewport = camera.getViewport();\n\t            _Context.Context.getActive().viewport(viewport[0], viewport[1], viewport[2], viewport[3]);\n\t        }\n\t\n\t        /**\n\t         * Set blend mode to apply\n\t         *\n\t         * @param {BlendMode} blendMode A BlendMode instance\n\t         */\n\t\n\t    }, {\n\t        key: 'setBlendMode',\n\t        value: function setBlendMode(blendMode) {\n\t            // Avoid useless operations\n\t            if (blendMode.isEqual(this.state.blendMode)) return;\n\t\n\t            // Retrieve context\n\t            var gl = _Context.Context.getActive();\n\t\n\t            // Disable blending.\n\t            if (blendMode.colorSourceFactor == BlendMode.Factor.One && blendMode.colorDestinationFactor == BlendMode.Factor.Zero) gl.disable(WebGLConst.BLEND);else {\n\t                // Enable it\n\t                gl.enable(WebGLConst.BLEND);\n\t\n\t                // Apply functions and equations\n\t                gl.blendEquationSeparate(this.convertBlendingEquationToConstant(blendMode.colorEquation), this.convertBlendingEquationToConstant(blendMode.alphaEquation));\n\t\n\t                gl.blendFuncSeparate(this.convertBlendingFactorToConstant(blendMode.colorSourceFactor), this.convertBlendingFactorToConstant(blendMode.colorDestinationFactor), this.convertBlendingFactorToConstant(blendMode.alphaSourceFactor), this.convertBlendingFactorToConstant(blendMode.alphaDestinationFactor));\n\t            }\n\t\n\t            this.state.blendMode = blendMode;\n\t        }\n\t\n\t        /**\n\t         * Set depth state\n\t         *\n\t         * @param {boolean} depthTest True to activate depth testing, otherwise false\n\t         * @param {boolean} writeTest True to activate depth writing otherwise false\n\t         * @param {DepthFunction} depthFunction Depth function to apply\n\t         */\n\t\n\t    }, {\n\t        key: 'setDepthState',\n\t        value: function setDepthState(depthTest, writeTest, depthFunction) {\n\t            var gl = _Context.Context.getActive();\n\t\n\t            if (!depthTest && this.state.depthTest) gl.disable(WebGLConst.DEPTH_TEST);else if (depthTest) {\n\t                if (!this.state.depthTest) gl.enable(WebGLConst.DEPTH_TEST);\n\t\n\t                if (this.state.writeTest != writeTest) {\n\t                    gl.depthMask(writeTest);\n\t                    this.state.writeTest = writeTest;\n\t                }\n\t\n\t                if (this.state.depthFunction != depthFunction) {\n\t                    gl.depthFunc(this.convertDepthFunctionToConstant(depthFunction));\n\t                    this.state.depthFunction = depthFunction;\n\t                }\n\t            }\n\t\n\t            this.state.depthTest = depthTest;\n\t        }\n\t\n\t        /**\n\t         * Set face culling state\n\t         *\n\t         * @param {FaceCulling} mode Face culling mode to set\n\t         */\n\t\n\t    }, {\n\t        key: 'setFaceCulling',\n\t        value: function setFaceCulling(mode) {\n\t            // Avoid useless operations\n\t            if (this.state.faceCulling == mode) return;\n\t\n\t            // Retrieve context\n\t            var gl = _Context.Context.getActive();\n\t\n\t            // Apply state\n\t            if (mode == FaceCulling.None) gl.disable(WebGLConst.CULL_FACE);else {\n\t                if (this.state.faceCulling == FaceCulling.None) gl.enable(WebGLConst.CULL_FACE);\n\t\n\t                if (mode == FaceCulling.Front) gl.cullFace(WebGLConst.FRONT);else gl.cullFace(WebGLConst.BACK);\n\t            }\n\t\n\t            this.state.faceCulling = mode;\n\t        }\n\t\n\t        /**\n\t         * Set index buffer to use\n\t         *\n\t         * @param {number|WebGLBuffer} buffer A buffer instance\n\t         */\n\t\n\t    }, {\n\t        key: 'setIndexBuffer',\n\t        value: function setIndexBuffer(buffer) {\n\t            _Context.Context.getActive().bindBuffer(WebGLConst.ELEMENT_ARRAY_BUFFER, buffer);\n\t        }\n\t\n\t        /**\n\t         * Set geometry to use\n\t         *\n\t         * @param {Geometry} geometry A Geometry instance\n\t         */\n\t\n\t    }, {\n\t        key: 'setGeometry',\n\t        value: function setGeometry(geometry) {\n\t            // Ensure valid format is present\n\t            if (!geometry.getVertexFormat()) return;\n\t\n\t            // Set vertex format to use\n\t            this.setVertexFormat(geometry.getVertexFormat());\n\t\n\t            // Retrieve context\n\t            var gl = _Context.Context.getActive();\n\t\n\t            // Create geometry's data\n\t            var geometryInstances = this.instances.buffers[geometry.getUID()];\n\t            if (!geometryInstances) {\n\t                geometryInstances = new _Instances.BufferData();\n\t                this.instances.buffers[geometry.getUID()] = geometryInstances;\n\t            }\n\t\n\t            // Prepare/Set index buffer\n\t            {\n\t                if (!geometryInstances.indexBuffer) geometryInstances.indexBuffer = gl.createBuffer();\n\t\n\t                this.setIndexBuffer(geometryInstances.indexBuffer);\n\t\n\t                // Update buffer data\n\t                if (this.cache.vertexFormat.isIndicesWaitingUpdate()) {\n\t                    gl.bufferData(WebGLConst.ELEMENT_ARRAY_BUFFER, geometry.getIndices(), WebGLConst.STATIC_DRAW);\n\t                    this.cache.vertexFormat.setIndicesAsWaitingUpdate(false);\n\t                }\n\t            }\n\t\n\t            // Prepare/Set vertex buffer\n\t            var vertexElements = this.cache.vertexFormat.getElements();\n\t            for (var i = 0; i < vertexElements.length; i++) {\n\t                if (!geometryInstances.vertexBuffers[i]) geometryInstances.vertexBuffers[i] = gl.createBuffer();\n\t\n\t                // Apply buffer\n\t                this.setVertexBuffer(i, geometryInstances.vertexBuffers[i]);\n\t\n\t                // Fill it\n\t                if (this.cache.vertexFormat.isStreamWaitingUpdate(vertexElements[i].stream)) {\n\t                    var streamType = this.convertStreamTypeToConstant(this.cache.vertexFormat.getStreamType(vertexElements[i].stream));\n\t\n\t                    switch (vertexElements[i].usage) {\n\t                        case _VertexFormat.VertexElement.Usage.Position:\n\t                            gl.bufferData(WebGLConst.ARRAY_BUFFER, geometry.getVerticesPositions(), streamType);\n\t                            break;\n\t                        case _VertexFormat.VertexElement.Usage.Color:\n\t                            gl.bufferData(WebGLConst.ARRAY_BUFFER, geometry.getVerticesColors(), streamType);\n\t                            break;\n\t                        case _VertexFormat.VertexElement.Usage.UVS:\n\t                            gl.bufferData(WebGLConst.ARRAY_BUFFER, geometry.getVerticesUVs(), streamType);\n\t                            break;\n\t                        case _VertexFormat.VertexElement.Usage.Normal:\n\t                            gl.bufferData(WebGLConst.ARRAY_BUFFER, geometry.getVerticesNormals(), streamType);\n\t                            break;\n\t                        default:\n\t                        case _VertexFormat.VertexElement.Usage.Tangent:\n\t                            console.log('Given vertex element is not supported for now.');\n\t                            break;\n\t                    }\n\t\n\t                    this.cache.vertexFormat.setStreamAsWaitingUpdate(vertexElements[i].usage, false);\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Set program to use\n\t         *\n\t         * @param {Program} program A Program instance to use\n\t         * @return {number} -1: an error occured, 0: everything is ok, 1 : program have been changed\n\t         */\n\t\n\t    }, {\n\t        key: 'setProgram',\n\t        value: function setProgram(program) {\n\t            var webGLProgram = this.instances.programs[program.getUID()];\n\t\n\t            // Retrieve context.\n\t            var gl = _Context.Context.getActive();\n\t\n\t            // Create program.\n\t            if (!webGLProgram) {\n\t                if (!program.isReady()) return -1;\n\t\n\t                var sources = program.getSources();\n\t                var programID = gl.createProgram();\n\t\n\t                // Load vertex and fragment shaders\n\t                var vertexShader = gl.createShader(WebGLConst.VERTEX_SHADER);\n\t                gl.shaderSource(vertexShader, sources[0]);\n\t                gl.compileShader(vertexShader);\n\t\n\t                var fragmentShader = gl.createShader(WebGLConst.FRAGMENT_SHADER);\n\t                gl.shaderSource(fragmentShader, sources[1]);\n\t                gl.compileShader(fragmentShader);\n\t\n\t                // Link to the program\n\t                gl.attachShader(programID, vertexShader);\n\t                gl.attachShader(programID, fragmentShader);\n\t\n\t                // Bind default locations\n\t                gl.bindAttribLocation(programID, _VertexFormat.VertexElement.Usage.Position, 'aPosition');\n\t                gl.bindAttribLocation(programID, _VertexFormat.VertexElement.Usage.UVS, 'aTexCoord');\n\t                gl.bindAttribLocation(programID, _VertexFormat.VertexElement.Usage.Color, 'aColor');\n\t                gl.bindAttribLocation(programID, _VertexFormat.VertexElement.Usage.Normal, 'aNormal');\n\t                gl.bindAttribLocation(programID, _VertexFormat.VertexElement.Usage.Tangent, 'aTangent');\n\t\n\t                // Link program\n\t                gl.linkProgram(programID);\n\t\n\t                // Remove vertex and fragment from memory\n\t                gl.deleteShader(vertexShader);\n\t                gl.deleteShader(fragmentShader);\n\t\n\t                // Save it\n\t                this.instances.programs[program.getUID()] = programID;\n\t                webGLProgram = programID;\n\t\n\t                // Get uniforms and attributs informations\n\t                {\n\t                    var i = undefined;\n\t                    var activeUniforms = gl.getProgramParameter(programID, WebGLConst.ACTIVE_UNIFORMS);\n\t                    var uniforms = program.getUniforms();\n\t                    for (i = 0; i < activeUniforms; i++) {\n\t                        var uniform = gl.getActiveUniform(programID, i);\n\t\n\t                        var finalName = uniform.name;\n\t                        var arrayPos = uniform.name.indexOf('[', uniform.name.length - 3);\n\t                        if (arrayPos >= 0) finalName = uniform.name.substring(0, arrayPos);\n\t\n\t                        uniforms[finalName] = new _Program.ProgramElement(gl.getUniformLocation(programID, uniform.name), finalName, this.convertConstantToShaderTypes(uniform.type), uniform.size);\n\t                    }\n\t\n\t                    var activeAttributes = gl.getProgramParameter(programID, WebGLConst.ACTIVE_ATTRIBUTES);\n\t                    var attributes = program.getAttributes();\n\t                    for (i = 0; i < activeAttributes; i++) {\n\t                        var attribute = gl.getActiveAttrib(programID, i);\n\t                        attributes[attribute.name] = new _Program.ProgramElement(gl.getAttribLocation(programID, attribute.name), attribute.name, this.convertConstantToShaderTypes(attribute.type), attribute.size);\n\t                    }\n\t                }\n\t            }\n\t\n\t            // Bind program.\n\t            if (this.cache.program != webGLProgram) {\n\t                // Use Program\n\t                gl.useProgram(webGLProgram);\n\t                this.cache.program = webGLProgram;\n\t\n\t                // Send lights's informations\n\t                this.sendLights(program);\n\t\n\t                return 1;\n\t            }\n\t\n\t            return 0;\n\t        }\n\t\n\t        /**\n\t         * Set uniform value\n\t         *\n\t         * @param {Program} program A Program instance to use\n\t         * @param {string} name Uniform's name\n\t         * @param {Type} type Type of value to send\n\t         * @param {?Array<number>|Texture|boolean|number|Float32Array} value A value\n\t         * @param {number=} groupCount When an element is an array, you can create group (like sub-array)\n\t         * @return {boolean} True if uniform has been set successfully, otherwise false\n\t         */\n\t\n\t    }, {\n\t        key: 'setUniform',\n\t        value: function setUniform(program, name, type, value) {\n\t            var groupCount = arguments.length <= 4 || arguments[4] === undefined ? 0 : arguments[4];\n\t\n\t            // Check if program need to be set\n\t            this.setProgram(program);\n\t\n\t            var uniform = program.getUniform(name);\n\t            if (!uniform || !value) return false;\n\t\n\t            // Retrieve context\n\t            var gl = _Context.Context.getActive();\n\t\n\t            // Send value to the program/shaders\n\t            switch (type) {\n\t                case _Types.Type.Float:\n\t                    {\n\t                        if (value instanceof Array) {\n\t                            if (groupCount && groupCount >= 1) {\n\t                                if (groupCount == 2) gl.uniform2fv(uniform.location, value);else if (groupCount == 3) gl.uniform3fv(uniform.location, value);else if (groupCount == 4) gl.uniform4fv(uniform.location, value);else if (groupCount == 1) gl.uniform1fv(uniform.location, value);\n\t                            } else {\n\t                                if (value.length == 3) gl.uniform3f(uniform.location, value[0], value[1], value[2]);else if (value.length == 4) gl.uniform4f(uniform.location, value[0], value[1], value[2], value[3]);else if (value.length == 3) gl.uniform2f(uniform.location, value[0], value[1]);\n\t                            }\n\t                        } else gl.uniform1f(uniform.location, value);\n\t\n\t                        break;\n\t                    }\n\t                case _Types.Type.Int:\n\t                    {\n\t                        if (value instanceof Array) {\n\t                            if (groupCount && groupCount >= 1) {\n\t                                if (groupCount == 2) gl.uniform2iv(uniform.location, value);else if (groupCount == 3) gl.uniform3iv(uniform.location, value);else if (groupCount == 4) gl.uniform4iv(uniform.location, value);else if (groupCount == 1) gl.uniform1iv(uniform.location, value);\n\t                            } else {\n\t                                if (value.length == 3) gl.uniform3i(uniform.location, value[0], value[1], value[2]);else if (value.length == 4) gl.uniform4i(uniform.location, value[0], value[1], value[2], value[3]);else if (value.length == 2) gl.uniform2i(uniform.location, value[0], value[1]);\n\t                            }\n\t                        } else gl.uniform1i(uniform.location, value);\n\t\n\t                        break;\n\t                    }\n\t                case _Types.Type.Matrix:\n\t                    {\n\t                        if (value.length == 16) gl.uniformMatrix4fv(uniform.location, false, value);else if (value.length == 4) gl.uniformMatrix2fv(uniform.location, false, value);else if (value.length == 9) gl.uniformMatrix3fv(uniform.location, false, value);\n\t\n\t                        break;\n\t                    }\n\t                default:\n\t                    break;\n\t            }\n\t\n\t            return true;\n\t        }\n\t\n\t        /**\n\t         * Set scissor test state\n\t         *\n\t         * @param {boolean} state True to activate scissor testing, otherwise false\n\t         * @param {number} x Position on x from the left of the screen\n\t         * @param {number} y Position on y from the bottom of the screen\n\t         * @param {number} w Width of the rectangle\n\t         * @param {number} h Height of the rectangle\n\t         */\n\t\n\t    }, {\n\t        key: 'setScissorTest',\n\t        value: function setScissorTest(state, x, y, w, h) {\n\t            // Retrieve context\n\t            var gl = _Context.Context.getActive();\n\t\n\t            if (!state) gl.disable(WebGLConst.SCISSOR_TEST);else {\n\t                gl.enable(WebGLConst.SCISSOR_TEST);\n\t                gl.scissor(x, y, w, h);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Set stencil test state\n\t         *\n\t         * @param {boolean} activate True to activate stencil test, otherwise false\n\t         * @param {number} writeMask Stencil writing value\n\t         */\n\t\n\t    }, {\n\t        key: 'setStencilState',\n\t        value: function setStencilState(activate, writeMask) {\n\t            // Retrieve context\n\t            var gl = _Context.Context.getActive();\n\t\n\t            if (!activate && this.state.stencilTest) gl.disable(WebGLConst.STENCIL_TEST);else if (activate) {\n\t                if (!this.state.stencilTest) gl.enable(WebGLConst.STENCIL_TEST);\n\t\n\t                if (this.state.stencilWrite != writeMask) {\n\t                    gl.stencilMask(writeMask);\n\t                    this.state.stencilWrite = writeMask;\n\t                }\n\t            }\n\t\n\t            this.state.stencilTest = activate;\n\t        }\n\t\n\t        /**\n\t         * Set stencil function to use\n\t         *\n\t         * @param {StencilFunction} stencilFunction Function to use\n\t         * @param {number} reference Reference value\n\t         * @param {number} mask Mask to use\n\t         */\n\t\n\t    }, {\n\t        key: 'setStencilFunction',\n\t        value: function setStencilFunction(stencilFunction, reference, mask) {\n\t            if (this.state.stencilFunction != stencilFunction || this.state.stencilReference != reference || this.state.stencilMask != mask) {\n\t                _Context.Context.getActive().stencilFunc(this.convertStencilFunctionToConstant(stencilFunction), reference, mask);\n\t                this.state.stencilFunction = stencilFunction;\n\t                this.state.stencilReference = reference;\n\t                this.state.stencilMask = mask;\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Set stencil operations to use\n\t         *\n\t         * @param {StencilOperation} sFail Function to use\n\t         * @param {StencilOperation} dpFail Reference value\n\t         * @param {StencilOperation} dppPass Mask to use\n\t         */\n\t\n\t    }, {\n\t        key: 'setStencilOperations',\n\t        value: function setStencilOperations(sFail, dpFail, dppPass) {\n\t            if (this.state.stencilTestFail != sFail || this.state.stencilDepthTestFail != dpFail || this.state.stencilSuccess != dppPass) {\n\t                _Context.Context.getActive().stencilOp(this.convertStencilOperationToConstant(sFail), this.convertStencilOperationToConstant(dpFail), this.convertStencilOperationToConstant(dppPass));\n\t\n\t                this.state.stencilTestFail = sFail;\n\t                this.state.stencilDepthTestFail = dpFail;\n\t                this.state.stencilSuccess = dppPass;\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Set vertex buffer to use\n\t         *\n\t         * Warning: You must call \"setVertexFormat\" before!\n\t         * @param {number} stream An integer representing stream to use\n\t         * @param {number|WebGLBuffer} buffer A buffer instance\n\t         */\n\t\n\t    }, {\n\t        key: 'setVertexBuffer',\n\t        value: function setVertexBuffer(stream, buffer) {\n\t            // Retrieve context\n\t            var gl = _Context.Context.getActive();\n\t\n\t            // Bind buffer\n\t            gl.bindBuffer(WebGLConst.ARRAY_BUFFER, buffer);\n\t\n\t            // Enable vertex data\n\t            var vertexElements = this.cache.vertexFormat.getElements();\n\t            for (var i = 0; i < vertexElements.length; i++) {\n\t                if (vertexElements[i].stream == stream) {\n\t                    // Enable\n\t                    gl.enableVertexAttribArray(vertexElements[i].usage);\n\t                    gl.vertexAttribPointer(vertexElements[i].usage, vertexElements[i].count, this.convertVertexTypeToConstant(vertexElements[i].type), vertexElements[i].normalize, this.cache.vertexFormat.getStreamStride(vertexElements[i].stream), vertexElements[i].offset);\n\t\n\t                    // Save attribut's state\n\t                    this.enabledVertexAttribArray[vertexElements[i].usage] = true;\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Set vertex format to use\n\t         *\n\t         * @param {VertexFormat} format A VertexFormat instance\n\t         */\n\t\n\t    }, {\n\t        key: 'setVertexFormat',\n\t        value: function setVertexFormat(format) {\n\t            this.cache.vertexFormat = format;\n\t        }\n\t\n\t        /* ------------------------------------------------------------------------------------------ */\n\t        ///\n\t        /// Conversions functions\n\t        ///\n\t        /* ------------------------------------------------------------------------------------------ */\n\t        /**\n\t         * Convert the given factor to a WebGL factor equivalent\n\t         *\n\t         * @param {BlendMode.Factor} factor A blending Factor instance\n\t         * @return {number} A WebGL value.\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: 'convertBlendingFactorToConstant',\n\t        value: function convertBlendingFactorToConstant(factor) {\n\t            switch (factor) {\n\t                default:\n\t                case BlendMode.Factor.Zero:\n\t                    return WebGLConst.ZERO;\n\t                case BlendMode.Factor.One:\n\t                    return WebGLConst.ONE;\n\t                case BlendMode.Factor.SourceColor:\n\t                    return WebGLConst.SRC_COLOR;\n\t                case BlendMode.Factor.OneMinusSourceColor:\n\t                    return WebGLConst.ONE_MINUS_SRC_COLOR;\n\t                case BlendMode.Factor.DestinationColor:\n\t                    return WebGLConst.DST_COLOR;\n\t                case BlendMode.Factor.OneMinusDestinationColor:\n\t                    return WebGLConst.ONE_MINUS_DST_COLOR;\n\t                case BlendMode.Factor.SourceAlpha:\n\t                    return WebGLConst.SRC_ALPHA;\n\t                case BlendMode.Factor.OneMinusSourceAlpha:\n\t                    return WebGLConst.ONE_MINUS_SRC_ALPHA;\n\t                case BlendMode.Factor.DestinationAlpha:\n\t                    return WebGLConst.DST_ALPHA;\n\t                case BlendMode.Factor.OneMinusDestinationAlpha:\n\t                    return WebGLConst.ONE_MINUS_DST_ALPHA;\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Convert the given equation to an equivalent WebGL equation\n\t         *\n\t         * @param {BlendMode.Equation} equation A blending Equation value\n\t         * @return {number} A WebGL value.\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: 'convertBlendingEquationToConstant',\n\t        value: function convertBlendingEquationToConstant(equation) {\n\t            switch (equation) {\n\t                default:\n\t                case BlendMode.Equation.Add:\n\t                    return WebGLConst.FUNC_ADD;\n\t                case BlendMode.Equation.Subtract:\n\t                    return WebGLConst.FUNC_SUBTRACT;\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Convert the given depth function to an equivalent WebGL function\n\t         *\n\t         * @param {DepthFunction} depthFunction A DepthFunction value\n\t         * @return {number} A WebGL value.\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: 'convertDepthFunctionToConstant',\n\t        value: function convertDepthFunctionToConstant(depthFunction) {\n\t            switch (depthFunction) {\n\t                case DepthFunction.Never:\n\t                    return WebGLConst.NEVER;\n\t                case DepthFunction.Less:\n\t                    return WebGLConst.LESS;\n\t                case DepthFunction.Equal:\n\t                    return WebGLConst.EQUAL;\n\t                case DepthFunction.LessEqual:\n\t                    return WebGLConst.LEQUAL;\n\t                case DepthFunction.Greater:\n\t                    return WebGLConst.GREATER;\n\t                case DepthFunction.NotEqual:\n\t                    return WebGLConst.NOTEQUAL;\n\t                case DepthFunction.GreaterEqual:\n\t                    return WebGLConst.GEQUAL;\n\t                case DepthFunction.Always:\n\t                    return WebGLConst.ALWAYS;\n\t                default:\n\t                    return WebGLConst.LEQUAL;\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Convert the given drawing mode to an equivalent WebGL value\n\t         *\n\t         * @param {DrawingMode} drawingMode A drawing mode\n\t         * @return {number} A WebGL value.\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: 'convertDrawingModeToConstant',\n\t        value: function convertDrawingModeToConstant(drawingMode) {\n\t            switch (drawingMode) {\n\t                default:\n\t                case _StateBlock.DrawingMode.Points:\n\t                    return WebGLConst.POINTS;\n\t                case _StateBlock.DrawingMode.Lines:\n\t                    return WebGLConst.LINES;\n\t                case _StateBlock.DrawingMode.LinesStrip:\n\t                    return WebGLConst.LINE_STRIP;\n\t                case _StateBlock.DrawingMode.LinesLoop:\n\t                    return WebGLConst.LINE_LOOP;\n\t                case _StateBlock.DrawingMode.Triangles:\n\t                    return WebGLConst.TRIANGLES;\n\t                case _StateBlock.DrawingMode.TrianglesStrip:\n\t                    return WebGLConst.TRIANGLE_STRIP;\n\t                case _StateBlock.DrawingMode.TrianglesFan:\n\t                    return WebGLConst.TRIANGLE_FAN;\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Convert the given stencil function to an equivalent WebGL function\n\t         *\n\t         * @param {StencilFunction} stencilFunction A StencilFunction value\n\t         * @return {number} A WebGL value\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: 'convertStencilFunctionToConstant',\n\t        value: function convertStencilFunctionToConstant(stencilFunction) {\n\t            switch (stencilFunction) {\n\t                case StencilFunction.Never:\n\t                    return WebGLConst.NEVER;\n\t                case StencilFunction.Less:\n\t                    return WebGLConst.LESS;\n\t                case StencilFunction.Equal:\n\t                    return WebGLConst.EQUAL;\n\t                case StencilFunction.LessEqual:\n\t                    return WebGLConst.LEQUAL;\n\t                case StencilFunction.Greater:\n\t                    return WebGLConst.GREATER;\n\t                case StencilFunction.NotEqual:\n\t                    return WebGLConst.NOTEQUAL;\n\t                case StencilFunction.GreaterEqual:\n\t                    return WebGLConst.GEQUAL;\n\t                case StencilFunction.Always:\n\t                    return WebGLConst.ALWAYS;\n\t                default:\n\t                    return WebGLConst.LEQUAL;\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Convert the given stencil operation to an equivalent WebGL function\n\t         *\n\t         * @param {StencilOperation} operation A StencilOperation value\n\t         * @return {number} A WebGL value\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: 'convertStencilOperationToConstant',\n\t        value: function convertStencilOperationToConstant(operation) {\n\t            switch (operation) {\n\t                default:\n\t                case StencilOperation.Keep:\n\t                    return WebGLConst.KEEP;\n\t                case StencilOperation.Zero:\n\t                    return WebGLConst.ZERO;\n\t                case StencilOperation.Replace:\n\t                    return WebGLConst.REPLACE;\n\t                case StencilOperation.Increment:\n\t                    return WebGLConst.INCR;\n\t                case StencilOperation.Decrement:\n\t                    return WebGLConst.DECR;\n\t                case StencilOperation.Invert:\n\t                    return WebGLConst.INVERT;\n\t                case StencilOperation.IncrementWrap:\n\t                    return WebGLConst.INCR_WRAP;\n\t                case StencilOperation.DecrementWrap:\n\t                    return WebGLConst.DECR_WRAP;\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Convert the given vertex type to an equivalent WebGL type\n\t         *\n\t         * @param {VertexElement.Type} type A VertexElement type\n\t         * @return {number} A WebGL value\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: 'convertVertexTypeToConstant',\n\t        value: function convertVertexTypeToConstant(type) {\n\t            switch (type) {\n\t                default:\n\t                case _VertexFormat.VertexElement.Type.Byte:\n\t                    return WebGLConst.BYTE;\n\t                case _VertexFormat.VertexElement.Type.Float:\n\t                    return WebGLConst.FLOAT;\n\t                case _VertexFormat.VertexElement.Type.Int:\n\t                    return WebGLConst.INT;\n\t                case _VertexFormat.VertexElement.Type.Short:\n\t                    return WebGLConst.SHORT;\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Convert the given type of stream to an equivalent WebGL type\n\t         *\n\t         * @param {VertexElement.StreamType} type A StreamType\n\t         * @return {number} A WebGL value\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: 'convertStreamTypeToConstant',\n\t        value: function convertStreamTypeToConstant(type) {\n\t            switch (type) {\n\t                default:\n\t                case _VertexFormat.VertexElement.StreamType.Static:\n\t                    return WebGLConst.STATIC_DRAW;\n\t                case _VertexFormat.VertexElement.StreamType.Dynamic:\n\t                    return WebGLConst.DYNAMIC_DRAW;\n\t                case _VertexFormat.VertexElement.StreamType.Stream:\n\t                    return WebGLConst.STREAM_DRAW;\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Convert the given type to a Lemon equivalent\n\t         *\n\t         * @param {number} type A WebGL value\n\t         * @return {Type} A custom type value\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: 'convertConstantToShaderTypes',\n\t        value: function convertConstantToShaderTypes(type) {\n\t            switch (type) {\n\t                default:\n\t                case WebGLConst.FLOAT:\n\t                case WebGLConst.FLOAT_VEC2:\n\t                case WebGLConst.FLOAT_VEC3:\n\t                case WebGLConst.FLOAT_VEC4:\n\t                    return _Types.Type.Float;\n\t                case WebGLConst.INT:\n\t                case WebGLConst.INT_VEC2:\n\t                case WebGLConst.INT_VEC3:\n\t                case WebGLConst.INT_VEC4:\n\t                    return _Types.Type.Int;\n\t                case WebGLConst.BOOL:\n\t                case WebGLConst.BOOL_VEC2:\n\t                case WebGLConst.BOOL_VEC3:\n\t                case WebGLConst.BOOL_VEC4:\n\t                    return _Types.Type.Bool;\n\t                case WebGLConst.FLOAT_MAT2:\n\t                case WebGLConst.FLOAT_MAT3:\n\t                case WebGLConst.FLOAT_MAT4:\n\t                    return _Types.Type.Matrix;\n\t                case WebGLConst.SAMPLER_2D:\n\t                    return _Types.Type.Texture2D;\n\t                case WebGLConst.SAMPLER_CUBE:\n\t                    return _Types.Type.TextureCube;\n\t                case WebGLConst.BYTE:\n\t                    return _Types.Type.Byte;\n\t                case WebGLConst.UNSIGNED_BYTE:\n\t                    return _Types.Type.u_Byte;\n\t                case WebGLConst.SHORT:\n\t                    return _Types.Type.Short;\n\t                case WebGLConst.UNSIGNED_SHORT:\n\t                    return _Types.Type.u_Short;\n\t                case WebGLConst.UNSIGNED_INT:\n\t                    return _Types.Type.u_Int;\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Convert the given webgl shader's type to an equivalent Lemon value\n\t         *\n\t         * @param {number} type A WebGL value\n\t         * @return {number} A number representing element count for the given type\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: 'convertConstantToShaderCount',\n\t        value: function convertConstantToShaderCount(type) {\n\t            switch (type) {\n\t                default:\n\t                case WebGLConst.FLOAT:\n\t                case WebGLConst.INT:\n\t                case WebGLConst.BOOL:\n\t                case WebGLConst.SAMPLER_2D:\n\t                case WebGLConst.SAMPLER_CUBE:\n\t                case WebGLConst.BYTE:\n\t                case WebGLConst.UNSIGNED_BYTE:\n\t                case WebGLConst.SHORT:\n\t                case WebGLConst.UNSIGNED_SHORT:\n\t                case WebGLConst.UNSIGNED_INT:\n\t                    return 1;\n\t                case WebGLConst.FLOAT_VEC2:\n\t                case WebGLConst.INT_VEC2:\n\t                case WebGLConst.BOOL_VEC2:\n\t                case WebGLConst.FLOAT_MAT2:\n\t                    return 2;\n\t                case WebGLConst.FLOAT_VEC3:\n\t                case WebGLConst.INT_VEC3:\n\t                case WebGLConst.BOOL_VEC3:\n\t                case WebGLConst.FLOAT_MAT3:\n\t                    return 3;\n\t                case WebGLConst.FLOAT_VEC4:\n\t                case WebGLConst.INT_VEC4:\n\t                case WebGLConst.BOOL_VEC4:\n\t                case WebGLConst.FLOAT_MAT4:\n\t                    return 4;\n\t            }\n\t        }\n\t    }], [{\n\t        key: 'getInstance',\n\t        value: function getInstance() {\n\t            if (!instance) instance = new WebGL();\n\t\n\t            return instance;\n\t        }\n\t    }]);\n\t\n\t    return WebGL;\n\t}(_RenderAPI2.RenderAPI);\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Cache = undefined;\n\t\n\tvar _Color = __webpack_require__(13);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Cache for WebGL API\n\t *\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar Cache =\n\t/**\n\t * Constructor\n\t */\n\texports.Cache = function Cache() {\n\t  _classCallCheck(this, Cache);\n\t\n\t  /**\n\t   * Active vertex format\n\t   *\n\t   * @type {Color}\n\t   * @public\n\t   */\n\t  this.clearColor = new _Color.Color(1, 1, 1, 255);\n\t\n\t  /**\n\t   * Active program\n\t   *\n\t   * @type {Program}\n\t   * @public\n\t   */\n\t  this.program = null;\n\t\n\t  /**\n\t   * Active texture\n\t   *\n\t   * @type {TextureInterface|TextureCube}\n\t   * @public\n\t   */\n\t  this.texture = null;\n\t\n\t  /**\n\t   * Active vertex format\n\t   *\n\t   * @type {VertexFormat}\n\t   * @public\n\t   */\n\t  this.vertexFormat = null;\n\t\n\t  /**\n\t   * Array with lights to send to the programs\n\t   *\n\t   * @type {Array.<Light>}\n\t   * @public\n\t   */\n\t  this.lights = [];\n\t\n\t  /**\n\t   * Lights positions\n\t   *\n\t   * @type {Array.<number>}\n\t   * @public\n\t   */\n\t  this.lightsAmbient = [];\n\t\n\t  /**\n\t   * Lights positions\n\t   *\n\t   * @type {Array.<number>}\n\t   * @public\n\t   */\n\t  this.lightsDiffuse = [];\n\t\n\t  /**\n\t   * Lights data: constant, linear and quadratic data\n\t   *\n\t   * @type {Array.<number>}\n\t   * @public\n\t   */\n\t  this.lightsData = [];\n\t\n\t  /**\n\t   * Lights directions\n\t   *\n\t   * @type {Array.<number>}\n\t   * @public\n\t   */\n\t  this.lightsDirection = [];\n\t\n\t  /**\n\t   * Lights positions\n\t   *\n\t   * @type {Array.<number>}\n\t   * @public\n\t   */\n\t  this.lightsPosition = [];\n\t\n\t  /**\n\t   * Lights positions\n\t   *\n\t   * @type {Array.<number>}\n\t   * @public\n\t   */\n\t  this.lightsSpecular = [];\n\t\n\t  /**\n\t   * Lights type\n\t   *\n\t   * @type {Array.<number>}\n\t   * @public\n\t   */\n\t  this.lightsType = [];\n\t};\n\n/***/ },\n/* 45 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * A WebGL buffer\n\t *\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar BufferData =\n\t/**\n\t * Constructor\n\t */\n\texports.BufferData = function BufferData() {\n\t  _classCallCheck(this, BufferData);\n\t\n\t  /**\n\t   * Index buffer\n\t   *\n\t   * @type {WebGLBuffer}\n\t   * @public\n\t   */\n\t  this.indexBuffer = null;\n\t\n\t  /**\n\t   * Vertex buffers\n\t   *\n\t   * @type {Array.<WebGLBuffer>}\n\t   * @public\n\t   */\n\t  this.vertexBuffers = [];\n\t\n\t  /**\n\t   * Vertex array object\n\t   *\n\t   * @type {WebGLBuffer}\n\t   * @public\n\t   */\n\t  this.vao = null;\n\t};\n\t\n\t/**\n\t * WebGL instances\n\t *\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar Instances =\n\t/**\n\t * Constructor\n\t */\n\texports.Instances = function Instances() {\n\t  _classCallCheck(this, Instances);\n\t\n\t  /**\n\t   * WebGL buffers\n\t   *\n\t   * @type {Array.<BufferData>}\n\t   * @public\n\t   */\n\t  this.buffers = [];\n\t\n\t  /**\n\t   * WebGL frame buffers\n\t   *\n\t   * @type {Array.<WebGLFramebuffer>}\n\t   * @public\n\t   */\n\t  this.frameBuffers = [];\n\t\n\t  /**\n\t   * Programs/Shaders data\n\t   *\n\t   * @type {Array.<WebGLProgram>}\n\t   * @public\n\t   */\n\t  this.programs = [];\n\t\n\t  /**\n\t   * Textures data\n\t   *\n\t   * @type {Array.<WebGLTexture>}\n\t   * @public\n\t   */\n\t  this.textures = [];\n\t};\n\n/***/ },\n/* 46 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * A rendering API\n\t *\n\t * Web technologies allow Canvas and WebGL rendering\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar RenderAPI = exports.RenderAPI = function () {\n\t  /**\n\t   * Constructor\n\t   */\n\t\n\t  function RenderAPI() {\n\t    _classCallCheck(this, RenderAPI);\n\t\n\t    /**\n\t     * Camera to use for next draw calls and graphics calculs\n\t     *\n\t     * @type {Camera} \n\t     * @protected\n\t     */\n\t    this.activeCamera = null;\n\t  }\n\t\n\t  /**\n\t   * Bind light\n\t   *\n\t   * @param {Light} light A Light instance\n\t   */\n\t\n\t  _createClass(RenderAPI, [{\n\t    key: \"bindLight\",\n\t    value: function bindLight(light) {}\n\t  }, {\n\t    key: \"applyStateBlock\",\n\t\n\t    /**\n\t     * Apply the given state block\n\t     *\n\t     * @param {StateBlock} stateBlock A StateBlock instance\n\t     */\n\t    value: function applyStateBlock(stateBlock) {\n\t      this.setBlendMode(stateBlock.blendMode);\n\t      this.setDepthState(stateBlock.depthTest, stateBlock.depthWrite, stateBlock.depthFunction);\n\t      this.setFaceCulling(stateBlock.faceCulling);\n\t      this.setStencilState(stateBlock.stencilTest, stateBlock.stencilWrite);\n\t      this.setStencilFunction(stateBlock.stencilFunction, stateBlock.stencilReference, stateBlock.stencilMask);\n\t      this.setStencilOperations(stateBlock.stencilTestFail, stateBlock.stencilDepthTestFail, stateBlock.stencilSuccess);\n\t    }\n\t\n\t    /**\n\t     * Bind the given framebuffer\n\t     *\n\t     * @param {number} framebufferID An identifier, -1 to bind the default frame buffer\n\t     */\n\t\n\t  }, {\n\t    key: \"bindFrameBuffer\",\n\t    value: function bindFrameBuffer() {\n\t      var framebufferID = arguments.length <= 0 || arguments[0] === undefined ? -1 : arguments[0];\n\t    }\n\t  }, {\n\t    key: \"bindTexture\",\n\t\n\t    /**\n\t     * Bind texture to the the given slot\n\t     *\n\t     * @param {number} slot Targeted slot's index\n\t     * @param {TextureInterface} texture A Texture instance\n\t     */\n\t    value: function bindTexture(slot, texture) {}\n\t  }, {\n\t    key: \"bindTextureCube\",\n\t\n\t    /**\n\t     * Bind texture cube to the the given slot\n\t     *\n\t     * @param {number} slot Targeted slot's index\n\t     * @param {TextureCube} texture A TextureCube instance\n\t     */\n\t    value: function bindTextureCube(slot, texture) {}\n\t  }, {\n\t    key: \"clear\",\n\t\n\t    /**\n\t     * Clear the rendering target\n\t     *\n\t     * @param {Color} color A Color instance\n\t     */\n\t    value: function clear(color) {}\n\t  }, {\n\t    key: \"clearCache\",\n\t\n\t    /**\n\t     * Clear cache\n\t     */\n\t    value: function clearCache() {}\n\t  }, {\n\t    key: \"createFrameBuffer\",\n\t\n\t    /**\n\t     * Create a new frame buffer\n\t     *\n\t     * @return {number} An identifier to work with it later\n\t     */\n\t    value: function createFrameBuffer() {\n\t      return 0;\n\t    }\n\t  }, {\n\t    key: \"drawIndexedPrimitives\",\n\t\n\t    /**\n\t    * Draw indexed primitives\n\t    *\n\t    * @param {DrawingMode} drawingMode Drawing mode to use\n\t    * @param {number} firstVertexIndex Index of the first vertex to draw, useful to draw some parts\n\t    * @param {number} vertexCount Vertex count to draw\n\t    */\n\t    value: function drawIndexedPrimitives(drawingMode, firstVertexIndex, vertexCount) {}\n\t  }, {\n\t    key: \"drawPrimitives\",\n\t\n\t    /**\n\t    * Draw primitives\n\t    *\n\t    * @param {DrawingMode} drawingMode Drawing mode to use\n\t    * @param {number} firstVertexIndex Index of the first vertex to draw, useful to draw some parts\n\t    * @param {number} vertexCount Vertex count to draw\n\t    */\n\t    value: function drawPrimitives(drawingMode, firstVertexIndex, vertexCount) {}\n\t  }, {\n\t    key: \"initFrameBuffer\",\n\t\n\t    /**\n\t     * Init frame buffer: attach it to textures, depth buffer and/or a stencil buffer\n\t     *\n\t     * @param {number} framebufferID Targeted slot's index\n\t     * @param {Array.<Texture>} textures An array of Texture instances\n\t     * @param {boolean=} useDepthBuffer True to use a depth buffer\n\t     * @param {boolean=} useStencilBuffer True to use a depth buffer\n\t     */\n\t    value: function initFrameBuffer(framebufferID, textures) {\n\t      var useDepthBuffer = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];\n\t      var useStencilBuffer = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];\n\t    }\n\t  }, {\n\t    key: \"setActiveCamera\",\n\t\n\t    /**\n\t     * Set camera to use\n\t     *\n\t     * @param {Camera} camera A Camera instance\n\t     */\n\t    value: function setActiveCamera(camera) {\n\t      this.activeCamera = camera;\n\t    }\n\t\n\t    /**\n\t     * Set blend mode to apply\n\t     *\n\t     * @param {BlendMode} blendMode A BlendMode instance\n\t     */\n\t\n\t  }, {\n\t    key: \"setBlendMode\",\n\t    value: function setBlendMode(blendMode) {}\n\t  }, {\n\t    key: \"setDepthState\",\n\t\n\t    /**\n\t     * Set depth state\n\t     *\n\t     * @param {boolean} depthTest True to activate depth testing, otherwise false\n\t     * @param {boolean} writeTest True to activate depth writing otherwise false\n\t     * @param {DepthFunction} depthFunction Depth function to apply\n\t     */\n\t    value: function setDepthState(depthTest, writeTest, depthFunction) {}\n\t  }, {\n\t    key: \"setFaceCulling\",\n\t\n\t    /**\n\t     * Set face culling state.\n\t     * @param {FaceCulling} mode Face culling mode to set.\n\t     */\n\t    value: function setFaceCulling(mode) {}\n\t  }, {\n\t    key: \"setGeometry\",\n\t\n\t    /**\n\t     * Set geometry to use\n\t     *\n\t     * @param {Geometry} geometry A Geometry instance\n\t     */\n\t    value: function setGeometry(geometry) {}\n\t  }, {\n\t    key: \"setIndexBuffer\",\n\t\n\t    /**\n\t     * Set index buffer to use\n\t     *\n\t     * @param {number|WebGLBuffer} buffer A buffer instance\n\t     */\n\t    value: function setIndexBuffer(buffer) {}\n\t  }, {\n\t    key: \"setProgram\",\n\t\n\t    /**\n\t     * Set program to use\n\t     *\n\t     * @param {Program} program A Program instance to use\n\t     * @return {number} -1: an error occured, 0: everything is ok, 2 : program have been changed\n\t     */\n\t    value: function setProgram(program) {\n\t      return -1;\n\t    }\n\t  }, {\n\t    key: \"setUniform\",\n\t\n\t    /**\n\t     * Set uniform value\n\t     *\n\t     * @param {Program} program A Program instance to use\n\t     * @param {string} name Uniform's name\n\t     * @param {Type} type Type of value to send\n\t     * @param {?Array<number>|Texture|boolean|number|Float32Array} value A value\n\t     * @param {number=} groupCount When an element is an array, you can create group (like sub-array)\n\t     * @return {boolean} True if uniform has been set successfully, otherwise false\n\t     */\n\t    value: function setUniform(program, name, type, value, groupCount) {\n\t      return false;\n\t    }\n\t  }, {\n\t    key: \"setScissorTest\",\n\t\n\t    /**\n\t     * Set scissor test state\n\t     *\n\t     * @param {boolean} state True to activate scissor testing, otherwise false\n\t     * @param {number} x Position on x from the left of the screen\n\t     * @param {number} y Position on y from the bottom of the screen\n\t     * @param {number} w Width of the rectangle\n\t     * @param {number} h Height of the rectangle\n\t     */\n\t    value: function setScissorTest(state, x, y, w, h) {}\n\t  }, {\n\t    key: \"setStencilState\",\n\t\n\t    /**\n\t     * Set stencil test state\n\t     *\n\t     * @param {boolean} activate True to active stencil testing, otherwise false\n\t     * @param {number} writeMask Stencil writing value\n\t     */\n\t    value: function setStencilState(activate, writeMask) {}\n\t  }, {\n\t    key: \"setStencilFunction\",\n\t\n\t    /**\n\t     * Set stencil function to use\n\t     *\n\t     * @param {StencilFunction} stencilFunction Function to use\n\t     * @param {number} reference Reference value\n\t     * @param {number} mask Mask to use\n\t     */\n\t    value: function setStencilFunction(stencilFunction, reference, mask) {}\n\t  }, {\n\t    key: \"setStencilOperations\",\n\t\n\t    /**\n\t     * Set stencil operations to use\n\t     *\n\t     * @param {StencilOperation} sFail Function to use\n\t     * @param {StencilOperation} dpFail Reference value\n\t     * @param {StencilOperation} dppPass Mask to use\n\t     */\n\t    value: function setStencilOperations(sFail, dpFail, dppPass) {}\n\t  }, {\n\t    key: \"setVertexBuffer\",\n\t\n\t    /**\n\t     * Set vertex buffer to use\n\t     *\n\t     * Warning: You must call \"setVertexFormat\" before!\n\t     * @param {number} stream An integer representing stream to use\n\t     * @param {number|WebGLBuffer} buffer A buffer instance\n\t     */\n\t    value: function setVertexBuffer(stream, buffer) {}\n\t  }, {\n\t    key: \"setVertexFormat\",\n\t\n\t    /**\n\t     * Set vertex format to use\n\t     *\n\t     * @param {VertexFormat} format A VertexFormat instance\n\t     */\n\t    value: function setVertexFormat(format) {}\n\t  }, {\n\t    key: \"getActiveCamera\",\n\t\n\t    /**\n\t     * Get the active camera\n\t     *\n\t     * @return {Camera} A Camera instance or null\n\t     */\n\t    value: function getActiveCamera() {\n\t      return this.activeCamera;\n\t    }\n\t  }]);\n\t\n\t  return RenderAPI;\n\t}();\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.TextureCube = undefined;\n\t\n\tvar _ContextResource2 = __webpack_require__(21);\n\t\n\tvar _Image = __webpack_require__(36);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * A texture cube to use with Sky-boxes\n\t *\n\t * @extends {ContextResource}\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar TextureCube = exports.TextureCube = function (_ContextResource) {\n\t    _inherits(TextureCube, _ContextResource);\n\t\n\t    /**\n\t     * Constructor\n\t     *\n\t     * @param {Array.<string>} paths An array with the image's path for the right cube's face,\n\t     * Paths must be provided in the given order: up, down, left, right, back, front\n\t     */\n\t\n\t    function TextureCube() {\n\t        var paths = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n\t\n\t        _classCallCheck(this, TextureCube);\n\t\n\t        /**\n\t         * Images (one per face)\n\t         *\n\t         * @type {Array.<Image>}\n\t         * @private\n\t         */\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(TextureCube).call(this));\n\t\n\t        _this.images = [];\n\t\n\t        if (paths.length) _this.loadFromFiles(paths);\n\t        return _this;\n\t    }\n\t\n\t    /**\n\t     * Load images from the given paths\n\t     *\n\t     * @param {Array.<string>} paths An array with the image's path for the right cube's face,\n\t     * Paths must be provided in the given order: up, down, left, right, back, front\n\t     */\n\t\n\t    _createClass(TextureCube, [{\n\t        key: 'loadFromFiles',\n\t        value: function loadFromFiles(paths) {\n\t            for (var i in paths) {\n\t                var image = new _Image.Img();\n\t                image.loadFromFile(paths[i]);\n\t                this.images[i] = image;\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Get images\n\t         *\n\t         * @return {Array.<Image>} An array with images instances\n\t         */\n\t\n\t    }, {\n\t        key: 'getImages',\n\t        value: function getImages() {\n\t            return this.images;\n\t        }\n\t\n\t        /**\n\t         * Check if texture cube is ready to be use\n\t         *\n\t         * @return {boolean} True if everything is ready\n\t         */\n\t\n\t    }, {\n\t        key: 'isReady',\n\t        value: function isReady() {\n\t            if (this.images.length === 0) return false;\n\t\n\t            for (var i = 0; i < this.images.length; i++) {\n\t                if (!this.images[i].isReady()) return false;\n\t            }return true;\n\t        }\n\t    }]);\n\t\n\t    return TextureCube;\n\t}(_ContextResource2.ContextResource);\n\t\n\t/**\n\t* Faces\n\t *\n\t* @enum {number}\n\t*/\n\t\n\tTextureCube.Face = { Up: 0, Down: 1, Left: 2, Right: 3, Back: 4, Front: 5 };\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TextureVideo = undefined;\n\t\n\tvar _TextureInterface2 = __webpack_require__(35);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * A texture to display video\n\t *\n\t * @extends {TextureInterface}\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar TextureVideo = exports.TextureVideo = function (_TextureInterface) {\n\t  _inherits(TextureVideo, _TextureInterface);\n\t\n\t  /**\n\t   * Constructor\n\t   */\n\t\n\t  function TextureVideo() {\n\t    _classCallCheck(this, TextureVideo);\n\t\n\t    /**\n\t     * Video.\n\t     * @type {HTMLVideoElement}\n\t     * @private\n\t     */\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(TextureVideo).call(this));\n\t\n\t    _this.data = document.createElement('video');\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Load the video from a file\n\t   *\n\t   * @param {string} path Path to the video file\n\t   */\n\t\n\t  _createClass(TextureVideo, [{\n\t    key: 'loadFromFile',\n\t    value: function loadFromFile(path) {\n\t      var _this2 = this;\n\t\n\t      // Detect when video is ready\n\t      this.data.addEventListener('canplaythrough', function () {\n\t        _this2.ready = true;\n\t      }, true);\n\t\n\t      // Load\n\t      this.data.preload = 'auto';\n\t      this.data.src = path;\n\t    }\n\t  }, {\n\t    key: 'pause',\n\t\n\t    /**\n\t     * Pause the video\n\t     */\n\t    value: function pause() {\n\t      this.data.pause();\n\t    }\n\t\n\t    /**\n\t     * Play the video\n\t     */\n\t\n\t  }, {\n\t    key: 'play',\n\t    value: function play() {\n\t      this.data.play();\n\t    }\n\t\n\t    /**\n\t     * Get video's duration\n\t     *\n\t     * @return {number} The duration property returns the length of the current audio/video, in seconds\n\t     */\n\t\n\t  }, {\n\t    key: 'getDuration',\n\t    value: function getDuration() {\n\t      return this.data.duration;\n\t    }\n\t\n\t    /**\n\t     * Get video's data\n\t     *\n\t     * @return {HTMLVideoElement} The HTML video element\n\t     */\n\t\n\t  }, {\n\t    key: 'getVideoData',\n\t    value: function getVideoData() {\n\t      return this.data;\n\t    }\n\t  }]);\n\t\n\t  return TextureVideo;\n\t}(_TextureInterface2.TextureInterface);\n\n/***/ },\n/* 49 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar DEPTH_BUFFER_BIT = exports.DEPTH_BUFFER_BIT = 0x00000100;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar STENCIL_BUFFER_BIT = exports.STENCIL_BUFFER_BIT = 0x00000400;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar COLOR_BUFFER_BIT = exports.COLOR_BUFFER_BIT = 0x00004000;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar POINTS = exports.POINTS = 0x0000;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar LINES = exports.LINES = 0x0001;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar LINE_LOOP = exports.LINE_LOOP = 0x0002;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar LINE_STRIP = exports.LINE_STRIP = 0x0003;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TRIANGLES = exports.TRIANGLES = 0x0004;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TRIANGLE_STRIP = exports.TRIANGLE_STRIP = 0x0005;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TRIANGLE_FAN = exports.TRIANGLE_FAN = 0x0006;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar ZERO = exports.ZERO = 0;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar ONE = exports.ONE = 1;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar SRC_COLOR = exports.SRC_COLOR = 0x0300;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar ONE_MINUS_SRC_COLOR = exports.ONE_MINUS_SRC_COLOR = 0x0301;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar SRC_ALPHA = exports.SRC_ALPHA = 0x0302;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar ONE_MINUS_SRC_ALPHA = exports.ONE_MINUS_SRC_ALPHA = 0x0303;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar DST_ALPHA = exports.DST_ALPHA = 0x0304;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar ONE_MINUS_DST_ALPHA = exports.ONE_MINUS_DST_ALPHA = 0x0305;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar DST_COLOR = exports.DST_COLOR = 0x0306;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar ONE_MINUS_DST_COLOR = exports.ONE_MINUS_DST_COLOR = 0x0307;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar SRC_ALPHA_SATURATE = exports.SRC_ALPHA_SATURATE = 0x0308;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FUNC_ADD = exports.FUNC_ADD = 0x8006;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar BLEND_EQUATION = exports.BLEND_EQUATION = 0x8009;\n\t\n\t/**\n\t * Same as BLEND_EQUATION\n\t * @const\n\t * @type {number}\n\t */\n\tvar BLEND_EQUATION_RGB = exports.BLEND_EQUATION_RGB = 0x8009;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar BLEND_EQUATION_ALPHA = exports.BLEND_EQUATION_ALPHA = 0x883D;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FUNC_SUBTRACT = exports.FUNC_SUBTRACT = 0x800A;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FUNC_REVERSE_SUBTRACT = exports.FUNC_REVERSE_SUBTRACT = 0x800B;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar BLEND_DST_RGB = exports.BLEND_DST_RGB = 0x80C8;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar BLEND_SRC_RGB = exports.BLEND_SRC_RGB = 0x80C9;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar BLEND_DST_ALPHA = exports.BLEND_DST_ALPHA = 0x80CA;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar BLEND_SRC_ALPHA = exports.BLEND_SRC_ALPHA = 0x80CB;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar CONSTANT_COLOR = exports.CONSTANT_COLOR = 0x8001;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar ONE_MINUS_CONSTANT_COLOR = exports.ONE_MINUS_CONSTANT_COLOR = 0x8002;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar CONSTANT_ALPHA = exports.CONSTANT_ALPHA = 0x8003;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar ONE_MINUS_CONSTANT_ALPHA = exports.ONE_MINUS_CONSTANT_ALPHA = 0x8004;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar BLEND_COLOR = exports.BLEND_COLOR = 0x8005;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar ARRAY_BUFFER = exports.ARRAY_BUFFER = 0x8892;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar ELEMENT_ARRAY_BUFFER = exports.ELEMENT_ARRAY_BUFFER = 0x8893;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar ARRAY_BUFFER_BINDING = exports.ARRAY_BUFFER_BINDING = 0x8894;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar ELEMENT_ARRAY_BUFFER_BINDING = exports.ELEMENT_ARRAY_BUFFER_BINDING = 0x8895;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar STREAM_DRAW = exports.STREAM_DRAW = 0x88E0;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar STATIC_DRAW = exports.STATIC_DRAW = 0x88E4;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar DYNAMIC_DRAW = exports.DYNAMIC_DRAW = 0x88E8;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar BUFFER_SIZE = exports.BUFFER_SIZE = 0x8764;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar BUFFER_USAGE = exports.BUFFER_USAGE = 0x8765;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar CURRENT_VERTEX_ATTRIB = exports.CURRENT_VERTEX_ATTRIB = 0x8626;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FRONT = exports.FRONT = 0x0404;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar BACK = exports.BACK = 0x0405;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FRONT_AND_BACK = exports.FRONT_AND_BACK = 0x0408;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar CULL_FACE = exports.CULL_FACE = 0x0B44;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar BLEND = exports.BLEND = 0x0BE2;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar DITHER = exports.DITHER = 0x0BD0;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar STENCIL_TEST = exports.STENCIL_TEST = 0x0B90;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar DEPTH_TEST = exports.DEPTH_TEST = 0x0B71;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar SCISSOR_TEST = exports.SCISSOR_TEST = 0x0C11;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar POLYGON_OFFSET_FILL = exports.POLYGON_OFFSET_FILL = 0x8037;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar SAMPLE_ALPHA_TO_COVERAGE = exports.SAMPLE_ALPHA_TO_COVERAGE = 0x809E;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar SAMPLE_COVERAGE = exports.SAMPLE_COVERAGE = 0x80A0;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar NO_ERROR = exports.NO_ERROR = 0;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar INVALID_ENUM = exports.INVALID_ENUM = 0x0500;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar INVALID_VALUE = exports.INVALID_VALUE = 0x0501;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar INVALID_OPERATION = exports.INVALID_OPERATION = 0x0502;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar OUT_OF_MEMORY = exports.OUT_OF_MEMORY = 0x0505;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar CW = exports.CW = 0x0900;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar CCW = exports.CCW = 0x0901;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar LINE_WIDTH = exports.LINE_WIDTH = 0x0B21;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar ALIASED_POINT_SIZE_RANGE = exports.ALIASED_POINT_SIZE_RANGE = 0x846D;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar ALIASED_LINE_WIDTH_RANGE = exports.ALIASED_LINE_WIDTH_RANGE = 0x846E;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar CULL_FACE_MODE = exports.CULL_FACE_MODE = 0x0B45;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FRONT_FACE = exports.FRONT_FACE = 0x0B46;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar DEPTH_RANGE = exports.DEPTH_RANGE = 0x0B70;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar DEPTH_WRITEMASK = exports.DEPTH_WRITEMASK = 0x0B72;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar DEPTH_CLEAR_VALUE = exports.DEPTH_CLEAR_VALUE = 0x0B73;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar DEPTH_FUNC = exports.DEPTH_FUNC = 0x0B74;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar STENCIL_CLEAR_VALUE = exports.STENCIL_CLEAR_VALUE = 0x0B91;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar STENCIL_FUNC = exports.STENCIL_FUNC = 0x0B92;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar STENCIL_FAIL = exports.STENCIL_FAIL = 0x0B94;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar STENCIL_PASS_DEPTH_FAIL = exports.STENCIL_PASS_DEPTH_FAIL = 0x0B95;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar STENCIL_PASS_DEPTH_PASS = exports.STENCIL_PASS_DEPTH_PASS = 0x0B96;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar STENCIL_REF = exports.STENCIL_REF = 0x0B97;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar STENCIL_VALUE_MASK = exports.STENCIL_VALUE_MASK = 0x0B93;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar STENCIL_WRITEMASK = exports.STENCIL_WRITEMASK = 0x0B98;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar STENCIL_BACK_FUNC = exports.STENCIL_BACK_FUNC = 0x8800;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar STENCIL_BACK_FAIL = exports.STENCIL_BACK_FAIL = 0x8801;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar STENCIL_BACK_PASS_DEPTH_FAIL = exports.STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar STENCIL_BACK_PASS_DEPTH_PASS = exports.STENCIL_BACK_PASS_DEPTH_PASS = 0x8803;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar STENCIL_BACK_REF = exports.STENCIL_BACK_REF = 0x8CA3;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar STENCIL_BACK_VALUE_MASK = exports.STENCIL_BACK_VALUE_MASK = 0x8CA4;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar STENCIL_BACK_WRITEMASK = exports.STENCIL_BACK_WRITEMASK = 0x8CA5;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar VIEWPORT = exports.VIEWPORT = 0x0BA2;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar SCISSOR_BOX = exports.SCISSOR_BOX = 0x0C10;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar COLOR_CLEAR_VALUE = exports.COLOR_CLEAR_VALUE = 0x0C22;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar COLOR_WRITEMASK = exports.COLOR_WRITEMASK = 0x0C23;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar UNPACK_ALIGNMENT = exports.UNPACK_ALIGNMENT = 0x0CF5;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar PACK_ALIGNMENT = exports.PACK_ALIGNMENT = 0x0D05;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar MAX_TEXTURE_SIZE = exports.MAX_TEXTURE_SIZE = 0x0D33;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar MAX_VIEWPORT_DIMS = exports.MAX_VIEWPORT_DIMS = 0x0D3A;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar SUBPIXEL_BITS = exports.SUBPIXEL_BITS = 0x0D50;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar RED_BITS = exports.RED_BITS = 0x0D52;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar GREEN_BITS = exports.GREEN_BITS = 0x0D53;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar BLUE_BITS = exports.BLUE_BITS = 0x0D54;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar ALPHA_BITS = exports.ALPHA_BITS = 0x0D55;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar DEPTH_BITS = exports.DEPTH_BITS = 0x0D56;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar STENCIL_BITS = exports.STENCIL_BITS = 0x0D57;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar POLYGON_OFFSET_UNITS = exports.POLYGON_OFFSET_UNITS = 0x2A00;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar POLYGON_OFFSET_FACTOR = exports.POLYGON_OFFSET_FACTOR = 0x8038;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE_BINDING_2D = exports.TEXTURE_BINDING_2D = 0x8069;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar SAMPLE_BUFFERS = exports.SAMPLE_BUFFERS = 0x80A8;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar SAMPLES = exports.SAMPLES = 0x80A9;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar SAMPLE_COVERAGE_VALUE = exports.SAMPLE_COVERAGE_VALUE = 0x80AA;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar SAMPLE_COVERAGE_INVERT = exports.SAMPLE_COVERAGE_INVERT = 0x80AB;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar COMPRESSED_TEXTURE_FORMATS = exports.COMPRESSED_TEXTURE_FORMATS = 0x86A3;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar DONT_CARE = exports.DONT_CARE = 0x1100;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FASTEST = exports.FASTEST = 0x1101;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar NICEST = exports.NICEST = 0x1102;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar GENERATE_MIPMAP_HINT = exports.GENERATE_MIPMAP_HINT = 0x8192;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar BYTE = exports.BYTE = 0x1400;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar UNSIGNED_BYTE = exports.UNSIGNED_BYTE = 0x1401;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar SHORT = exports.SHORT = 0x1402;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar UNSIGNED_SHORT = exports.UNSIGNED_SHORT = 0x1403;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar INT = exports.INT = 0x1404;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar UNSIGNED_INT = exports.UNSIGNED_INT = 0x1405;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FLOAT = exports.FLOAT = 0x1406;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar DEPTH_COMPONENT = exports.DEPTH_COMPONENT = 0x1902;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar ALPHA = exports.ALPHA = 0x1906;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar RGB = exports.RGB = 0x1907;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar RGBA = exports.RGBA = 0x1908;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar LUMINANCE = exports.LUMINANCE = 0x1909;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar LUMINANCE_ALPHA = exports.LUMINANCE_ALPHA = 0x190A;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar UNSIGNED_SHORT_4_4_4_4 = exports.UNSIGNED_SHORT_4_4_4_4 = 0x8033;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar UNSIGNED_SHORT_5_5_5_1 = exports.UNSIGNED_SHORT_5_5_5_1 = 0x8034;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar UNSIGNED_SHORT_5_6_5 = exports.UNSIGNED_SHORT_5_6_5 = 0x8363;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FRAGMENT_SHADER = exports.FRAGMENT_SHADER = 0x8B30;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar VERTEX_SHADER = exports.VERTEX_SHADER = 0x8B31;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar MAX_VERTEX_ATTRIBS = exports.MAX_VERTEX_ATTRIBS = 0x8869;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar MAX_VERTEX_UNIFORM_VECTORS = exports.MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar MAX_VARYING_VECTORS = exports.MAX_VARYING_VECTORS = 0x8DFC;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar MAX_COMBINED_TEXTURE_IMAGE_UNITS = exports.MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar MAX_VERTEX_TEXTURE_IMAGE_UNITS = exports.MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar MAX_TEXTURE_IMAGE_UNITS = exports.MAX_TEXTURE_IMAGE_UNITS = 0x8872;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar MAX_FRAGMENT_UNIFORM_VECTORS = exports.MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar SHADER_TYPE = exports.SHADER_TYPE = 0x8B4F;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar DELETE_STATUS = exports.DELETE_STATUS = 0x8B80;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar LINK_STATUS = exports.LINK_STATUS = 0x8B82;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar VALIDATE_STATUS = exports.VALIDATE_STATUS = 0x8B83;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar ATTACHED_SHADERS = exports.ATTACHED_SHADERS = 0x8B85;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar ACTIVE_UNIFORMS = exports.ACTIVE_UNIFORMS = 0x8B86;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar ACTIVE_ATTRIBUTES = exports.ACTIVE_ATTRIBUTES = 0x8B89;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar SHADING_LANGUAGE_VERSION = exports.SHADING_LANGUAGE_VERSION = 0x8B8C;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar CURRENT_PROGRAM = exports.CURRENT_PROGRAM = 0x8B8D;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar NEVER = exports.NEVER = 0x0200;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar LESS = exports.LESS = 0x0201;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar EQUAL = exports.EQUAL = 0x0202;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar LEQUAL = exports.LEQUAL = 0x0203;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar GREATER = exports.GREATER = 0x0204;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar NOTEQUAL = exports.NOTEQUAL = 0x0205;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar GEQUAL = exports.GEQUAL = 0x0206;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar ALWAYS = exports.ALWAYS = 0x0207;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar KEEP = exports.KEEP = 0x1E00;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar REPLACE = exports.REPLACE = 0x1E01;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar INCR = exports.INCR = 0x1E02;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar DECR = exports.DECR = 0x1E03;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar INVERT = exports.INVERT = 0x150A;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar INCR_WRAP = exports.INCR_WRAP = 0x8507;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar DECR_WRAP = exports.DECR_WRAP = 0x8508;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar VENDOR = exports.VENDOR = 0x1F00;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar RENDERER = exports.RENDERER = 0x1F01;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar VERSION = exports.VERSION = 0x1F02;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar NEAREST = exports.NEAREST = 0x2600;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar LINEAR = exports.LINEAR = 0x2601;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar NEAREST_MIPMAP_NEAREST = exports.NEAREST_MIPMAP_NEAREST = 0x2700;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar LINEAR_MIPMAP_NEAREST = exports.LINEAR_MIPMAP_NEAREST = 0x2701;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar NEAREST_MIPMAP_LINEAR = exports.NEAREST_MIPMAP_LINEAR = 0x2702;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar LINEAR_MIPMAP_LINEAR = exports.LINEAR_MIPMAP_LINEAR = 0x2703;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE_MAG_FILTER = exports.TEXTURE_MAG_FILTER = 0x2800;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE_MIN_FILTER = exports.TEXTURE_MIN_FILTER = 0x2801;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE_WRAP_S = exports.TEXTURE_WRAP_S = 0x2802;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE_WRAP_T = exports.TEXTURE_WRAP_T = 0x2803;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE_2D = exports.TEXTURE_2D = 0x0DE1;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE = exports.TEXTURE = 0x1702;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE_CUBE_MAP = exports.TEXTURE_CUBE_MAP = 0x8513;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE_BINDING_CUBE_MAP = exports.TEXTURE_BINDING_CUBE_MAP = 0x8514;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE_CUBE_MAP_POSITIVE_X = exports.TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE_CUBE_MAP_NEGATIVE_X = exports.TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE_CUBE_MAP_POSITIVE_Y = exports.TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE_CUBE_MAP_NEGATIVE_Y = exports.TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE_CUBE_MAP_POSITIVE_Z = exports.TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE_CUBE_MAP_NEGATIVE_Z = exports.TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar MAX_CUBE_MAP_TEXTURE_SIZE = exports.MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE0 = exports.TEXTURE0 = 0x84C0;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE1 = exports.TEXTURE1 = 0x84C1;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE2 = exports.TEXTURE2 = 0x84C2;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE3 = exports.TEXTURE3 = 0x84C3;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE4 = exports.TEXTURE4 = 0x84C4;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE5 = exports.TEXTURE5 = 0x84C5;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE6 = exports.TEXTURE6 = 0x84C6;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE7 = exports.TEXTURE7 = 0x84C7;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE8 = exports.TEXTURE8 = 0x84C8;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE9 = exports.TEXTURE9 = 0x84C9;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE10 = exports.TEXTURE10 = 0x84CA;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE11 = exports.TEXTURE11 = 0x84CB;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE12 = exports.TEXTURE12 = 0x84CC;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE13 = exports.TEXTURE13 = 0x84CD;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE14 = exports.TEXTURE14 = 0x84CE;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE15 = exports.TEXTURE15 = 0x84CF;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE16 = exports.TEXTURE16 = 0x84D0;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE17 = exports.TEXTURE17 = 0x84D1;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE18 = exports.TEXTURE18 = 0x84D2;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE19 = exports.TEXTURE19 = 0x84D3;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE20 = exports.TEXTURE20 = 0x84D4;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE21 = exports.TEXTURE21 = 0x84D5;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE22 = exports.TEXTURE22 = 0x84D6;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE23 = exports.TEXTURE23 = 0x84D7;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE24 = exports.TEXTURE24 = 0x84D8;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE25 = exports.TEXTURE25 = 0x84D9;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE26 = exports.TEXTURE26 = 0x84DA;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE27 = exports.TEXTURE27 = 0x84DB;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE28 = exports.TEXTURE28 = 0x84DC;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE29 = exports.TEXTURE29 = 0x84DD;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE30 = exports.TEXTURE30 = 0x84DE;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE31 = exports.TEXTURE31 = 0x84DF;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar ACTIVE_TEXTURE = exports.ACTIVE_TEXTURE = 0x84E0;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar REPEAT = exports.REPEAT = 0x2901;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar CLAMP_TO_EDGE = exports.CLAMP_TO_EDGE = 0x812F;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar MIRRORED_REPEAT = exports.MIRRORED_REPEAT = 0x8370;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FLOAT_VEC2 = exports.FLOAT_VEC2 = 0x8B50;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FLOAT_VEC3 = exports.FLOAT_VEC3 = 0x8B51;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FLOAT_VEC4 = exports.FLOAT_VEC4 = 0x8B52;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar INT_VEC2 = exports.INT_VEC2 = 0x8B53;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar INT_VEC3 = exports.INT_VEC3 = 0x8B54;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar INT_VEC4 = exports.INT_VEC4 = 0x8B55;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar BOOL = exports.BOOL = 0x8B56;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar BOOL_VEC2 = exports.BOOL_VEC2 = 0x8B57;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar BOOL_VEC3 = exports.BOOL_VEC3 = 0x8B58;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar BOOL_VEC4 = exports.BOOL_VEC4 = 0x8B59;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FLOAT_MAT2 = exports.FLOAT_MAT2 = 0x8B5A;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FLOAT_MAT3 = exports.FLOAT_MAT3 = 0x8B5B;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FLOAT_MAT4 = exports.FLOAT_MAT4 = 0x8B5C;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar SAMPLER_2D = exports.SAMPLER_2D = 0x8B5E;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar SAMPLER_CUBE = exports.SAMPLER_CUBE = 0x8B60;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar VERTEX_ATTRIB_ARRAY_ENABLED = exports.VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar VERTEX_ATTRIB_ARRAY_SIZE = exports.VERTEX_ATTRIB_ARRAY_SIZE = 0x8623;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar VERTEX_ATTRIB_ARRAY_STRIDE = exports.VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar VERTEX_ATTRIB_ARRAY_TYPE = exports.VERTEX_ATTRIB_ARRAY_TYPE = 0x8625;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar VERTEX_ATTRIB_ARRAY_NORMALIZED = exports.VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar VERTEX_ATTRIB_ARRAY_POINTER = exports.VERTEX_ATTRIB_ARRAY_POINTER = 0x8645;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = exports.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar COMPILE_STATUS = exports.COMPILE_STATUS = 0x8B81;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar LOW_FLOAT = exports.LOW_FLOAT = 0x8DF0;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar MEDIUM_FLOAT = exports.MEDIUM_FLOAT = 0x8DF1;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar HIGH_FLOAT = exports.HIGH_FLOAT = 0x8DF2;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar LOW_INT = exports.LOW_INT = 0x8DF3;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar MEDIUM_INT = exports.MEDIUM_INT = 0x8DF4;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar HIGH_INT = exports.HIGH_INT = 0x8DF5;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FRAMEBUFFER = exports.FRAMEBUFFER = 0x8D40;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar RENDERBUFFER = exports.RENDERBUFFER = 0x8D41;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar RGBA4 = exports.RGBA4 = 0x8056;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar RGB5_A1 = exports.RGB5_A1 = 0x8057;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar RGB565 = exports.RGB565 = 0x8D62;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar DEPTH_COMPONENT16 = exports.DEPTH_COMPONENT16 = 0x81A5;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar STENCIL_INDEX = exports.STENCIL_INDEX = 0x1901;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar STENCIL_INDEX8 = exports.STENCIL_INDEX8 = 0x8D48;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar DEPTH_STENCIL = exports.DEPTH_STENCIL = 0x84F9;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar RENDERBUFFER_WIDTH = exports.RENDERBUFFER_WIDTH = 0x8D42;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar RENDERBUFFER_HEIGHT = exports.RENDERBUFFER_HEIGHT = 0x8D43;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar RENDERBUFFER_INTERNAL_FORMAT = exports.RENDERBUFFER_INTERNAL_FORMAT = 0x8D44;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar RENDERBUFFER_RED_SIZE = exports.RENDERBUFFER_RED_SIZE = 0x8D50;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar RENDERBUFFER_GREEN_SIZE = exports.RENDERBUFFER_GREEN_SIZE = 0x8D51;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar RENDERBUFFER_BLUE_SIZE = exports.RENDERBUFFER_BLUE_SIZE = 0x8D52;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar RENDERBUFFER_ALPHA_SIZE = exports.RENDERBUFFER_ALPHA_SIZE = 0x8D53;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar RENDERBUFFER_DEPTH_SIZE = exports.RENDERBUFFER_DEPTH_SIZE = 0x8D54;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar RENDERBUFFER_STENCIL_SIZE = exports.RENDERBUFFER_STENCIL_SIZE = 0x8D55;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = exports.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = exports.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = exports.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = exports.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar COLOR_ATTACHMENT0 = exports.COLOR_ATTACHMENT0 = 0x8CE0;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar DEPTH_ATTACHMENT = exports.DEPTH_ATTACHMENT = 0x8D00;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar STENCIL_ATTACHMENT = exports.STENCIL_ATTACHMENT = 0x8D20;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar DEPTH_STENCIL_ATTACHMENT = exports.DEPTH_STENCIL_ATTACHMENT = 0x821A;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar NONE = exports.NONE = 0;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FRAMEBUFFER_COMPLETE = exports.FRAMEBUFFER_COMPLETE = 0x8CD5;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FRAMEBUFFER_INCOMPLETE_ATTACHMENT = exports.FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = exports.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FRAMEBUFFER_INCOMPLETE_DIMENSIONS = exports.FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FRAMEBUFFER_UNSUPPORTED = exports.FRAMEBUFFER_UNSUPPORTED = 0x8CDD;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar FRAMEBUFFER_BINDING = exports.FRAMEBUFFER_BINDING = 0x8CA6;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar RENDERBUFFER_BINDING = exports.RENDERBUFFER_BINDING = 0x8CA7;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar MAX_RENDERBUFFER_SIZE = exports.MAX_RENDERBUFFER_SIZE = 0x84E8;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar INVALID_FRAMEBUFFER_OPERATION = exports.INVALID_FRAMEBUFFER_OPERATION = 0x0506;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar UNPACK_FLIP_Y_WEBGL = exports.UNPACK_FLIP_Y_WEBGL = 0x9240;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar UNPACK_PREMULTIPLY_ALPHA_WEBGL = exports.UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar CONTEXT_LOST_WEBGL = exports.CONTEXT_LOST_WEBGL = 0x9242;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar UNPACK_COLORSPACE_CONVERSION_WEBGL = exports.UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;\n\t\n\t/**\n\t * @const\n\t * @type {number}\n\t */\n\tvar BROWSER_DEFAULT_WEBGL = exports.BROWSER_DEFAULT_WEBGL = 0x9244;\n\t\n\t/**\n\t * From the OES_texture_half_float extension.\n\t * http://www.khronos.org/registry/webgl/extensions/OES_texture_half_float/\n\t * @const\n\t * @type {number}\n\t */\n\tvar HALF_FLOAT_OES = exports.HALF_FLOAT_OES = 0x8D61;\n\t\n\t/**\n\t * From the OES_standard_derivatives extension.\n\t * http://www.khronos.org/registry/webgl/extensions/OES_standard_derivatives/\n\t * @const\n\t * @type {number}\n\t */\n\tvar FRAGMENT_SHADER_DERIVATIVE_HINT_OES = exports.FRAGMENT_SHADER_DERIVATIVE_HINT_OES = 0x8B8B;\n\t\n\t/**\n\t * From the OES_vertex_array_object extension.\n\t * http://www.khronos.org/registry/webgl/extensions/OES_vertex_array_object/\n\t * @const\n\t * @type {number}\n\t */\n\tvar VERTEX_ARRAY_BINDING_OES = exports.VERTEX_ARRAY_BINDING_OES = 0x85B5;\n\t\n\t/**\n\t * From the WEBGL_debug_renderer_info extension.\n\t * http://www.khronos.org/registry/webgl/extensions/WEBGL_debug_renderer_info/\n\t * @const\n\t * @type {number}\n\t */\n\tvar UNMASKED_VENDOR_WEBGL = exports.UNMASKED_VENDOR_WEBGL = 0x9245;\n\t\n\t/**\n\t * From the WEBGL_debug_renderer_info extension.\n\t * http://www.khronos.org/registry/webgl/extensions/WEBGL_debug_renderer_info/\n\t * @const\n\t * @type {number}\n\t */\n\tvar UNMASKED_RENDERER_WEBGL = exports.UNMASKED_RENDERER_WEBGL = 0x9246;\n\t\n\t/**\n\t * From the WEBGL_compressed_texture_s3tc extension.\n\t * http://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\n\t * @const\n\t * @type {number}\n\t */\n\tvar COMPRESSED_RGB_S3TC_DXT1_EXT = exports.COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0;\n\t\n\t/**\n\t * From the WEBGL_compressed_texture_s3tc extension.\n\t * http://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\n\t * @const\n\t * @type {number}\n\t */\n\tvar COMPRESSED_RGBA_S3TC_DXT1_EXT = exports.COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1;\n\t\n\t/**\n\t * From the WEBGL_compressed_texture_s3tc extension.\n\t * http://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\n\t * @const\n\t * @type {number}\n\t */\n\tvar COMPRESSED_RGBA_S3TC_DXT3_EXT = exports.COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2;\n\t\n\t/**\n\t * From the WEBGL_compressed_texture_s3tc extension.\n\t * http://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\n\t * @const\n\t * @type {number}\n\t */\n\tvar COMPRESSED_RGBA_S3TC_DXT5_EXT = exports.COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3;\n\t\n\t/**\n\t * From the EXT_texture_filter_anisotropic extension.\n\t * http://www.khronos.org/registry/webgl/extensions/EXT_texture_filter_anisotropic/\n\t * @const\n\t * @type {number}\n\t */\n\tvar TEXTURE_MAX_ANISOTROPY_EXT = exports.TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE;\n\t\n\t/**\n\t * From the EXT_texture_filter_anisotropic extension.\n\t * http://www.khronos.org/registry/webgl/extensions/EXT_texture_filter_anisotropic/\n\t * @const\n\t * @type {number}\n\t */\n\tvar MAX_TEXTURE_MAX_ANISOTROPY_EXT = exports.MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF;\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Sprite = undefined;\n\t\n\tvar _BlendMode = __webpack_require__(1);\n\t\n\tvar _Color = __webpack_require__(13);\n\t\n\tvar _Drawable2 = __webpack_require__(27);\n\t\n\tvar _SpriteCommand = __webpack_require__(51);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * A sprite\n\t *\n\t * @description Draw 2D textured element efficiently.\n\t * @extends {Drawable}\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar Sprite = exports.Sprite = function (_Drawable) {\n\t  _inherits(Sprite, _Drawable);\n\t\n\t  /**\n\t   * Constructor\n\t   */\n\t\n\t  function Sprite() {\n\t    _classCallCheck(this, Sprite);\n\t\n\t    /**\n\t     * Blend mode\n\t     *\n\t     * @type {BlendMode}\n\t     * @private\n\t     */\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Sprite).call(this));\n\t\n\t    _this.blendMode = new _BlendMode.BlendMode(_BlendMode.BlendMode.Mode.Alpha);\n\t\n\t    /**\n\t     * Color\n\t     *\n\t     * @type {Color}\n\t     * @private\n\t     */\n\t    _this.color = new _Color.Color(255, 255, 255, 255);\n\t\n\t    /**\n\t     * Texture's area to show.\n\t     * - Two first values represents x and y offset\n\t     * - Two last values represents width and height (relative to offset)\n\t     *\n\t     * @type {Array.<number>}\n\t     * @private\n\t     */\n\t    _this.rect = [0.0, 0.0, 0.0, 0.0];\n\t\n\t    /**\n\t     * Size\n\t     *\n\t     * @type {Array.<number>}\n\t     * @private\n\t     */\n\t    _this.size = [0.5, 0.5];\n\t\n\t    /**\n\t     * Program\n\t     *\n\t     * @type {Program}\n\t     * @private\n\t     */\n\t    _this.customProgram = null;\n\t\n\t    /**\n\t     * Texture\n\t     *\n\t     * @type {TextureInterface}\n\t     * @private\n\t     */\n\t    _this.texture = null;\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Set blend mode to use\n\t   *\n\t   * @param {BlendMode} blendMode A BlendMode instance\n\t   */\n\t\n\t  _createClass(Sprite, [{\n\t    key: 'setBlendMode',\n\t    value: function setBlendMode(blendMode) {\n\t      this.blendMode = blendMode;\n\t    }\n\t\n\t    /**\n\t     * Set program to use\n\t     *\n\t     * @param {number} r Red color in the range [0-255]\n\t     * @param {number} g Green color in the range [0-255]\n\t     * @param {number} b Blue color in the range [0-255]\n\t     * @param {number=} a Opacity in the range [0-255]\n\t     */\n\t\n\t  }, {\n\t    key: 'setColor',\n\t    value: function setColor(r, g, b, a) {\n\t      this.color.set(r, g, b, a);\n\t    }\n\t\n\t    /**\n\t     * Draw the element\n\t     *\n\t     * @param {RenderTarget} renderTarget Renderer who called this method\n\t     */\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw(renderTarget) {\n\t      if (this.texture) renderTarget.getActiveTask().addCommand(new _SpriteCommand.SpriteCommand(this));\n\t    }\n\t\n\t    /**\n\t     * Set program to use\n\t     *\n\t     * @param {Program} program A Program instance\n\t     */\n\t\n\t  }, {\n\t    key: 'setCustomProgram',\n\t    value: function setCustomProgram(program) {\n\t      this.customProgram = program;\n\t    }\n\t\n\t    /**\n\t     * Set sprite's size\n\t     *\n\t     * @param {number} x Size on X\n\t     * @param {number} y Size on Y\n\t     */\n\t\n\t  }, {\n\t    key: 'setSize',\n\t    value: function setSize(x, y) {\n\t      this.size[0] = x;\n\t      this.size[1] = y;\n\t    }\n\t\n\t    /**\n\t     * Set texture to use\n\t     *\n\t     * @param {TextureInterface} texture Can be a Texture or a TextureVideo\n\t     */\n\t\n\t  }, {\n\t    key: 'setTexture',\n\t    value: function setTexture(texture) {\n\t      this.texture = texture;\n\t    }\n\t\n\t    /**\n\t     * Set texture's area to show\n\t     *\n\t     * @param {number} x Start position on x\n\t     * @param {number} y Start position on y\n\t     * @param {number} w Area's width\n\t     * @param {number} h Area's height\n\t     */\n\t\n\t  }, {\n\t    key: 'setTextureRect',\n\t    value: function setTextureRect(x, y, w, h) {\n\t      this.rect = [x, y, w, h];\n\t    }\n\t\n\t    /**\n\t     * Get sprite's blend mode\n\t     *\n\t     * @return {BlendMode} A BlendMode instance\n\t     */\n\t\n\t  }, {\n\t    key: 'getBlendMode',\n\t    value: function getBlendMode() {\n\t      return this.blendMode;\n\t    }\n\t\n\t    /**\n\t     * Get sprite's color\n\t     *\n\t     * @return {Color} A Color instance\n\t     */\n\t\n\t  }, {\n\t    key: 'getColor',\n\t    value: function getColor() {\n\t      return this.color;\n\t    }\n\t\n\t    /**\n\t     * Get program\n\t     *\n\t     * @return {?Program} A Program instance or null if the sprite use the default program\n\t     */\n\t\n\t  }, {\n\t    key: 'getCustomProgram',\n\t    value: function getCustomProgram() {\n\t      return this.customProgram;\n\t    }\n\t\n\t    /**\n\t     * Get size\n\t     *\n\t     * @return {Array.<number>} An array with index 0 for size on X and index 1 for size on y\n\t     */\n\t\n\t  }, {\n\t    key: 'getSize',\n\t    value: function getSize() {\n\t      return this.size;\n\t    }\n\t\n\t    /**\n\t     * Get texture\n\t     *\n\t     * @return {TextureInterface} A texture\n\t     */\n\t\n\t  }, {\n\t    key: 'getTexture',\n\t    value: function getTexture() {\n\t      return this.texture;\n\t    }\n\t\n\t    /**\n\t     * Get texture's area to show\n\t     *\n\t     * @return {Array.<number>} An array representing area to show (x, y, w, h)\n\t     */\n\t\n\t  }, {\n\t    key: 'getTextureRect',\n\t    value: function getTextureRect() {\n\t      return this.rect;\n\t    }\n\t  }]);\n\t\n\t  return Sprite;\n\t}(_Drawable2.Drawable);\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.SpriteCommand = undefined;\n\t\n\tvar _StateBlock = __webpack_require__(18);\n\t\n\tvar _Geometry = __webpack_require__(20);\n\t\n\tvar _Program = __webpack_require__(29);\n\t\n\tvar _RenderCommand2 = __webpack_require__(30);\n\t\n\tvar _TextureVideo = __webpack_require__(48);\n\t\n\tvar _Types = __webpack_require__(25);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Draw sprites\n\t *\n\t * @extends {RenderCommand}\n\t */\n\t\n\tvar SpriteCommand = exports.SpriteCommand = function (_RenderCommand) {\n\t    _inherits(SpriteCommand, _RenderCommand);\n\t\n\t    /**\n\t     * Constructor\n\t     *\n\t     * @param {Sprite} sprite A Sprite instance\n\t     */\n\t\n\t    function SpriteCommand(sprite) {\n\t        _classCallCheck(this, SpriteCommand);\n\t\n\t        /**\n\t         * The Sprite instance to draw\n\t         *\n\t         * @type {Sprite}\n\t         * @private\n\t         */\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(SpriteCommand).call(this));\n\t\n\t        _this.sprite = sprite;\n\t        return _this;\n\t    }\n\t\n\t    /**\n\t     * Execute the command\n\t     *\n\t     * @param {RenderAPI} renderAPI RenderAPI instance used to process the commands\n\t     */\n\t\n\t    _createClass(SpriteCommand, [{\n\t        key: 'execute',\n\t        value: function execute(renderAPI) {\n\t            SpriteCommand.draw(renderAPI, this.sprite);\n\t        }\n\t\n\t        /**\n\t         * Draw the given sprite\n\t         *\n\t         * @param {RenderAPI} renderAPI RenderAPI instance used to process the commands\n\t         * @param {Sprite} sprite Sprite instance to draw\n\t         */\n\t\n\t    }], [{\n\t        key: 'draw',\n\t        value: function draw(renderAPI, sprite) {\n\t            var spriteTexture = sprite.getTexture();\n\t            if (!spriteTexture.isReady()) return;\n\t\n\t            // Use custom or default program\n\t            var program = sprite.getCustomProgram();\n\t            if (!program) {\n\t                if (SpriteCommand.isDefaultProgramLoaded()) program = SpriteCommand.sharedProgram;else return;\n\t            }\n\t\n\t            // Program.\n\t            var programCode = renderAPI.setProgram(program);\n\t            if (programCode === -1) return;\n\t\n\t            var spriteRect = sprite.getTextureRect();\n\t            var spriteSize = sprite.getSize();\n\t\n\t            // Must send/update shared uniforms\n\t            if (programCode === 1) renderAPI.setUniform(program, 'uCamera', _Types.Type.Matrix, renderAPI.getActiveCamera().getViewProjectionMatrix());\n\t\n\t            // Send uniforms\n\t            renderAPI.setUniform(program, 'uModel', _Types.Type.Matrix, sprite.getTransformationMatrix());\n\t\n\t            // States and apparence\n\t            renderAPI.setBlendMode(sprite.getBlendMode());\n\t            renderAPI.setDepthState(true, true, _StateBlock.DepthFunction.Less);\n\t            renderAPI.bindTexture(0, spriteTexture);\n\t\n\t            // Set visible area\n\t            var uvs = null;\n\t            if (spriteTexture instanceof _TextureVideo.TextureVideo) uvs = new Float32Array([0, 1, 0, 0, 1, 1, 1, 0]);else {\n\t                var textureSize = spriteTexture.getImage().getSize();\n\t\n\t                var x1 = spriteRect[0] / textureSize[0];\n\t                var y1 = (spriteRect[1] + spriteRect[3]) / textureSize[1];\n\t                var x2 = (spriteRect[0] + spriteRect[2]) / textureSize[0];\n\t                var y2 = spriteRect[1] / textureSize[1];\n\t\n\t                if (spriteRect[2] === 0 && spriteRect[3] === 0) x2 = y2 = 1.0;\n\t\n\t                uvs = new Float32Array([x1, y2, x1, y1, x2, y2, x2, y1]);\n\t            }\n\t            SpriteCommand.sharedGeometry.setTextureUVs(uvs);\n\t\n\t            // Set color\n\t            var spriteColor = sprite.getColor();\n\t            var colors = new Float32Array([spriteColor.r, spriteColor.g, spriteColor.b, spriteColor.a, spriteColor.r, spriteColor.g, spriteColor.b, spriteColor.a, spriteColor.r, spriteColor.g, spriteColor.b, spriteColor.a, spriteColor.r, spriteColor.g, spriteColor.b, spriteColor.a]);\n\t            SpriteCommand.sharedGeometry.setColors(colors);\n\t\n\t            // Set positions\n\t            var positions = new Float32Array([-spriteSize[0], -spriteSize[1], 0, -spriteSize[0], spriteSize[1], 0, spriteSize[0], -spriteSize[1], 0, spriteSize[0], spriteSize[1], 0]);\n\t            SpriteCommand.sharedGeometry.setPositions(positions);\n\t\n\t            // Bind geometry\n\t            renderAPI.setGeometry(SpriteCommand.sharedGeometry);\n\t\n\t            // Draw object\n\t            renderAPI.drawIndexedPrimitives(_StateBlock.DrawingMode.TrianglesStrip, 0, 4);\n\t        }\n\t\n\t        /**\n\t         * Check if the default program is ready, otherwise the function load it\n\t         *\n\t         * @return {boolean} Return true if the default program is loaded\n\t         */\n\t\n\t    }, {\n\t        key: 'isDefaultProgramLoaded',\n\t        value: function isDefaultProgramLoaded() {\n\t            // Everything is ok?\n\t            if (SpriteCommand.sharedProgram.isReady()) return true;\n\t\n\t            var vertexShader = 'uniform mat4 uCamera;' + 'uniform mat4 uModel;' + 'attribute vec4 aPosition;' + 'attribute vec4 aColor;' + 'attribute vec2 aTexCoord;' + 'varying vec4 vColor;' + 'varying vec2 vUV;' + 'void main() {' + 'gl_Position = (uCamera * uModel) * aPosition;' + 'vColor      = aColor;' + 'vUV         = aTexCoord;' + '}';\n\t\n\t            var fragmentShader = 'uniform lowp sampler2D texture;' + 'varying lowp vec4 vColor;' + 'varying mediump vec2 vUV;' + 'void main() {' + 'gl_FragColor = texture2D(texture, vUV) * vColor;' + '}';\n\t\n\t            SpriteCommand.sharedProgram.loadFromData(vertexShader, fragmentShader);\n\t\n\t            return false;\n\t        }\n\t    }]);\n\t\n\t    return SpriteCommand;\n\t}(_RenderCommand2.RenderCommand);\n\t\n\t/**\n\t * Default geometry for sprite rendering\n\t *\n\t * @type {Geometry}\n\t * @private\n\t */\n\t\n\tSpriteCommand.sharedGeometry = _Geometry.Geometry.createRectangle(0.5, 0.5);\n\t\n\t/**\n\t * Default program for sprite rendering\n\t *\n\t * @type {Program}\n\t * @private\n\t */\n\tSpriteCommand.sharedProgram = new _Program.Program();\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.RenderCanvas = undefined;\n\t\n\tvar _Context = __webpack_require__(41);\n\t\n\tvar _RenderTarget2 = __webpack_require__(40);\n\t\n\tvar _RenderWebGL = __webpack_require__(43);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * A rendering canvas\n\t *\n\t * @extends {RenderTarget}\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar RenderCanvas = exports.RenderCanvas = function (_RenderTarget) {\n\t  _inherits(RenderCanvas, _RenderTarget);\n\t\n\t  /**\n\t   * Constructor\n\t   *\n\t   * @param {string} canvas Id of the container\n\t   * @param {{antialiasing: boolean, width: (number|undefined), height: (number|undefined)}} options Options\n\t   * @param {string=} type A string with the value \"webgl\" or \"canvas\"\n\t   */\n\t\n\t  function RenderCanvas(canvas) {\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t    var type = arguments.length <= 2 || arguments[2] === undefined ? 'webgl' : arguments[2];\n\t\n\t    _classCallCheck(this, RenderCanvas);\n\t\n\t    /**\n\t     * The render API to use: For now we support WebGL 1.0.3 only\n\t     *\n\t     * @type {RenderAPI}\n\t     * @protected\n\t     */\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(RenderCanvas).call(this));\n\t\n\t    _this.renderApi = _RenderWebGL.WebGL.getInstance();\n\t\n\t    // Init the context\n\t    _this.context.init(_Context.Context.Type.WebGL, options, canvas);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Clear the canvas\n\t   *\n\t   * @param {Color} color A Color instance\n\t   */\n\t\n\t  _createClass(RenderCanvas, [{\n\t    key: 'clear',\n\t    value: function clear(color) {\n\t      // Remove previous tasks\n\t      this.removeTasks();\n\t\n\t      // Activate context\n\t      this.context.activate();\n\t\n\t      // Clear screen\n\t      this.renderApi.clear(color);\n\t    }\n\t  }]);\n\t\n\t  return RenderCanvas;\n\t}(_RenderTarget2.RenderTarget);\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.Scene = undefined;\n\t\n\tvar _Node = __webpack_require__(16);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * A scene\n\t *\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar Scene = exports.Scene = function () {\n\t    /**\n\t     * Constructor\n\t     */\n\t\n\t    function Scene() {\n\t        _classCallCheck(this, Scene);\n\t\n\t        /**\n\t         * Root node\n\t         *\n\t         * @type {Node}\n\t         * @private\n\t         */\n\t        this.root = new _Node.Node('root');\n\t    }\n\t\n\t    /**\n\t     * Add a node element to the scene\n\t     *\n\t     * @param {Node} node A Node instance\n\t     */\n\t\n\t    _createClass(Scene, [{\n\t        key: 'add',\n\t        value: function add(node) {\n\t            this.root.addChild(node);\n\t        }\n\t\n\t        /**\n\t         * Find the node with the given name\n\t         *\n\t         * @param {string} name A string\n\t         * @return {?Node} A Node instance of null\n\t         */\n\t\n\t    }, {\n\t        key: 'find',\n\t        value: function find(name) {\n\t            return this.root.findChild(name);\n\t        }\n\t\n\t        /**\n\t         * Remove a node element from the scene\n\t         *\n\t         * @param {Node} node A Node instance\n\t         * @return {boolean} True if the operation is a success\n\t         */\n\t\n\t    }, {\n\t        key: 'remove',\n\t        value: function remove(node) {\n\t            return this.root.removeChild(node);\n\t        }\n\t\n\t        /**\n\t         * Update the graph\n\t         *\n\t         * @param {number} deltaTime A floating value representing time elapsed between two frames\n\t         */\n\t\n\t    }, {\n\t        key: 'update',\n\t        value: function update(deltaTime) {\n\t            // Recursive function to roam the graph\n\t            function update(node, deltaTime, parentUpdated) {\n\t                // Update node\n\t                var updated = node.update(deltaTime, parentUpdated);\n\t\n\t                // Update his children\n\t                var children = node.getChildren();\n\t                for (var i = 0; i < children.length; i++) {\n\t                    update(children[i], deltaTime, updated || parentUpdated);\n\t                }\n\t            }\n\t\n\t            // Start the recursive method\n\t            update(this.root, deltaTime, false);\n\t        }\n\t\n\t        /**\n\t         * Visit the graph\n\t         *\n\t         * @param {RenderTarget} renderTarget Renderer who called this method\n\t         */\n\t\n\t    }, {\n\t        key: 'visit',\n\t        value: function visit(renderTarget) {\n\t            // Recursive function to roam the graph\n\t            function visit(node, target) {\n\t                // Visit node\n\t                node.visit(target);\n\t\n\t                // Visit his children\n\t                var children = node.getChildren();\n\t                for (var i = 0; i < children.length; i++) {\n\t                    visit(children[i], target);\n\t                }\n\t            }\n\t\n\t            // Start the recursive method\n\t            visit(this.root, renderTarget);\n\t        }\n\t    }]);\n\t\n\t    return Scene;\n\t}();\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Skybox = undefined;\n\t\n\tvar _Drawable2 = __webpack_require__(27);\n\t\n\tvar _SkyboxCommand = __webpack_require__(55);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * A Skybox\n\t *\n\t * @extends {Drawable}\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar Skybox = exports.Skybox = function (_Drawable) {\n\t  _inherits(Skybox, _Drawable);\n\t\n\t  /**\n\t   * Constructor\n\t   */\n\t\n\t  function Skybox() {\n\t    _classCallCheck(this, Skybox);\n\t\n\t    /**\n\t     * Program\n\t     *\n\t     * @type {Program}\n\t     * @private\n\t     */\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Skybox).call(this));\n\t\n\t    _this.customProgram = null;\n\t\n\t    /**\n\t     * Texture cube linked\n\t     *\n\t     * @type {TextureCube}\n\t     * @private\n\t     */\n\t    _this.texture = null;\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Draw the element\n\t   *\n\t   * @param {RenderTarget} renderTarget Renderer who called this method\n\t   */\n\t\n\t  _createClass(Skybox, [{\n\t    key: 'draw',\n\t    value: function draw(renderTarget) {\n\t      if (this.texture) renderTarget.getActiveTask().addCommand(new _SkyboxCommand.SkyboxCommand(this));\n\t    }\n\t\n\t    /**\n\t     * Set program to use\n\t     *\n\t     * @param {Program} program A Program instance.\n\t     */\n\t\n\t  }, {\n\t    key: 'setCustomProgram',\n\t    value: function setCustomProgram(program) {\n\t      this.customProgram = program;\n\t    }\n\t\n\t    /**\n\t     * Set texture\n\t     *\n\t     * @param {TextureCube} texture A TextureCube instance\n\t     */\n\t\n\t  }, {\n\t    key: 'setTexture',\n\t    value: function setTexture(texture) {\n\t      this.texture = texture;\n\t    }\n\t\n\t    /**\n\t     * Get program\n\t     *\n\t     * @return {?Program} A Program instance or null if the Skybox use the default program\n\t     */\n\t\n\t  }, {\n\t    key: 'getCustomProgram',\n\t    value: function getCustomProgram() {\n\t      return this.customProgram;\n\t    }\n\t\n\t    /**\n\t     * Get the linked TextureCube instance\n\t     *\n\t     * @return {TextureCube} A TextureCube instances\n\t     */\n\t\n\t  }, {\n\t    key: 'getTexture',\n\t    value: function getTexture() {\n\t      return this.texture;\n\t    }\n\t  }]);\n\t\n\t  return Skybox;\n\t}(_Drawable2.Drawable);\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.SkyboxCommand = undefined;\n\t\n\tvar _StateBlock = __webpack_require__(18);\n\t\n\tvar _Geometry = __webpack_require__(20);\n\t\n\tvar _Program = __webpack_require__(29);\n\t\n\tvar _RenderCommand2 = __webpack_require__(30);\n\t\n\tvar _TextureCube = __webpack_require__(47);\n\t\n\tvar _Types = __webpack_require__(25);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar glMatrix = __webpack_require__(3);\n\t\n\t/**\n\t * Draw Skyboxes\n\t *\n\t * @extends {RenderCommand}\n\t */\n\t\n\tvar SkyboxCommand = exports.SkyboxCommand = function (_RenderCommand) {\n\t    _inherits(SkyboxCommand, _RenderCommand);\n\t\n\t    /**\n\t     * Constructor\n\t     *\n\t     * @param {Skybox} skybox A Skybox instance\n\t     */\n\t\n\t    function SkyboxCommand(skybox) {\n\t        _classCallCheck(this, SkyboxCommand);\n\t\n\t        /**\n\t         * The Skybox instance to draw\n\t         *\n\t         * @type {Skybox}\n\t         * @private\n\t         */\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(SkyboxCommand).call(this));\n\t\n\t        _this.skybox = skybox;\n\t        return _this;\n\t    }\n\t\n\t    /**\n\t     * Execute the command\n\t     *\n\t     * @param {RenderAPI} renderAPI RenderAPI instance used to process the commands\n\t     */\n\t\n\t    _createClass(SkyboxCommand, [{\n\t        key: 'execute',\n\t        value: function execute(renderAPI) {\n\t            var texture = this.skybox.getTexture();\n\t            if (!texture || !texture.isReady()) return;\n\t\n\t            // Use custom or default program.\n\t            var program = this.skybox.getCustomProgram();\n\t            if (!program) {\n\t                if (SkyboxCommand.isDefaultProgramLoaded()) program = SkyboxCommand.sharedProgram;else return;\n\t            }\n\t\n\t            // Program\n\t            var programCode = renderAPI.setProgram(program);\n\t            if (programCode == -1) return;\n\t\n\t            // Must send/update shared uniforms\n\t            if (programCode == 1) {\n\t                var toMat4 = function toMat4(mat) {\n\t                    var result = glMatrix.mat4.create();\n\t                    result[15] = 1;result[14] = 0;result[13] = 0;result[12] = 0;\n\t                    result[11] = 0;result[10] = mat[8];result[9] = mat[7];result[8] = mat[6];\n\t                    result[7] = 0;result[6] = mat[5];result[5] = mat[4];result[4] = mat[3];\n\t                    result[3] = 0;result[2] = mat[2];result[1] = mat[1];result[0] = mat[0];\n\t\n\t                    return result;\n\t                };\n\t\n\t                renderAPI.setUniform(program, 'projection', _Types.Type.Matrix, renderAPI.getActiveCamera().getProjectionMatrix());\n\t\n\t                // Tip: Remove last row and col from the matrix to get an infinite Skybox\n\t                var viewMatrix = renderAPI.getActiveCamera().getViewMatrix();\n\t                var m = glMatrix.mat3.fromMat4([], viewMatrix);\n\t\n\t                renderAPI.setUniform(program, 'view', _Types.Type.Matrix, toMat4(m));\n\t            }\n\t\n\t            // Send uniforms\n\t            renderAPI.setUniform(program, 'uModel', _Types.Type.Matrix, this.skybox.getTransformationMatrix());\n\t\n\t            // States and apparence\n\t            renderAPI.setDepthState(false, false, _StateBlock.DepthFunction.Less);\n\t            renderAPI.bindTextureCube(0, texture);\n\t\n\t            // Bind geometry\n\t            renderAPI.setGeometry(SkyboxCommand.sharedGeometry);\n\t\n\t            // Draw object\n\t            renderAPI.drawIndexedPrimitives(_StateBlock.DrawingMode.Triangles, 0, SkyboxCommand.sharedGeometry.getIndexCount());\n\t        }\n\t\n\t        /**\n\t         * Check if the default program is ready, otherwise the function load it\n\t         *\n\t         * @return {boolean} Return true if the default program is loaded\n\t         */\n\t\n\t    }], [{\n\t        key: 'isDefaultProgramLoaded',\n\t        value: function isDefaultProgramLoaded() {\n\t            if (SkyboxCommand.sharedProgram.isReady()) return true;\n\t\n\t            var vertexShader = 'uniform mat4 projection;' + 'uniform mat4 view;' + 'uniform mat4 uModel;' + 'attribute vec4 aPosition;' + 'attribute vec4 aColor;' + 'varying vec4 vColor;' + 'varying vec4 vUV;' + 'void main() {' + 'gl_Position = projection * view * aPosition;' + 'vColor      = aColor;' + 'vUV         = aPosition;' + '}';\n\t\n\t            var fragmentShader = 'uniform lowp samplerCube skybox;' + 'varying lowp vec4 vColor;' + 'varying mediump vec4 vUV;' + 'void main() {' + 'gl_FragColor = textureCube(skybox, vUV.xyz) * vColor;' + '}';\n\t\n\t            SkyboxCommand.sharedProgram.loadFromData(vertexShader, fragmentShader);\n\t\n\t            return false;\n\t        }\n\t    }]);\n\t\n\t    return SkyboxCommand;\n\t}(_RenderCommand2.RenderCommand);\n\t\n\t/**\n\t * Default geometry for skybox rendering\n\t *\n\t * @type {Geometry}\n\t * @private\n\t */\n\t\n\tSkyboxCommand.sharedGeometry = _Geometry.Geometry.createCube(0.5, 0.5, 0.5);\n\t\n\t/**\n\t * Default program for skybox rendering\n\t *\n\t * @type {Program}\n\t * @private\n\t */\n\tSkyboxCommand.sharedProgram = new _Program.Program();\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.SpotLight = undefined;\n\t\n\tvar _Light2 = __webpack_require__(15);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * A spotlight\n\t *\n\t * @extends {Light}\n\t * @author Donovan ORHAN <dono.orhan@gmail.com>\n\t */\n\t\n\tvar SpotLight = exports.SpotLight = function (_Light) {\n\t  _inherits(SpotLight, _Light);\n\t\n\t  /**\n\t   * Constructor\n\t   */\n\t\n\t  function SpotLight() {\n\t    _classCallCheck(this, SpotLight);\n\t\n\t    /**\n\t     * Constant\n\t     *\n\t     * @type {number}\n\t     * @private\n\t     */\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(SpotLight).call(this));\n\t\n\t    _this.constant = 1.0;\n\t\n\t    /**\n\t     * Cutoff angle\n\t     *\n\t     * @type {number}\n\t     * @private\n\t     */\n\t    _this.cutoff = 12.5;\n\t\n\t    /**\n\t     * Light's direction\n\t     *\n\t     * @type {Array.<number>}\n\t     * @private\n\t     */\n\t    _this.direction = [];\n\t\n\t    /**\n\t     * Linear value\n\t     *\n\t     * @type {number}\n\t     * @private\n\t     */\n\t    _this.linear = 0.09;\n\t\n\t    /**\n\t     * Quadratic value\n\t     *\n\t     * @type {number}\n\t     * @private\n\t     */\n\t    _this.quadratic = 0.032;\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Set direction\n\t   *\n\t   * @param {number} x Direction on X\n\t   * @param {number} y Direction on Y\n\t   * @param {number} z Direction on Z\n\t   */\n\t\n\t  _createClass(SpotLight, [{\n\t    key: 'setDirection',\n\t    value: function setDirection(x, y, z) {\n\t      this.direction = [x, y, z];\n\t    }\n\t\n\t    /**\n\t     * Set cut off\n\t     *\n\t     * @param {number} value The cutoff value\n\t     */\n\t\n\t  }, {\n\t    key: 'setCutoff',\n\t    value: function setCutoff(value) {\n\t      this.cutoff = value;\n\t    }\n\t\n\t    /**\n\t     * Set point light's values\n\t     *\n\t     * @param {number} constant The constant value\n\t     * @param {number} linear The linear value\n\t     * @param {number} quadratic The quadratic value\n\t     */\n\t\n\t  }, {\n\t    key: 'setValues',\n\t    value: function setValues(constant, linear, quadratic) {\n\t      this.constant = constant;\n\t      this.linear = linear;\n\t      this.quadratic = quadratic;\n\t    }\n\t\n\t    /**\n\t     * Get direction\n\t     *\n\t     * @return {Array.<number>} A vector with values for each axis\n\t     */\n\t\n\t  }, {\n\t    key: 'getDirection',\n\t    value: function getDirection() {\n\t      return this.direction;\n\t    }\n\t\n\t    /**\n\t     * Get values\n\t     *\n\t     * @return {Array.<number>} An array with constant, linear and quadratic values\n\t     */\n\t\n\t  }, {\n\t    key: 'getValues',\n\t    value: function getValues() {\n\t      return [this.constant, this.linear, this.quadratic];\n\t    }\n\t  }]);\n\t\n\t  return SpotLight;\n\t}(_Light2.Light);\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** Lemon.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap bf7199879726bab21f61\n **/","import {BlendMode} from './BlendMode.js';\nimport {Camera} from './Camera.js';\nimport {Color} from './Color.js';\nimport {DirectionalLight} from './Lights/DirectionalLight.js';\nimport {DrawingMode} from './StateBlock.js';\nimport {FileLoader} from './Loaders/FileLoader.js';\nimport {Geometry} from './Geometry.js';\nimport {Material} from './Material/Material.js';\nimport {Mesh} from './Objects/Mesh.js';\nimport {Model} from './Objects/Model.js';\nimport {ModelLoader} from './Loaders/ModelLoader.js';\nimport {Pass} from './Material/Pass.js';\nimport {PointLight} from './Lights/PointLight.js';\nimport {PostEffect} from './Extra/PostEffect.js';\nimport {Program} from './Program.js';\nimport {ProgramLibrary} from './Extra/ProgramLibrary.js';\nimport {RenderCanvas} from './Renderers/RenderCanvas.js';\nimport {RenderTarget} from './Renderers/RenderTarget.js';\nimport {RenderTexture} from './Renderers/RenderTexture.js';\nimport {Scene} from './Scene/Scene.js';\nimport {Skybox} from './Objects/Skybox.js';\nimport {SpotLight} from './Lights/SpotLight.js';\nimport {Sprite} from './Objects/Sprite.js';\nimport {Texture} from './Textures/Texture.js';\nimport {TextureCube} from './Textures/TextureCube.js';\nimport {TextureVideo} from './Textures/TextureVideo.js';\nimport {Transformable} from './Transformable.js';\nimport {Type} from './Types.js';\nimport {VertexFormat, VertexElement} from './VertexFormat.js';\n\nexports.BlendMode = BlendMode;\nexports.Camera = Camera;\nexports.Color = Color;\nexports.DirectionalLight = DirectionalLight;\nexports.DrawingMode = DrawingMode;\nexports.FileLoader = FileLoader;\nexports.Geometry = Geometry;\nexports.Material = Material;\nexports.Mesh = Mesh;\nexports.Model = Model;\nexports.ModelLoader = ModelLoader;\nexports.Pass = Pass;\nexports.PointLight = PointLight;\nexports.PostEffect = PostEffect;\nexports.Program = Program;\nexports.ProgramLibrary = ProgramLibrary;\nexports.RenderCanvas = RenderCanvas;\nexports.RenderTexture = RenderTexture;\nexports.Scene = Scene;\nexports.Skybox = Skybox;\nexports.SpotLight = SpotLight;\nexports.Sprite = Sprite;\nexports.Texture = Texture;\nexports.TextureCube = TextureCube;\nexports.TextureVideo = TextureVideo;\nexports.Transformable = Transformable;\nexports.Type = Type;\nexports.VertexFormat = VertexFormat;\nexports.VertexElement = VertexElement;\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main.js\n **/","/**\n * Blending\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class BlendMode\n{\n    /**\n     * Constructor\n     *\n     * @param {BlendMode=} mode Mode to use, preset values.\n     */\n    constructor(mode)\n    {\n        /**\n         * Source blending factor for the alpha channel\n         *\n         * @type {BlendMode.Factor}\n         * @public\n         */\n        this.alphaSourceFactor = BlendMode.Factor.One;\n\n        /**\n         * Destination blending factor for the alpha channel\n         *\n         * @type {BlendMode.Factor}\n         * @public\n         */\n        this.alphaDestinationFactor = BlendMode.Factor.OneMinusSourceAlpha;\n\n        /**\n         * Blending equation for the alpha channel\n         *\n         * @type {BlendMode.Equation}\n         * @public\n         */\n        this.alphaEquation = BlendMode.Equation.Add;\n\n        /**\n         * Blending color (source)\n         *\n         * @type {BlendMode.Factor}\n         * @public\n         */\n        this.colorSourceFactor = BlendMode.Factor.SourceAlpha;\n\n        /**\n         * Blending color (destination)\n         *\n         * @type {BlendMode.Factor}\n         * @public\n         */\n        this.colorDestinationFactor = BlendMode.Factor.OneMinusSourceAlpha;\n\n        /**\n         * Equation to use on source and destination color\n         *\n         * @type {BlendMode.Equation}\n         * @public\n         */\n        this.colorEquation = BlendMode.Equation.Add;\n\n        if (mode)\n            this.setMode(mode);\n    }\n\n    /**\n     * Set blending mode to use: this method erase the previous configuration, be careful\n     *\n     * @param {BlendMode.Mode=} mode Mode to use, preset values\n     */\n    setMode(mode)\n    {\n        switch(mode)\n        {\n            case BlendMode.Mode.Alpha:\n            {\n                this.colorSourceFactor      = BlendMode.Factor.SourceAlpha;\n                this.colorDestinationFactor = BlendMode.Factor.OneMinusSourceAlpha;\n                this.colorEquation          = BlendMode.Equation.Add;\n                this.alphaSourceFactor      = BlendMode.Factor.One;\n                this.alphaDestinationFactor = BlendMode.Factor.OneMinusSourceAlpha;\n                this.alphaEquation          = BlendMode.Equation.Add;\n                break;\n            }\n            case BlendMode.Mode.Add:\n            {\n                this.colorSourceFactor      = BlendMode.Factor.SourceAlpha;\n                this.colorDestinationFactor = BlendMode.Factor.One;\n                this.colorEquation          = BlendMode.Equation.Add;\n                this.alphaSourceFactor      = BlendMode.Factor.One;\n                this.alphaDestinationFactor = BlendMode.Factor.One;\n                this.alphaEquation          = BlendMode.Equation.Add;\n                break;\n            }\n            case BlendMode.Mode.Multiply:\n            {\n                this.colorSourceFactor      = BlendMode.Factor.DestinationColor;\n                this.colorDestinationFactor = BlendMode.Factor.One;\n                this.colorEquation          = BlendMode.Equation.Add;\n                this.alphaSourceFactor      = BlendMode.Factor.One;\n                this.alphaDestinationFactor = BlendMode.Factor.OneMinusSourceAlpha;\n                this.alphaEquation          = BlendMode.Equation.Add;\n                break;\n            }\n            default:\n            case BlendMode.Mode.None:\n            {\n                this.colorSourceFactor      = BlendMode.Factor.One;\n                this.colorDestinationFactor = BlendMode.Factor.Zero;\n                this.colorEquation          = BlendMode.Equation.Add;\n                this.alphaSourceFactor      = BlendMode.Factor.One;\n                this.alphaDestinationFactor = BlendMode.Factor.OneMinusSourceAlpha;\n                this.alphaEquation          = BlendMode.Equation.Add;\n                break;\n            }\n        }\n    }\n\n    /**\n     * Check if the given BlendMode instance is equal to this one\n     *\n     * @param {BlendMode} blendMode A BlendMode instance\n     * @return {boolean} True if the two blend mode are equals, otherwise false\n     */\n    isEqual(blendMode)\n    {\n        return (this.alphaSourceFactor          == blendMode.alphaSourceFactor      &&\n                this.alphaDestinationFactor     == blendMode.alphaDestinationFactor &&\n                this.alphaEquation              == blendMode.alphaEquation          &&\n                this.colorSourceFactor          == blendMode.colorSourceFactor      &&\n                this.colorDestinationFactor     == blendMode.colorDestinationFactor &&\n                this.colorEquation              == blendMode.colorEquation);\n    }\n}\n\n/**\n * Default modes availables\n *\n * @enum {number}\n */\nBlendMode.Mode = { Alpha : 0, Add : 1, Multiply : 2, None : 3 };\n\n/**\n * Blend factors\n *\n * @enum {number}\n */\nBlendMode.Factor =  {   DestinationAlpha            : 0,\n                        DestinationColor            : 1,\n                        One                         : 2,\n                        OneMinusDestinationAlpha    : 3,\n                        OneMinusDestinationColor    : 4,\n                        OneMinusSourceAlpha         : 5,\n                        OneMinusSourceColor         : 6,\n                        SourceAlpha                 : 7,\n                        SourceColor                 : 8,\n                        Zero                        : 9\n                    };\n\n/**\n * Blend equations\n *\n * @enum {number}\n */\nBlendMode.Equation = { Add: 0, Subtract: 1 };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/BlendMode.js\n **/","let glMatrix = require('gl-matrix');\n\n/**\n * A camera\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Camera\n{\n    /**\n     * Constructor\n     *\n     * @param {Camera.Type=} type Type of camera\n     */\n    constructor(type = Camera.Type.Perspective)\n    {\n        /**\n         * Camera's direction\n         *\n         * @type {glMatrix.vec3}\n         * @private\n         */\n        this.direction = glMatrix.vec3.create();\n\n        /**\n         * Field of view\n         *\n         * @type {number}\n         * @private\n         */\n        this.fov = 45.0;\n\n        /**\n         * Visibility limits: min (x) and max (y)\n         *\n         * @type {glMatrix.vec2}\n         * @private\n         */\n        this.limits = glMatrix.vec2.fromValues(0.1, 100.0);\n\n        /**\n         * Projection matrix\n         *\n         * @type {glMatrix.mat4}\n         * @private\n         */\n        this.matrixProjection = glMatrix.mat4.create();\n\n        /**\n         * View matrix\n         *\n         * @type {glMatrix.mat4}\n         * @private\n         */\n        this.matrixView = glMatrix.mat4.create();\n\n        /**\n         * Indicate if the view matrix need an update\n         *\n         * @type {boolean}\n         * @private\n         */\n        this.matrixViewNeedUpdate = true;\n\n        /**\n         * Resulting matrix with camera's transformations\n         *\n         * @type {glMatrix.mat4}\n         * @private\n         */\n        this.matrixViewProjection = glMatrix.mat4.create();\n\n        /**\n         * Indicate if the view matrix need an update\n         *\n         * @type {boolean}\n         * @private\n         */\n        this.matrixViewProjectionNeedUpdate = true;\n\n        /**\n         * Camera's position\n         *\n         * @type {glMatrix.vec3}\n         * @private\n         */\n        this.position = glMatrix.vec3.fromValues(0.0, 0.0, 3.0);\n\n        /**\n         * Ratio: 16/9, 4/3, …\n         *\n         * @type {number}\n         * @private\n         */\n        this.ratio = 16.0 / 9.0;\n\n        /**\n         * Camera's rotation\n         *\n         * @type {glMatrix.quat}\n         * @private\n         */\n        this.rotation = glMatrix.quat.fromValues(0.0, 0.0, 0.0, 1.0);\n\n        /**\n         * Type of camera\n         *\n         * @type {Camera.Type}\n         * @private\n         */\n        this.type = type;\n\n        /**\n         * View size with x, y, w and h values\n         *\n         * @type {glMatrix.vec4}\n         * @private\n         */\n        this.viewport = glMatrix.vec4.create();\n\n        /**\n         * Zoom\n         *\n         * @type {number}\n         * @default 1.0\n         * @private\n         */\n        this.zoomScale = 1.0;\n\n        // Force projection matrix computation\n        this.setType(this.type);\n    }\n\n    /**\n     * Set camera's direction: Point to look at\n     *\n     * @param {number} x Direction on X\n     * @param {number} y Direction on Y\n     * @param {number} z Direction on Z\n     */\n    lookAt(x, y, z)\n    {\n        glMatrix.vec3.set(this.direction, x, y, z);\n        this.matrixViewNeedUpdate = true;\n    }\n\n    /**\n     * Set camera's position\n     *\n     * @param {number} x Position on X\n     * @param {number} y Position on Y\n     * @param {number} z Position on Z\n     */\n    move(x, y, z)\n    {\n        glMatrix.vec3.set(this.position, x, y, z);\n        this.matrixViewNeedUpdate = true;\n    }\n\n    /**\n     * Set camera's rotation\n     *\n     * @param {number} yaw A floating value\n     * @param {number} pitch A floating value\n     */\n    rotate(yaw, pitch)\n    {\n        let yawQuat     = glMatrix.quat.fromValues(0.0, 0.0, 0.0, 1.0);\n        let pitchQuat   = glMatrix.quat.fromValues(0.0, 0.0, 0.0, 1.0);\n\n        glMatrix.quat.setAxisAngle(yawQuat, [0.0, 1.0, 0.0], yaw);\n        glMatrix.quat.setAxisAngle(pitchQuat, [1.0, 0.0, 0.0], -pitch);\n        glMatrix.quat.multiply(this.rotation, yawQuat, pitchQuat);\n\n        /**\n         * Multiply two vec4\n         *\n         * @param {quat} q1 First vector\n         * @param {quat} q2 Second vector\n         */\n        function multiply (q1, q2)\n        {\n            return [q1[3] * q2[0] + q1[0] * q2[3] + q1[2] * q2[1] - q1[1] * q2[2],\n                q1[3] * q2[1] + q1[1] * q2[3] + q1[0] * q2[2] - q1[2] * q2[0],\n                q1[3] * q2[2] + q1[2] * q2[3] + q1[1] * q2[0] - q1[0] * q2[1],\n                q1[3] * q2[3] + q1[0] * q2[0] + q1[1] * q2[1] - q1[2] * q2[2]];\n        }\n\n        let d = multiply(this.rotation, [this.direction[0], this.direction[1], this.direction[2], 0.0]);\n        let p = multiply(this.rotation, [this.position[0], this.position[1], this.position[2], 0.0]);\n\n        glMatrix.vec3.set(this.direction, d[0], d[1], d[2]);\n        glMatrix.vec3.set(this.position, p[0], p[1], p[2]);\n\n        this.matrixViewNeedUpdate = true;\n    }\n\n    /**\n     * Set field of view\n     *\n     * @param {number} value Value in degrees (default: 45)\n     */\n    setFieldOfView(value)\n    {\n        this.fov = value;\n        this.setType(this.type); // Force projection matrix update\n    }\n\n    /**\n     * Set screen's ratio\n     *\n     * @param {number} ratio Ratio to assign (4/3, 16/9, …)\n     */\n    setRatio(ratio)\n    {\n        this.ratio = ratio;\n        this.setType(this.type); // Force projection matrix update\n    }\n\n    /**\n     * Set camera's distances\n     *\n     * @param {Camera.Type} type Type asked, for 2D you should use \"Orthographic\"\n     */\n    setType(type)\n    {\n        // Save type\n        this.type = type;\n\n        // Compute projection matrix\n        if (type == Camera.Type.Perspective)\n            glMatrix.mat4.perspective(this.matrixProjection, glMatrix.glMatrix.toRadian(this.fov * this.zoomScale), this.ratio, this.limits[0], this.limits[1]);\n        else\n        {\n            glMatrix.mat4.ortho(this.matrixProjection,\n                                (-1.5 * this.ratio) * this.zoomScale,\n                                (+1.5 * this.ratio) * this.zoomScale,\n                                (-1.5 * this.zoomScale),\n                                (+1.5 * this.zoomScale),\n                                this.limits[0],\n                                this.limits[1]);\n        }\n\n        this.matrixViewProjectionNeedUpdate = true;\n    }\n\n    /**\n     * Set camera's distances\n     *\n     * @param {number} min Minimum distance to show\n     * @param {number} max Maximum distance to show\n     */\n    setViewDistances(min, max)\n    {\n        glMatrix.vec2.set(this.limits, min, max);\n        this.setType(this.type); // Force projection matrix update\n    }\n\n    /**\n     * Set camera's viewport\n     *\n     * @param {number} x View start position on X\n     * @param {number} y View start position on Y\n     * @param {number} w View size on X\n     * @param {number} h View size on Y\n     */\n    setViewport(x, y, w, h)\n    {\n        glMatrix.vec4.set(this.viewport, x, y, w, h);\n        this.setRatio(w / h);\n    }\n\n    /**\n     * Zoom\n     *\n     * @param {number} zoomValue Zoom scale to apply\n     */\n    zoom(zoomValue)\n    {\n        this.zoomScale = 1.0 / zoomValue;\n        this.setType(this.type); // Force projection matrix update\n    }\n\n    /**\n     * Get camera's position\n     *\n     * @return {!Array.<number>} A vector with three values: x, y and z\n     */\n    getPosition()\n    {\n        return [this.position[0], this.position[1], this.position[2]];\n    }\n\n    /**\n     * Get camera's projection matrix\n     *\n     * @return {!glMatrix.mat4} A matrix\n     */\n    getProjectionMatrix()\n    {\n        return this.matrixProjection;\n    }\n\n    /**\n     * Get camera's matrix\n     *\n     * @return {!glMatrix.mat4} A matrix\n     */\n    getViewMatrix()\n    {\n        if (this.matrixViewNeedUpdate)\n        {\n            glMatrix.mat4.lookAt(this.matrixView, this.position, this.direction, glMatrix.vec3.fromValues(0.0, 1.0, 0.0));\n            this.matrixViewNeedUpdate           = false;\n            this.matrixViewProjectionNeedUpdate = true;\n        }\n\n        return this.matrixView;\n    }\n\n    /**\n     * Get camera's viewport\n     *\n     * @return {!glMatrix.vec3} A vector with four values: x, y, w and h\n     */\n    getViewport()\n    {\n        return this.viewport;\n    }\n\n    /**\n     * Get camera's matrix\n     *\n     * @return {!glMatrix.mat4} A matrix\n     */\n    getViewProjectionMatrix()\n    {\n        if (this.matrixViewProjectionNeedUpdate || this.matrixViewNeedUpdate)\n        {\n            glMatrix.mat4.multiply(this.matrixViewProjection, this.getProjectionMatrix(), this.getViewMatrix());\n            this.matrixViewProjectionNeedUpdate = false;\n        }\n\n        return this.matrixViewProjection;\n    }\n}\n\n/**\n * Types\n *\n * @type {{Perspective: number, Orthographic: number}}\n */\nCamera.Type = { Perspective: 0, Orthographic: 1 };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Camera.js\n **/","/**\n * @fileoverview gl-matrix - High performance matrix and vector operations\n * @author Brandon Jones\n * @author Colin MacKenzie IV\n * @version 2.3.0\n */\n\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n// END HEADER\n\nexports.glMatrix = require(\"./gl-matrix/common.js\");\nexports.mat2 = require(\"./gl-matrix/mat2.js\");\nexports.mat2d = require(\"./gl-matrix/mat2d.js\");\nexports.mat3 = require(\"./gl-matrix/mat3.js\");\nexports.mat4 = require(\"./gl-matrix/mat4.js\");\nexports.quat = require(\"./gl-matrix/quat.js\");\nexports.vec2 = require(\"./gl-matrix/vec2.js\");\nexports.vec3 = require(\"./gl-matrix/vec3.js\");\nexports.vec4 = require(\"./gl-matrix/vec4.js\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix.js\n ** module id = 3\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n/**\n * @class Common utilities\n * @name glMatrix\n */\nvar glMatrix = {};\n\n// Constants\nglMatrix.EPSILON = 0.000001;\nglMatrix.ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\nglMatrix.RANDOM = Math.random;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nglMatrix.setMatrixArrayType = function(type) {\n    GLMAT_ARRAY_TYPE = type;\n}\n\nvar degree = Math.PI / 180;\n\n/**\n* Convert Degree To Radian\n*\n* @param {Number} Angle in Degrees\n*/\nglMatrix.toRadian = function(a){\n     return a * degree;\n}\n\nmodule.exports = glMatrix;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/common.js\n ** module id = 4\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 2x2 Matrix\n * @name mat2\n */\nvar mat2 = {};\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nmat2.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {mat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\nmat2.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nmat2.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a1 = a[1];\n        out[1] = a[2];\n        out[2] = a1;\n    } else {\n        out[0] = a[0];\n        out[1] = a[2];\n        out[2] = a[1];\n        out[3] = a[3];\n    }\n    \n    return out;\n};\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.invert = function(out, a) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n\n        // Calculate the determinant\n        det = a0 * a3 - a2 * a1;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n    \n    out[0] =  a3 * det;\n    out[1] = -a1 * det;\n    out[2] = -a2 * det;\n    out[3] =  a0 * det;\n\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.adjoint = function(out, a) {\n    // Caching this value is nessecary if out == a\n    var a0 = a[0];\n    out[0] =  a[3];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] =  a0;\n\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {mat2} a the source matrix\n * @returns {Number} determinant of a\n */\nmat2.determinant = function (a) {\n    return a[0] * a[3] - a[2] * a[1];\n};\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nmat2.multiply = function (out, a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    return out;\n};\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nmat2.mul = mat2.multiply;\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nmat2.rotate = function (out, a, rad) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = a0 *  c + a2 * s;\n    out[1] = a1 *  c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    return out;\n};\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nmat2.scale = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    return out;\n};\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nmat2.fromRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = -s;\n    out[3] = c;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2} out\n */\nmat2.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = v[1];\n    return out;\n}\n\n/**\n * Returns a string representation of a mat2\n *\n * @param {mat2} mat matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat2.str = function (a) {\n    return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {mat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat2.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))\n};\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {mat2} L the lower triangular matrix \n * @param {mat2} D the diagonal matrix \n * @param {mat2} U the upper triangular matrix \n * @param {mat2} a the input matrix to factorize\n */\n\nmat2.LDU = function (L, D, U, a) { \n    L[2] = a[2]/a[0]; \n    U[0] = a[0]; \n    U[1] = a[1]; \n    U[3] = a[3] - L[2] * U[1]; \n    return [L, D, U];       \n}; \n\n\nmodule.exports = mat2;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/mat2.js\n ** module id = 5\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 2x3 Matrix\n * @name mat2d\n * \n * @description \n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\nvar mat2d = {};\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nmat2d.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(6);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n};\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {mat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\nmat2d.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(6);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n};\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nmat2d.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n};\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nmat2d.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n};\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nmat2d.invert = function(out, a) {\n    var aa = a[0], ab = a[1], ac = a[2], ad = a[3],\n        atx = a[4], aty = a[5];\n\n    var det = aa * ad - ab * ac;\n    if(!det){\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = ad * det;\n    out[1] = -ab * det;\n    out[2] = -ac * det;\n    out[3] = aa * det;\n    out[4] = (ac * aty - ad * atx) * det;\n    out[5] = (ab * atx - aa * aty) * det;\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {mat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nmat2d.determinant = function (a) {\n    return a[0] * a[3] - a[1] * a[2];\n};\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nmat2d.multiply = function (out, a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    out[4] = a0 * b4 + a2 * b5 + a4;\n    out[5] = a1 * b4 + a3 * b5 + a5;\n    return out;\n};\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nmat2d.mul = mat2d.multiply;\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nmat2d.rotate = function (out, a, rad) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = a0 *  c + a2 * s;\n    out[1] = a1 *  c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n};\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nmat2d.scale = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n};\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nmat2d.translate = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = a0 * v0 + a2 * v1 + a4;\n    out[5] = a1 * v0 + a3 * v1 + a5;\n    return out;\n};\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nmat2d.fromRotation = function(out, rad) {\n    var s = Math.sin(rad), c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = -s;\n    out[3] = c;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2d} out\n */\nmat2d.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = v[1];\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat2d} out\n */\nmat2d.fromTranslation = function(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = v[0];\n    out[5] = v[1];\n    return out;\n}\n\n/**\n * Returns a string representation of a mat2d\n *\n * @param {mat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat2d.str = function (a) {\n    return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + \n                    a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {mat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat2d.frob = function (a) { \n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))\n}; \n\nmodule.exports = mat2d;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/mat2d.js\n ** module id = 6\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 3x3 Matrix\n * @name mat3\n */\nvar mat3 = {};\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nmat3.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(9);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n};\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nmat3.fromMat4 = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n};\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nmat3.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(9);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nmat3.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n    \n    return out;\n};\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.invert = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        b01 = a22 * a11 - a12 * a21,\n        b11 = -a22 * a10 + a12 * a20,\n        b21 = a21 * a10 - a11 * a20,\n\n        // Calculate the determinant\n        det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.adjoint = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8];\n\n    out[0] = (a11 * a22 - a12 * a21);\n    out[1] = (a02 * a21 - a01 * a22);\n    out[2] = (a01 * a12 - a02 * a11);\n    out[3] = (a12 * a20 - a10 * a22);\n    out[4] = (a00 * a22 - a02 * a20);\n    out[5] = (a02 * a10 - a00 * a12);\n    out[6] = (a10 * a21 - a11 * a20);\n    out[7] = (a01 * a20 - a00 * a21);\n    out[8] = (a00 * a11 - a01 * a10);\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nmat3.determinant = function (a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n};\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nmat3.multiply = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        b00 = b[0], b01 = b[1], b02 = b[2],\n        b10 = b[3], b11 = b[4], b12 = b[5],\n        b20 = b[6], b21 = b[7], b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n};\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nmat3.mul = mat3.multiply;\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nmat3.translate = function(out, a, v) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n        x = v[0], y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n};\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nmat3.rotate = function (out, a, rad) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nmat3.scale = function(out, a, v) {\n    var x = v[0], y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat3} out\n */\nmat3.fromTranslation = function(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = v[0];\n    out[7] = v[1];\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nmat3.fromRotation = function(out, rad) {\n    var s = Math.sin(rad), c = Math.cos(rad);\n\n    out[0] = c;\n    out[1] = s;\n    out[2] = 0;\n\n    out[3] = -s;\n    out[4] = c;\n    out[5] = 0;\n\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat3} out\n */\nmat3.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n\n    out[3] = 0;\n    out[4] = v[1];\n    out[5] = 0;\n\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nmat3.fromMat2d = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = 0;\n\n    out[3] = a[2];\n    out[4] = a[3];\n    out[5] = 0;\n\n    out[6] = a[4];\n    out[7] = a[5];\n    out[8] = 1;\n    return out;\n};\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nmat3.fromQuat = function (out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n};\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nmat3.normalFromMat4 = function (out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n};\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {mat3} mat matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat3.str = function (a) {\n    return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + \n                    a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + \n                    a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat3.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\n};\n\n\nmodule.exports = mat3;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/mat3.js\n ** module id = 7\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 4x4 Matrix\n * @name mat4\n */\nvar mat4 = {};\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(16);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(16);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nmat4.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a03 = a[3],\n            a12 = a[6], a13 = a[7],\n            a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n    \n    return out;\n};\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.invert = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.adjoint = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nmat4.determinant = function (a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n};\n\n/**\n * Multiplies two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.multiply = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];  \n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n    return out;\n};\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nmat4.mul = mat4.multiply;\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nmat4.translate = function (out, a, v) {\n    var x = v[0], y = v[1], z = v[2],\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n};\n\n/**\n * Scales the mat4 by the dimensions in the given vec3\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nmat4.scale = function(out, a, v) {\n    var x = v[0], y = v[1], z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nmat4.rotate = function (out, a, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t,\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23,\n        b00, b01, b02,\n        b10, b11, b12,\n        b20, b21, b22;\n\n    if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n    \n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateX = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[0]  = a[0];\n        out[1]  = a[1];\n        out[2]  = a[2];\n        out[3]  = a[3];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[4] = a10 * c + a20 * s;\n    out[5] = a11 * c + a21 * s;\n    out[6] = a12 * c + a22 * s;\n    out[7] = a13 * c + a23 * s;\n    out[8] = a20 * c - a10 * s;\n    out[9] = a21 * c - a11 * s;\n    out[10] = a22 * c - a12 * s;\n    out[11] = a23 * c - a13 * s;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateY = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[4]  = a[4];\n        out[5]  = a[5];\n        out[6]  = a[6];\n        out[7]  = a[7];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c - a20 * s;\n    out[1] = a01 * c - a21 * s;\n    out[2] = a02 * c - a22 * s;\n    out[3] = a03 * c - a23 * s;\n    out[8] = a00 * s + a20 * c;\n    out[9] = a01 * s + a21 * c;\n    out[10] = a02 * s + a22 * c;\n    out[11] = a03 * s + a23 * c;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateZ = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[8]  = a[8];\n        out[9]  = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c + a10 * s;\n    out[1] = a01 * c + a11 * s;\n    out[2] = a02 * c + a12 * s;\n    out[3] = a03 * c + a13 * s;\n    out[4] = a10 * c - a00 * s;\n    out[5] = a11 * c - a01 * s;\n    out[6] = a12 * c - a02 * s;\n    out[7] = a13 * c - a03 * s;\n    return out;\n};\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nmat4.fromTranslation = function(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nmat4.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = v[1];\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = v[2];\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nmat4.fromRotation = function(out, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t;\n    \n    if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n    \n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n    \n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n    \n    // Perform rotation-specific matrix multiplication\n    out[0] = x * x * t + c;\n    out[1] = y * x * t + z * s;\n    out[2] = z * x * t - y * s;\n    out[3] = 0;\n    out[4] = x * y * t - z * s;\n    out[5] = y * y * t + c;\n    out[6] = z * y * t + x * s;\n    out[7] = 0;\n    out[8] = x * z * t + y * s;\n    out[9] = y * z * t - x * s;\n    out[10] = z * z * t + c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromXRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n    \n    // Perform axis-specific matrix multiplication\n    out[0]  = 1;\n    out[1]  = 0;\n    out[2]  = 0;\n    out[3]  = 0;\n    out[4] = 0;\n    out[5] = c;\n    out[6] = s;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = -s;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromYRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n    \n    // Perform axis-specific matrix multiplication\n    out[0]  = c;\n    out[1]  = 0;\n    out[2]  = -s;\n    out[3]  = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = s;\n    out[9] = 0;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromZRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n    \n    // Perform axis-specific matrix multiplication\n    out[0]  = c;\n    out[1]  = s;\n    out[2]  = 0;\n    out[3]  = 0;\n    out[4] = -s;\n    out[5] = c;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nmat4.fromRotationTranslation = function (out, q, v) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    \n    return out;\n};\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nmat4.fromRotationTranslationScale = function (out, q, v, s) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2,\n        sx = s[0],\n        sy = s[1],\n        sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    \n    return out;\n};\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @param {vec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nmat4.fromRotationTranslationScaleOrigin = function (out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0], y = q[1], z = q[2], w = q[3],\n      x2 = x + x,\n      y2 = y + y,\n      z2 = z + z,\n\n      xx = x * x2,\n      xy = x * y2,\n      xz = x * z2,\n      yy = y * y2,\n      yz = y * z2,\n      zz = z * z2,\n      wx = w * x2,\n      wy = w * y2,\n      wz = w * z2,\n      \n      sx = s[0],\n      sy = s[1],\n      sz = s[2],\n\n      ox = o[0],\n      oy = o[1],\n      oz = o[2];\n      \n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\n  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\n  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\n  out[15] = 1;\n        \n  return out;\n};\n\nmat4.fromQuat = function (out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.frustum = function (out, left, right, bottom, top, near, far) {\n    var rl = 1 / (right - left),\n        tb = 1 / (top - bottom),\n        nf = 1 / (near - far);\n    out[0] = (near * 2) * rl;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = (near * 2) * tb;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = (right + left) * rl;\n    out[9] = (top + bottom) * tb;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (far * near * 2) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.perspective = function (out, fovy, aspect, near, far) {\n    var f = 1.0 / Math.tan(fovy / 2),\n        nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (2 * far * near) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.perspectiveFromFieldOfView = function (out, fov, near, far) {\n    var upTan = Math.tan(fov.upDegrees * Math.PI/180.0),\n        downTan = Math.tan(fov.downDegrees * Math.PI/180.0),\n        leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0),\n        rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0),\n        xScale = 2.0 / (leftTan + rightTan),\n        yScale = 2.0 / (upTan + downTan);\n\n    out[0] = xScale;\n    out[1] = 0.0;\n    out[2] = 0.0;\n    out[3] = 0.0;\n    out[4] = 0.0;\n    out[5] = yScale;\n    out[6] = 0.0;\n    out[7] = 0.0;\n    out[8] = -((leftTan - rightTan) * xScale * 0.5);\n    out[9] = ((upTan - downTan) * yScale * 0.5);\n    out[10] = far / (near - far);\n    out[11] = -1.0;\n    out[12] = 0.0;\n    out[13] = 0.0;\n    out[14] = (far * near) / (near - far);\n    out[15] = 0.0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.ortho = function (out, left, right, bottom, top, near, far) {\n    var lr = 1 / (left - right),\n        bt = 1 / (bottom - top),\n        nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nmat4.lookAt = function (out, eye, center, up) {\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n        eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2],\n        centerx = center[0],\n        centery = center[1],\n        centerz = center[2];\n\n    if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&\n        Math.abs(eyey - centery) < glMatrix.EPSILON &&\n        Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n        return mat4.identity(out);\n    }\n\n    z0 = eyex - centerx;\n    z1 = eyey - centery;\n    z2 = eyez - centerz;\n\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} mat matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat4.str = function (a) {\n    return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n                    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n                    a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + \n                    a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat4.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n};\n\n\nmodule.exports = mat4;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/mat4.js\n ** module id = 8\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\nvar mat3 = require(\"./mat3.js\");\nvar vec3 = require(\"./vec3.js\");\nvar vec4 = require(\"./vec4.js\");\n\n/**\n * @class Quaternion\n * @name quat\n */\nvar quat = {};\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nquat.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nquat.rotationTo = (function() {\n    var tmpvec3 = vec3.create();\n    var xUnitVec3 = vec3.fromValues(1,0,0);\n    var yUnitVec3 = vec3.fromValues(0,1,0);\n\n    return function(out, a, b) {\n        var dot = vec3.dot(a, b);\n        if (dot < -0.999999) {\n            vec3.cross(tmpvec3, xUnitVec3, a);\n            if (vec3.length(tmpvec3) < 0.000001)\n                vec3.cross(tmpvec3, yUnitVec3, a);\n            vec3.normalize(tmpvec3, tmpvec3);\n            quat.setAxisAngle(out, tmpvec3, Math.PI);\n            return out;\n        } else if (dot > 0.999999) {\n            out[0] = 0;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            return out;\n        } else {\n            vec3.cross(tmpvec3, a, b);\n            out[0] = tmpvec3[0];\n            out[1] = tmpvec3[1];\n            out[2] = tmpvec3[2];\n            out[3] = 1 + dot;\n            return quat.normalize(out, out);\n        }\n    };\n})();\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nquat.setAxes = (function() {\n    var matr = mat3.create();\n\n    return function(out, view, right, up) {\n        matr[0] = right[0];\n        matr[3] = right[1];\n        matr[6] = right[2];\n\n        matr[1] = up[0];\n        matr[4] = up[1];\n        matr[7] = up[2];\n\n        matr[2] = -view[0];\n        matr[5] = -view[1];\n        matr[8] = -view[2];\n\n        return quat.normalize(out, quat.fromMat3(out, matr));\n    };\n})();\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nquat.clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nquat.fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nquat.copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nquat.set = vec4.set;\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nquat.identity = function(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nquat.setAxisAngle = function(out, axis, rad) {\n    rad = rad * 0.5;\n    var s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n};\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nquat.add = vec4.add;\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nquat.multiply = function(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n};\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nquat.mul = quat.multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nquat.scale = vec4.scale;\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateX = function (out, a, rad) {\n    rad *= 0.5; \n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n};\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateY = function (out, a, rad) {\n    rad *= 0.5; \n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        by = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n};\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateZ = function (out, a, rad) {\n    rad *= 0.5; \n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bz = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n};\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nquat.calculateW = function (out, a) {\n    var x = a[0], y = a[1], z = a[2];\n\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n    return out;\n};\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nquat.dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nquat.lerp = vec4.lerp;\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nquat.slerp = function (out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    var        omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if ( cosom < 0.0 ) {\n        cosom = -cosom;\n        bx = - bx;\n        by = - by;\n        bz = - bz;\n        bw = - bw;\n    }\n    // calculate coefficients\n    if ( (1.0 - cosom) > 0.000001 ) {\n        // standard case (slerp)\n        omega  = Math.acos(cosom);\n        sinom  = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {        \n        // \"from\" and \"to\" quaternions are very close \n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n    \n    return out;\n};\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {quat} c the third operand\n * @param {quat} d the fourth operand\n * @param {Number} t interpolation amount\n * @returns {quat} out\n */\nquat.sqlerp = (function () {\n  var temp1 = quat.create();\n  var temp2 = quat.create();\n  \n  return function (out, a, b, c, d, t) {\n    quat.slerp(temp1, a, d, t);\n    quat.slerp(temp2, b, c, t);\n    quat.slerp(out, temp1, temp2, 2 * t * (1 - t));\n    \n    return out;\n  };\n}());\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nquat.invert = function(out, a) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        dot = a0*a0 + a1*a1 + a2*a2 + a3*a3,\n        invDot = dot ? 1.0/dot : 0;\n    \n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0*invDot;\n    out[1] = -a1*invDot;\n    out[2] = -a2*invDot;\n    out[3] = a3*invDot;\n    return out;\n};\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nquat.conjugate = function (out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n * @function\n */\nquat.length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nquat.len = quat.length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nquat.squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nquat.sqrLen = quat.squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nquat.normalize = vec4.normalize;\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nquat.fromMat3 = function(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    var fTrace = m[0] + m[4] + m[8];\n    var fRoot;\n\n    if ( fTrace > 0.0 ) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5/fRoot;  // 1/(4w)\n        out[0] = (m[5]-m[7])*fRoot;\n        out[1] = (m[6]-m[2])*fRoot;\n        out[2] = (m[1]-m[3])*fRoot;\n    } else {\n        // |w| <= 1/2\n        var i = 0;\n        if ( m[4] > m[0] )\n          i = 1;\n        if ( m[8] > m[i*3+i] )\n          i = 2;\n        var j = (i+1)%3;\n        var k = (i+2)%3;\n        \n        fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\n        out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\n        out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\n    }\n    \n    return out;\n};\n\n/**\n * Returns a string representation of a quatenion\n *\n * @param {quat} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nquat.str = function (a) {\n    return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};\n\nmodule.exports = quat;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/quat.js\n ** module id = 9\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 3 Dimensional Vector\n * @name vec3\n */\nvar vec3 = {};\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nvec3.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(3);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nvec3.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(3);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n};\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nvec3.fromValues = function(x, y, z) {\n    var out = new glMatrix.ARRAY_TYPE(3);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nvec3.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n};\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nvec3.set = function(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nvec3.sub = vec3.subtract;\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nvec3.mul = vec3.multiply;\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nvec3.div = vec3.divide;\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    return out;\n};\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nvec3.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n};\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nvec3.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nvec3.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2];\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nvec3.dist = vec3.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec3.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2];\n    return x*x + y*y + z*z;\n};\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nvec3.sqrDist = vec3.squaredDistance;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec3.length = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nvec3.len = vec3.length;\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec3.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    return x*x + y*y + z*z;\n};\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nvec3.sqrLen = vec3.squaredLength;\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nvec3.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nvec3.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n};\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nvec3.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    var len = x*x + y*y + z*z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n        out[2] = a[2] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec3.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n};\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.cross = function(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2],\n        bx = b[0], by = b[1], bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n};\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nvec3.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n};\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nvec3.hermite = function (out, a, b, c, d, t) {\n  var factorTimes2 = t * t,\n      factor1 = factorTimes2 * (2 * t - 3) + 1,\n      factor2 = factorTimes2 * (t - 2) + t,\n      factor3 = factorTimes2 * (t - 1),\n      factor4 = factorTimes2 * (3 - 2 * t);\n  \n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  \n  return out;\n};\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nvec3.bezier = function (out, a, b, c, d, t) {\n  var inverseFactor = 1 - t,\n      inverseFactorTimesTwo = inverseFactor * inverseFactor,\n      factorTimes2 = t * t,\n      factor1 = inverseFactorTimesTwo * inverseFactor,\n      factor2 = 3 * t * inverseFactorTimesTwo,\n      factor3 = 3 * factorTimes2 * inverseFactor,\n      factor4 = factorTimes2 * t;\n  \n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  \n  return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nvec3.random = function (out, scale) {\n    scale = scale || 1.0;\n\n    var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n    var z = (glMatrix.RANDOM() * 2.0) - 1.0;\n    var zScale = Math.sqrt(1.0-z*z) * scale;\n\n    out[0] = Math.cos(r) * zScale;\n    out[1] = Math.sin(r) * zScale;\n    out[2] = z * scale;\n    return out;\n};\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nvec3.transformMat4 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2],\n        w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n};\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nvec3.transformMat3 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n};\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nvec3.transformQuat = function(out, a, q) {\n    // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return out;\n};\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateX = function(out, a, b, c){\n   var p = [], r=[];\n\t  //Translate point to the origin\n\t  p[0] = a[0] - b[0];\n\t  p[1] = a[1] - b[1];\n  \tp[2] = a[2] - b[2];\n\n\t  //perform rotation\n\t  r[0] = p[0];\n\t  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\n\t  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\n\n\t  //translate to correct position\n\t  out[0] = r[0] + b[0];\n\t  out[1] = r[1] + b[1];\n\t  out[2] = r[2] + b[2];\n\n  \treturn out;\n};\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateY = function(out, a, b, c){\n  \tvar p = [], r=[];\n  \t//Translate point to the origin\n  \tp[0] = a[0] - b[0];\n  \tp[1] = a[1] - b[1];\n  \tp[2] = a[2] - b[2];\n  \n  \t//perform rotation\n  \tr[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\n  \tr[1] = p[1];\n  \tr[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\n  \n  \t//translate to correct position\n  \tout[0] = r[0] + b[0];\n  \tout[1] = r[1] + b[1];\n  \tout[2] = r[2] + b[2];\n  \n  \treturn out;\n};\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateZ = function(out, a, b, c){\n  \tvar p = [], r=[];\n  \t//Translate point to the origin\n  \tp[0] = a[0] - b[0];\n  \tp[1] = a[1] - b[1];\n  \tp[2] = a[2] - b[2];\n  \n  \t//perform rotation\n  \tr[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\n  \tr[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\n  \tr[2] = p[2];\n  \n  \t//translate to correct position\n  \tout[0] = r[0] + b[0];\n  \tout[1] = r[1] + b[1];\n  \tout[2] = r[2] + b[2];\n  \n  \treturn out;\n};\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec3.forEach = (function() {\n    var vec = vec3.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 3;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\n        }\n        \n        return a;\n    };\n})();\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nvec3.angle = function(a, b) {\n   \n    var tempA = vec3.fromValues(a[0], a[1], a[2]);\n    var tempB = vec3.fromValues(b[0], b[1], b[2]);\n \n    vec3.normalize(tempA, tempA);\n    vec3.normalize(tempB, tempB);\n \n    var cosine = vec3.dot(tempA, tempB);\n\n    if(cosine > 1.0){\n        return 0;\n    } else {\n        return Math.acos(cosine);\n    }     \n};\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec3} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nvec3.str = function (a) {\n    return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n};\n\nmodule.exports = vec3;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/vec3.js\n ** module id = 10\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 4 Dimensional Vector\n * @name vec4\n */\nvar vec4 = {};\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nvec4.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nvec4.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nvec4.fromValues = function(x, y, z, w) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n};\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nvec4.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nvec4.set = function(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n};\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nvec4.sub = vec4.subtract;\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    out[3] = a[3] * b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nvec4.mul = vec4.multiply;\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    out[3] = a[3] / b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nvec4.div = vec4.divide;\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    out[3] = Math.min(a[3], b[3]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    out[3] = Math.max(a[3], b[3]);\n    return out;\n};\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nvec4.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n};\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nvec4.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nvec4.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2],\n        w = b[3] - a[3];\n    return Math.sqrt(x*x + y*y + z*z + w*w);\n};\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nvec4.dist = vec4.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec4.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2],\n        w = b[3] - a[3];\n    return x*x + y*y + z*z + w*w;\n};\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nvec4.sqrDist = vec4.squaredDistance;\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec4.length = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    return Math.sqrt(x*x + y*y + z*z + w*w);\n};\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nvec4.len = vec4.length;\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec4.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    return x*x + y*y + z*z + w*w;\n};\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nvec4.sqrLen = vec4.squaredLength;\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nvec4.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = -a[3];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nvec4.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n};\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nvec4.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    var len = x*x + y*y + z*z + w*w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n        out[0] = x * len;\n        out[1] = y * len;\n        out[2] = z * len;\n        out[3] = w * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec4.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n};\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nvec4.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nvec4.random = function (out, scale) {\n    scale = scale || 1.0;\n\n    //TODO: This is a pretty awful way of doing this. Find something better.\n    out[0] = glMatrix.RANDOM();\n    out[1] = glMatrix.RANDOM();\n    out[2] = glMatrix.RANDOM();\n    out[3] = glMatrix.RANDOM();\n    vec4.normalize(out, out);\n    vec4.scale(out, out, scale);\n    return out;\n};\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nvec4.transformMat4 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2], w = a[3];\n    out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n    out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n    out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n    out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n    return out;\n};\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nvec4.transformQuat = function(out, a, q) {\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec4.forEach = (function() {\n    var vec = vec4.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 4;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\n        }\n        \n        return a;\n    };\n})();\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec4} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nvec4.str = function (a) {\n    return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};\n\nmodule.exports = vec4;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/vec4.js\n ** module id = 11\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 2 Dimensional Vector\n * @name vec2\n */\nvar vec2 = {};\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nvec2.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(2);\n    out[0] = 0;\n    out[1] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nvec2.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(2);\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n};\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nvec2.fromValues = function(x, y) {\n    var out = new glMatrix.ARRAY_TYPE(2);\n    out[0] = x;\n    out[1] = y;\n    return out;\n};\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nvec2.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n};\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nvec2.set = function(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n};\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nvec2.sub = vec2.subtract;\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nvec2.mul = vec2.multiply;\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nvec2.div = vec2.divide;\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    return out;\n};\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nvec2.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n};\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nvec2.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nvec2.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nvec2.dist = vec2.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec2.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x*x + y*y;\n};\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nvec2.sqrDist = vec2.squaredDistance;\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec2.length = function (a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nvec2.len = vec2.length;\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec2.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1];\n    return x*x + y*y;\n};\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nvec2.sqrLen = vec2.squaredLength;\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nvec2.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nvec2.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n};\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nvec2.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x*x + y*y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec2.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n};\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nvec2.cross = function(out, a, b) {\n    var z = a[0] * b[1] - a[1] * b[0];\n    out[0] = out[1] = 0;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nvec2.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nvec2.random = function (out, scale) {\n    scale = scale || 1.0;\n    var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n    out[0] = Math.cos(r) * scale;\n    out[1] = Math.sin(r) * scale;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat2 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat2d = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat3 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat4 = function(out, a, m) {\n    var x = a[0], \n        y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec2.forEach = (function() {\n    var vec = vec2.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 2;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1];\n        }\n        \n        return a;\n    };\n})();\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec2} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nvec2.str = function (a) {\n    return 'vec2(' + a[0] + ', ' + a[1] + ')';\n};\n\nmodule.exports = vec2;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/vec2.js\n ** module id = 12\n ** module chunks = 0\n **/","/**\n * A color\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Color\n{\n    /**\n     * Constructor\n     *\n     * @param {number} r Red color in the range [0-255]\n     * @param {number} g Green color in the range [0-255]\n     * @param {number} b Blue color in the range [0-255]\n     * @param {number=} a Opacity in the range [0-255]\n     */\n    constructor(r, g, b, a = 1.0)\n    {\n        /**\n         * Red color in the range [0-1]\n         *\n         * @type {number}\n         * @public\n         */\n        this.r = (r / 255.0);\n\n        /**\n         * Green color in the range [0-1]\n         *\n         * @type {number}\n         * @public\n         */\n        this.g = (g / 255.0);\n\n        /**\n         * Red color in the range [0-1]\n         *\n         * @type {number}\n         * @public\n         */\n        this.b = (b / 255.0);\n\n        /**\n         * Opacity in the range [0-1]\n         *\n         * @type {number}\n         * @public\n         */\n        this.a = a ? (a / 255.0) : 1.0;\n    }\n\n    /**\n     * Set color\n     *\n     * @param {number} r Red color in the range [0-255]\n     * @param {number} g Green color in the range [0-255]\n     * @param {number} b Blue color in the range [0-255]\n     * @param {number=} a Opacity in the range [0-255]\n     */\n    set(r, g, b, a = 1.0)\n    {\n        this.r = (r / 255.0);\n        this.g = (g / 255.0);\n        this.b = (b / 255.0);\n        this.a = a ? (a / 255.0) : 1.0;\n    }\n\n    /**\n     * Check if the given Color instance is equal to this one\n     *\n     * @param {Color} color A Color instance\n     * @return {boolean} True if the two colors are equals, otherwise false\n     */\n    isEqual(color)\n    {\n        return (this.r == color.r && this.g == color.g && this.b == color.b && this.a == color.a);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Color.js\n **/","import {Light} from './Light.js';\n\n/**\n * A directional light\n *\n * @extends {Light}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class DirectionalLight extends Light\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        super();\n\n        /**\n         * Light's direction\n         *\n         * @type {Array.<number>}\n         * @private\n         */\n        this.direction = [];\n    }\n\n    /**\n     * Set direction\n     *\n     * @param {number} x Direction on X\n     * @param {number} y Direction on Y\n     * @param {number} z Direction on Z\n     */\n    setDirection(x, y, z) \n    {\n        this.direction = [x, y, z];\n    }\n\n    /**\n     * Get direction\n     *\n     * @return {Array.<number>} A vector with values for each axis\n     */\n    getDirection() \n    {\n        return this.direction; \n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Lights/DirectionalLight.js\n **/","import {Color} from '../Color.js';\nimport {Node} from '../Scene/Node.js';\n\n/**\n * A light\n\n * @extends {Node}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Light extends Node\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        super();\n\n        /**\n         * Ambient color\n         *\n         * @type {Color}\n         * @private\n         */\n        this.ambient = new Color(255, 255, 255);\n\n        /**\n         * Diffuse color\n         *\n         * @type {Color}\n         * @private\n         */\n        this.diffuse = new Color(255, 255, 255);\n\n        /**\n         * Specular color\n         *\n         * @type {Color}\n         * @private\n         */\n        this.specular = new Color(255, 255, 255);\n    }\n\n    /**\n     * Visit the node and his children\n     *\n     * @param {RenderTarget} renderTarget Renderer who called this method\n     */\n    visit(renderTarget) \n    {\n        renderTarget.getRenderAPI().bindLight(this);\n    }\n\n    /**\n     * Set ambient color\n     *\n     * @param {number} r Red value in the range 0 to 255\n     * @param {number} g Green value in the range 0 to 255\n     * @param {number} b Blue value in the range 0 to 255\n     */\n    setAmbientColor(r, g, b) \n    {\n        this.ambient.set(r, g, b);\n    }\n\n    /**\n     * Set diffuse color\n     *\n     * @param {number} r Red value in the range 0 to 255\n     * @param {number} g Green value in the range 0 to 255\n     * @param {number} b Blue value in the range 0 to 255\n     */\n    setDiffuseColor(r, g, b) \n    {\n        this.diffuse.set(r, g, b);\n    }\n\n    /**\n     * Set specular color\n     *\n     * @param {number} r Red value in the range 0 to 255\n     * @param {number} g Green value in the range 0 to 255\n     * @param {number} b Blue value in the range 0 to 255\n     */\n    setSpecularColor(r, g, b) \n    {\n        this.specular.set(r, g, b);\n    }\n\n    /**\n     * Get ambient color\n     *\n     * @return {Color} A color instance\n     */\n    getAmbientColor() \n    {\n        return this.ambient;\n    }\n\n    /**\n     * Get diffuse color\n     *\n     * @return {Color} A color instance\n     */\n    getDiffuseColor() \n    {\n        return this.diffuse;\n    }\n\n    /**\n     * Get specular color\n     *\n     * @return {Color} A color instance\n     */\n    getSpecularColor() \n    {\n        return this.specular;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Lights/Light.js\n **/","import {Transformable} from '../Transformable.js';\n\n/**\n * A node element is an element of a scene\n *\n * @description A Node can represent something like a light, a mesh, a sprite, a camera or a text\n * @extends {Transformable}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Node extends Transformable\n{\n    /**\n     * Constructor\n     *\n     * @param {string=} name A string\n     */\n    constructor(name = '')\n    {\n        super();\n\n        /**\n         * Node's children\n         *\n         * @type {Array.<Node>}\n         * @private\n         */\n        this.children = [];\n\n        /**\n         * Name, useful to retrieve the node\n         *\n         * @type {string}\n         * @private\n         */\n        this.name = name;\n\n        /**\n         * Node's parent\n         *\n         * @type {?Node}\n         * @private\n         */\n        this.parent = null;\n    }\n\n    /**\n     * Add a child to the node\n     *\n     * @param {Node} node A Node instance\n     */\n    addChild(node)\n    {\n        if (node == this)\n            return;\n\n        // Detach node from his previous parent\n        if (node.parent)\n            node.parent.removeChild(node);\n\n        // Add as a child\n        this.children.push(node);\n        node.parent = this;\n    }\n\n    /**\n     * Find the child with the given name\n     *\n     * @param {string} name A string\n     * @return {?Node} A Node instance of null\n     */\n    findChild(name)\n    {\n        for (let i = 0; i < this.children.length; i++)\n        {\n            if (this.children[i].name == name)\n                return this.children[i];\n            else\n            {\n                let child = this.children[i].findChild(name);\n                if (child)\n                    return child;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Remove a child from the node\n     *\n     * @param {Node} node A Node instance\n     * @return {boolean} True if the operation is a success\n     */\n    removeChild(node)\n    {\n        let index = this.children.indexOf(node);\n        if (index != -1)\n        {\n            this.children.splice(index, 1);\n            node.parent = null;\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Set the name to easily retrieve it later\n     *\n     * @param {string} name A string\n     */\n    setName(name)\n    {\n        this.name = name;\n    }\n\n    /**\n     * Update the node and his children\n     *\n     * @param {number} deltaTime A floating value representing time elapsed between two frames\n     * @param {boolean} parentUpdated Indicate if the parent element have been updated\n     * @return {boolean} True if the node have been updated\n     */\n    update(deltaTime, parentUpdated)\n    {\n        let parentMatrix = this.parent ? this.parent.getTransformationMatrix() : null;\n        return this.computeTransformationMatrix(parentMatrix, parentUpdated);\n    }\n\n    /**\n     * Visit the node and his children\n     *\n     * @param {RenderTarget} renderTarget Renderer who called this method\n     */\n    visit(renderTarget) { };\n\n    /**\n     * Return Node's children\n     *\n     * @return {Array.<Node>} An array of Node\n     */\n    getChildren()\n    {\n        return this.children;\n    }\n\n    /**\n     * Indicate if the current node is the scene's root\n     *\n     * @return {boolean} True if it's the root node, otherwise false\n     */\n    isRoot()\n    {\n        return (this.parent === null);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Scene/Node.js\n **/","let glMatrix = require('gl-matrix');\n\n/**\n * Transformable: Manage matrix's transformations\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Transformable\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n         * The result matrix\n         *\n         * @type {glMatrix.mat4}\n         * @private\n         */\n        this.matrix = glMatrix.mat4.create();\n\n        /**\n         * The normal matrix: inverse and transpose the transformation matrix\n         *\n         * @type {glMatrix.mat4}\n         * @private\n         */\n        this.normalMatrix = glMatrix.mat4.create();\n\n        /**\n         * Origin, useful to apply rotation relatively to a point in space\n         *\n         * @type {glMatrix.vec3}\n         * @private\n         */\n        this.origin = glMatrix.vec3.create();\n\n        /**\n         * Position\n         *\n         * @type {glMatrix.vec3}\n         * @private\n         */\n        this.position = glMatrix.vec3.create();\n\n        /**\n         * Rotation\n         *\n         * @type {glMatrix.quat}\n         * @private\n         */\n        this.rotation = glMatrix.quat.create();\n\n        /**\n         * Matrix with rotation data\n         *\n         * @type {glMatrix.mat4}\n         * @private\n         */\n        this.rotationMatrix = glMatrix.mat4.create();\n\n        /**\n         * Scale\n         *\n         * @type {glMatrix.vec3}\n         * @private\n         */\n        this.scale = glMatrix.vec3.fromValues(1.0, 1.0, 1.0);\n\n        /**\n         * Indicate if the matrix/cache need to be updated\n         *\n         * @type {boolean}\n         * @private\n         */\n        this.needTransformUpdate = true;\n    }\n\n    /**\n     * Look at the given position\n     *\n     * @param {Array.<number>|Float32Array|Float64Array} position An array with value for each axis\n     * @param {Array.<number>|Float32Array|Float64Array=} up An array with value for each axis\n     */\n    lookAt(position = [0, 0, 0], up = [0, 1, 0])\n    {\n        // Useful variables\n        let xAxis = glMatrix.vec3.create();\n        let yAxis = glMatrix.vec3.create();\n        let zAxis = glMatrix.vec3.create();\n\n        // Compute rotation on z-axis\n        glMatrix.vec3.subtract(zAxis, position, this.position);\n        glMatrix.vec3.normalize(zAxis, zAxis);\n\n        // Compute rotation on z-axis\n        glMatrix.vec3.subtract(zAxis, position, this.position);\n        glMatrix.vec3.normalize(zAxis, zAxis);\n\n        // Compute rotation on x-axis\n        glMatrix.vec3.cross(xAxis, up, zAxis);\n        glMatrix.vec3.normalize(xAxis, xAxis);\n\n        // Compute rotation on y-axis\n        glMatrix.vec3.cross(yAxis, zAxis, xAxis);\n\n        // Compute rotation matrix\n        let matrix = glMatrix.mat4.create();\n        matrix[0]  = xAxis[0];\n        matrix[1]  = xAxis[1];\n        matrix[2]  = xAxis[2];\n        matrix[3]  = 0;\n\n        matrix[4]  = yAxis[0];\n        matrix[5]  = yAxis[1];\n        matrix[6]  = yAxis[2];\n        matrix[7]  = 0;\n\n        matrix[8]  = zAxis[0];\n        matrix[9]  = zAxis[1];\n        matrix[10] = zAxis[2];\n        matrix[11] = 0;\n\n        matrix[12] = 0;\n        matrix[13] = 0;\n        matrix[14] = 0;\n        matrix[15] = 1;\n\n        // Send result\n        this.setRotationFromMatrix(matrix);\n    }\n\n    /**\n     * Set origin\n     *\n     * @param {number} x Origin on X\n     * @param {number} y Origin on Y\n     * @param {number} z Origin on Z\n     */\n    setOrigin(x, y, z)\n    {\n        glMatrix.vec3.set(this.origin, x, y, z);\n        this.needTransformUpdate = true;\n    }\n\n    /**\n     * Set position\n     *\n     * @param {number} x Position on X\n     * @param {number} y Position on Y\n     * @param {number} z Position on Z\n     */\n    setPosition(x, y, z)\n    {\n        glMatrix.vec3.set(this.position, x, y, z);\n        this.needTransformUpdate = true;\n    }\n\n    /**\n     * Set rotation using values in degrees\n     *\n     * @param {number} x Rotation on X in degrees\n     * @param {number} y Rotation on Y in degrees\n     * @param {number} z Rotation on Z in degrees\n     */\n    setRotation(x, y, z)\n    {\n        // Compute rotation matrix\n        glMatrix.mat4.identity(this.rotationMatrix);\n        glMatrix.mat4.rotateX(this.rotationMatrix, this.rotationMatrix, glMatrix.glMatrix.toRadian(x));\n        glMatrix.mat4.rotateY(this.rotationMatrix, this.rotationMatrix, glMatrix.glMatrix.toRadian(y));\n        glMatrix.mat4.rotateZ(this.rotationMatrix, this.rotationMatrix, glMatrix.glMatrix.toRadian(z));\n\n        // Compute quaterion\n        let m3 = glMatrix.mat3.create();\n        glMatrix.mat3.fromMat4(m3, this.rotationMatrix);\n        glMatrix.quat.fromMat3(this.rotation, m3);\n\n        this.needTransformUpdate = true;\n    }\n\n    /**\n     * Set rotation from a quaternion\n     *\n     * @param {glMatrix.quat} quaternion A quaternion\n     */\n    setRotationFromQuaternion(quaternion)\n    {\n        glMatrix.mat4.fromQuat(this.rotationMatrix, quaternion);\n\n        this.rotation               = quaternion;\n        this.needTransformUpdate    = true;\n    }\n\n    /**\n     * Set rotation from a rotation matrix\n     *\n     * @param {glMatrix.mat4} matrix A Matrix\n     */\n    setRotationFromMatrix(matrix)\n    {\n        glMatrix.quat.fromMat3(this.rotation, matrix);\n\n        this.rotationMatrix         = matrix;\n        this.needTransformUpdate    = true;\n    }\n\n    /**\n     * Set scale\n     *\n     * @param {number} x Position on X\n     * @param {number} y Position on Y\n     * @param {number} z Position on Z\n     */\n    setScale(x, y, z)\n    {\n        glMatrix.vec3.set(this.scale, x, y, z);\n        this.needTransformUpdate = true;\n    }\n\n    /**\n     * Update matrix\n     *\n     * @param {?glMatrix.mat4} parentMatrix Parent transformable's matrix\n     * @param {boolean} forceUpdate True to force an update\n     * @return {boolean} True if the matrix have been updated, otherwise false\n     */\n    computeTransformationMatrix(parentMatrix, forceUpdate)\n    {\n        // Avoid useless updates\n        if (!forceUpdate && !this.needTransformUpdate)\n            return false;\n\n        // Compute matrix\n        glMatrix.mat4.identity(this.matrix);\n        glMatrix.mat4.translate(this.matrix, this.matrix, this.position);\n        glMatrix.mat4.multiply(this.matrix, this.matrix, this.rotationMatrix);\n        glMatrix.mat4.scale(this.matrix, this.matrix, this.scale);\n\n        // Apply parent's transformations\n        if (parentMatrix)\n            glMatrix.mat4.multiply(this.matrix, parentMatrix, this.matrix);\n\n        // Compute inverse matrix\n        glMatrix.mat4.invert(this.normalMatrix, this.matrix);\n        glMatrix.mat4.transpose(this.normalMatrix, this.normalMatrix);\n\n        this.needTransformUpdate = false;\n\n        return true;\n    }\n\n    /**\n     * Return computed matrix\n     *\n     * @return {glMatrix.mat4} A reference to the object's matrix\n     */\n    getTransformationMatrix()\n    {\n        return this.matrix;\n    }\n\n    /**\n     * Return computed normal matrix\n     *\n     * @return {glMatrix.mat4} A matrix\n     */\n    getNormalMatrix()\n    {\n        return this.normalMatrix;\n    }\n\n    /**\n     * Return the origin\n     *\n     * @return {glMatrix.vec3} A vector with the value for each axis\n     */\n    getOrigin()\n    {\n        return this.origin;\n    }\n\n    /**\n     * Return relative position\n     *\n     * @return {glMatrix.vec3} A vector with the value for each axis\n     */\n    getPosition()\n    {\n        return this.position;\n    }\n\n    /**\n     * Return the rotation in degrees\n     *\n     * @return {Array.<number>} A vector with the value for each axis in degrees\n     * @todo Implement this function\n     */\n    getRotation()\n    {\n        throw '\\'getRotation\\' is not implemented for now …';\n    }\n\n    /**\n     * Return the scale\n     *\n     * @return {glMatrix.vec3} A vector with the value for each axis\n     */\n    getScale()\n    {\n        return this.scale;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Transformable.js\n **/","import {BlendMode} from './BlendMode.js';\n\n/**\n * A rendering state\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class StateBlock\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n         * Blend mode\n         *\n         * @type {BlendMode}\n         * @public\n         */\n        this.blendMode = new BlendMode();\n\n        /**\n         * Depth function to use\n         *\n         * @type {DepthFunction}\n         * @default {DepthFunction.Less}\n         * @public\n         */\n        this.depthFunction = DepthFunction.Less;\n\n        /**\n         * Indicate if we want to write in the depth buffer\n         *\n         * @type {boolean}\n         * @default {true}\n         * @public\n         */\n        this.depthWrite = true;\n\n        /**\n         * Indicate if we want to test pixels with values in the depth buffer\n         *\n         * @type {boolean}\n         * @default {true}\n         * @public\n         */\n        this.depthTest = true;\n\n        /**\n         * Drawing mode\n         *\n         * @type {DrawingMode}\n         * @default {DrawingMode.Triangles}\n         * @public\n         */\n        this.drawingMode = DrawingMode.Triangles;\n\n        /**\n         * Face culling\n         *\n         * @type {FaceCulling}\n         * @default {FaceCulling.Back}\n         * @public\n         */\n        this.faceCulling = FaceCulling.Back;\n\n        /**\n         * Stencil function to use\n         *\n         * @type {StencilFunction}\n         * @default {StencilFunction.Less}\n         * @public\n         */\n        this.stencilFunction = StencilFunction.Less;\n\n        /**\n         * Stencil reference value\n         *\n         * @type {number}\n         * @default {0}\n         * @public\n         */\n        this.stencilReference = 0;\n\n        /**\n         * Stencil mask value\n         *\n         * @type {number}\n         * @default {255}\n         * @public\n         */\n        this.stencilMask = 255;\n\n        /**\n         * Indicate if stencil test is active\n         *\n         * @type {boolean}\n         * @default {false}\n         * @public\n         */\n        this.stencilTest = false;\n\n        /**\n         * Value to write in the stencil buffer when stencil is active\n         *\n         * @type {number}\n         * @default {0xFF}\n         * @public\n         */\n        this.stencilWrite = 0xFF;\n\n        /**\n         * Operation to execute when stencil test failed\n         *\n         * @type {StencilOperation}\n         * @default {StencilOperation.Keep}\n         * @public\n         */\n        this.stencilTestFail = StencilOperation.Keep;\n\n        /**\n         * Operation to execute when stencil test failed using depth buffer\n         *\n         * @type {StencilOperation}\n         * @default {StencilOperation.Keep}\n         * @public\n         */\n        this.stencilDepthTestFail = StencilOperation.Keep;\n\n        /**\n         * Operation to execute when stencil test is a success\n         *\n         * @type {StencilOperation}\n         * @default {StencilOperation.Keep}\n         * @public\n         */\n        this.stencilSuccess = StencilOperation.Keep;\n    }\n\n    /**\n     * Check if the given StateBlock instance is equal to this one\n     *\n     * @param {StateBlock} state A StateBlock instance\n     * @return {boolean} True if the two states are equals, otherwise false\n     */\n    isEqual(state)\n    {\n        return (this.blendMode.isEqual(state.blendMode)                     &&\n                this.depthFunction          == state.depthFunction          &&\n                this.depthWrite             == state.depthWrite             &&\n                this.depthTest              == state.depthTest              &&\n                this.stencilFunction        == state.stencilFunction        &&\n                this.stencilReference       == state.stencilReference       &&\n                this.stencilMask            == state.stencilMask            &&\n                this.stencilTest            == state.stencilTest            &&\n                this.stencilWrite           == state.stencilWrite           &&\n                this.stencilTestFail        == state.stencilTestFail        &&\n                this.stencilDepthTestFail   == state.stencilDepthTestFail   &&\n                this.stencilSuccess         == state.stencilSuccess );\n    }\n}\n\n/**\n * Depth function to use\n */\nexport class DepthFunction {}\n\n/**\n * Never\n *\n * @type {number}\n */\nDepthFunction.Never = 0;\n\n/**\n * Less\n *\n * @type {number}\n */\nDepthFunction.Less = 1;\n\n/**\n * Equal\n *\n * @type {number}\n */\nDepthFunction.Equal = 2;\n\n/**\n * LessEqual\n *\n * @type {number}\n */\nDepthFunction.LessEqual = 3;\n\n/**\n * Greater\n *\n * @type {number}\n */\nDepthFunction.Greater = 4;\n\n/**\n * NotEqual\n *\n * @type {number}\n */\nDepthFunction.NotEqual = 5;\n\n/**\n * GreaterEqual\n *\n * @type {number}\n */\nDepthFunction.GreaterEqual = 6;\n\n/**\n * Always\n *\n * @type {number}\n */\nDepthFunction.Always = 7;\n\n/**\n* Drawing modes\n*/\nexport class DrawingMode {}\n\n/**\n * Draw as points\n *\n * @type {number}\n */\nDrawingMode.Points = 0;\n\n/**\n * Draw as lines\n *\n * @type {number}\n */\nDrawingMode.Lines = 1;\n\n/**\n * Draw as lines strip\n *\n * @type {number}\n */\nDrawingMode.LinesStrip = 2;\n\n/**\n * Draw as lines loop\n *\n * @type {number}\n */\nDrawingMode.LinesLoop = 3;\n\n/**\n * Draw as triangles\n *\n * @type {number}\n */\nDrawingMode.Triangles = 4;\n\n/**\n * Draw as triangles strip\n *\n * @type {number}\n */\nDrawingMode.TrianglesStrip = 5;\n\n/**\n * Draw as triangles fan\n *\n * @type {number}\n */\nDrawingMode.TrianglesFan = 6;\n\n/**\n * Face culling\n */\nexport class FaceCulling {}\n\n/**\n * Don't draw back face\n *\n * @type {number}\n */\nFaceCulling.Back = 0;\n\n/**\n * Don't draw front face\n *\n * @type {number}\n */\nFaceCulling.Front = 1;\n\n/**\n * Draw both faces, disable face culling\n *\n * @type {number}\n */\nFaceCulling.None = 2;\n\n/**\n * Stencil functions\n */\nexport class StencilFunction {}\n\n/**\n * Never\n *\n * @type {number}\n */\nStencilFunction.Never = 0;\n\n/**\n * Less\n *\n * @type {number}\n */\nStencilFunction.Less = 1;\n\n/**\n * Equal\n *\n * @type {number}\n */\nStencilFunction.Equal = 2;\n\n/**\n * LessEqual\n *\n * @type {number}\n */\nStencilFunction.LessEqual = 3;\n\n/**\n * Greater\n *\n * @type {number}\n */\nStencilFunction.Greater = 4;\n\n/**\n * NotEqual\n *\n * @type {number}\n */\nStencilFunction.NotEqual = 5;\n\n/**\n * GreaterEqual\n *\n * @type {number}\n */\nStencilFunction.GreaterEqual = 6;\n\n/**\n * Always\n *\n * @type {number}\n */\nStencilFunction.Always = 7;\n\n/**\n * Stencil operations\n */\nexport class StencilOperation {}\n\n/**\n * Keep\n *\n * @type {number}\n */\nStencilOperation.Keep = 0;\n\n/**\n * Zero\n *\n * @type {number}\n */\nStencilOperation.Zero = 1;\n\n/**\n * Replace\n *\n * @type {number}\n */\nStencilOperation.Replace = 2;\n\n/**\n * Increment\n *\n * @type {number}\n */\nStencilOperation.Increment = 3;\n\n/**\n * Decrement\n *\n * @type {number}\n */\nStencilOperation.Decrement = 4;\n\n/**\n * Invert\n *\n * @type {number}\n */\nStencilOperation.Invert = 5;\n\n/**\n * IncrementWrap\n *\n * @type {number}\n */\nStencilOperation.IncrementWrap = 6;\n\n/**\n * DecrementWrap\n *\n * @type {number}\n */\nStencilOperation.DecrementWrap = 7;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/StateBlock.js\n **/","/**\n * A class to load file using Ajax\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class FileLoader\n{\n    /**\n     * Load a file\n     *\n     * @param {string} filePath Path to the file to load\n     * @param {function(boolean, string, Object=)} callback Callback\n     * @param {Object=} userData User data\n     */\n    static load(filePath, callback, userData)\n    {\n        let reader = new XMLHttpRequest();\n        reader.onreadystatechange = () =>\n        {\n            if (reader.readyState === 4 && (reader.status === 200 || reader.status === 0))\n                callback(true, reader.responseText, userData);\n        };\n        reader.open('GET', filePath, true);\n        reader.send();\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Loaders/FileLoader.js\n **/","import {ContextResource} from './ContextResource.js';\nimport {VertexFormat, VertexElement} from './VertexFormat.js';\n\n/**\n * A geometry\n *\n * @extends {ContextResource}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Geometry extends ContextResource\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        super();\n\n        /**\n         * Colors\n         *\n         * @type {Float32Array}\n         * @private\n         */\n        this.colors = null;\n\n        /**\n         * Indices\n         *\n         * @type {Uint16Array}\n         * @private\n         */\n        this.indices = null;\n\n        /**\n         * Normals\n         *\n         * @type {Float32Array}\n         * @private\n         */\n        this.normals = null;\n\n        /**\n         * Positions\n         *\n         * @type {Float32Array}\n         * @private\n         */\n        this.positions = null;\n\n        /**\n         * Uvs\n         *\n         * @type {Float32Array}\n         * @private\n         */\n        this.uvs = null;\n\n        /**\n         * Format\n         *\n         * @type {VertexFormat}\n         * @private\n         */\n        this.vertexFormat = null;\n    }\n\n    /**\n     * Set vertices colors\n     *\n     * @param {Float32Array} colors An array of float values representing colors (r, g, b, a, r, g, b, a, …)\n     */\n    setColors(colors)\n    {\n        this.colors = new Float32Array(colors);\n\n        // Indicate that an attribute of the geometry need an update.\n        if (this.vertexFormat)\n            this.vertexFormat.setStreamAsWaitingUpdate(VertexElement.Usage.Color, true);\n    }\n\n    /**\n     * Set indices\n     *\n     * @param {Uint16Array} indices An array of unsigned integer values representing indices order\n     */\n    setIndices(indices)\n    {\n        this.indices = new Uint16Array(indices);\n\n        // Indicate that indices need an update.\n        if (this.vertexFormat)\n            this.vertexFormat.setIndicesAsWaitingUpdate(true);\n    }\n\n    /**\n     * Set vertices normals\n     *\n     * @param {Float32Array} normals An array of float values representing normals (x, y, z, x, y, z, …)\n     */\n    setNormals(normals)\n    {\n        this.normals = new Float32Array(normals);\n\n        // Indicate that an attribut of the geometry need an update.\n        if (this.vertexFormat)\n            this.vertexFormat.setStreamAsWaitingUpdate(VertexElement.Usage.Normal, true);\n    }\n\n    /**\n     * Set vertices positions\n     *\n     * @param {Float32Array} positions An array of float values representing positions (x, y, z, x, y, z, …)\n     */\n    setPositions(positions)\n    {\n        this.positions = new Float32Array(positions);\n\n        // Indicate that an attribute of the geometry need an update.\n        if (this.vertexFormat)\n            this.vertexFormat.setStreamAsWaitingUpdate(VertexElement.Usage.Position, true);\n    }\n\n    /**\n     * Set texture coordinates (uvs) for each vertex\n     *\n     * @param {Float32Array} uvs An array of float values representing texture coordinates (u, v, u, v, …)\n     */\n    setTextureUVs(uvs)\n    {\n        this.uvs = new Float32Array(uvs);\n\n        // Indicate that an attribute of the geometry need an update\n        if (this.vertexFormat)\n            this.vertexFormat.setStreamAsWaitingUpdate(VertexElement.Usage.UVS, true);\n    };\n\n    /**\n     * Set geometry's format\n     *\n     * @param {VertexFormat} vertexFormat A VertexFormat instance\n     */\n    setVertexFormat(vertexFormat)\n    {\n        this.vertexFormat = vertexFormat;\n    }\n\n    /**\n     * Get format\n     *\n     * @return {VertexFormat} A VertexFormat instance\n     */\n    getVertexFormat()\n    {\n        return this.vertexFormat;\n    }\n\n    /**\n     * Return index count\n     *\n     * @return {number} Indices array's length\n     */\n    getIndexCount()\n    {\n        return this.indices.length;\n    }\n\n    /**\n     * Return the indices\n     *\n     * @return {Uint16Array} Indices array\n     */\n    getIndices()\n    {\n        return this.indices;\n    }\n\n    /**\n     * Return an array with the color for each vertex\n     *\n     * @return {Float32Array} An array with the format [r, g, b, a, r, g, b, a, …]\n     */\n   getVerticesColors()\n    {\n        return this.colors;\n    }\n\n    /**\n     * Return an array with the position for each vertex\n     *\n     * @return {Float32Array} An array with the format [x, y, z, x, y, z, …]\n     */\n    getVerticesPositions()\n    {\n        return this.positions;\n    }\n\n    /**\n     * Return an array with the normal for each vertex\n     *\n     * @return {Float32Array} An array with the format [x, y, z, x, y, z, …]\n     */\n    getVerticesNormals()\n    {\n        return this.normals;\n    }\n\n    /**\n     * Return an array with the texture coordinates for each vertex\n     *\n     * @return {Float32Array} An array with the format [u, v, u, v, …]\n     */\n    getVerticesUVs()\n    {\n        return this.uvs;\n    }\n\n    /**\n     * Create a cube\n     *\n     * @param {number} width Width\n     * @param {number} height Height\n     * @param {number} depth Depth\n     * @return {Geometry} A Geometry instance\n     */\n    static createCube(width, height, depth)\n    {\n        let geometry = new Geometry();\n\n        // Set format\n        let format = new VertexFormat();\n        format.add(new VertexElement(VertexElement.Usage.Position, 0, VertexElement.Type.Float, 3, false));\n        format.add(new VertexElement(VertexElement.Usage.Color, 2, VertexElement.Type.Float, 4, false));\n        format.add(new VertexElement(VertexElement.Usage.UVS, 1, VertexElement.Type.Float, 2, false));\n        format.add(new VertexElement(VertexElement.Usage.Normal, 3, VertexElement.Type.Float, 3, false));\n        geometry.setVertexFormat(format);\n\n        // Set positions\n        let positions = new Float32Array([\n            -width, -height,  depth,\n            width, -height,  depth,\n            width,  height,  depth,\n            -width,  height,  depth,\n\n            -width, -height, -depth,\n            -width,  height, -depth,\n            width,  height, -depth,\n            width, -height, -depth,\n\n            -width,  height, -depth,\n            -width,  height,  depth,\n            width,  height,  depth,\n            width,  height, -depth,\n\n            -width, -height, -depth,\n            width, -height, -depth,\n            width, -height,  depth,\n            -width, -height,  depth,\n\n            width, -height, -depth,\n            width,  height, -depth,\n            width,  height,  depth,\n            width, -height,  depth,\n\n            -width, -height, -depth,\n            -width, -height,  depth,\n            -width,  height,  depth,\n            -width,  height, -depth\n        ]);\n        geometry.setPositions(positions);\n\n        // Set colors\n        let colors = new Float32Array([\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1\n        ]);\n        geometry.setColors(colors);\n\n        // Texture uvs\n        let uvs = new Float32Array([\n            0, 0,\n            1, 0,\n            1, 1,\n            0, 1,\n\n            0, 0,\n            1, 0,\n            1, 1,\n            0, 1,\n\n            0, 0,\n            1, 0,\n            1, 1,\n            0, 1,\n\n            0, 0,\n            1, 0,\n            1, 1,\n            0, 1,\n\n            0, 0,\n            1, 0,\n            1, 1,\n            0, 1,\n\n            0, 0,\n            1, 0,\n            1, 1,\n            0, 1\n        ]);\n        geometry.setTextureUVs(uvs);\n\n        // Normals\n        let normals = new Float32Array([\n            0.0, 0.0, 1.0,\n            0.0, 0.0, 1.0,\n            0.0, 0.0, 1.0,\n            0.0, 0.0, 1.0,\n\n            0.0, 0.0, -1.0,\n            0.0, 0.0, -1.0,\n            0.0, 0.0, -1.0,\n            0.0, 0.0, -1.0,\n\n            0.0, 1.0, 0.0,\n            0.0, 1.0, 0.0,\n            0.0, 1.0, 0.0,\n            0.0, 1.0, 0.0,\n\n            0.0, -1.0, 0.0,\n            0.0, -1.0, 0.0,\n            0.0, -1.0, 0.0,\n            0.0, -1.0, 0.0,\n\n            1.0, 0.0, 0.0,\n            1.0, 0.0, 0.0,\n            1.0, 0.0, 0.0,\n            1.0, 0.0, 0.0,\n\n            -1.0, 0.0, 0.0,\n            -1.0, 0.0, 0.0,\n            -1.0, 0.0, 0.0,\n            -1.0, 0.0, 0.0\n        ]);\n        geometry.setNormals(normals);\n\n        // Indices.\n        let indices = new Uint16Array([     0,  1,  2,  0,  2,  3,  4,  5,  6,  4,  6,  7,\n                                            8,  9, 10,  8, 10, 11, 12, 13, 14, 12, 14, 15,\n                                            16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23 ]);\n        geometry.setIndices(indices);\n\n        return geometry;\n    }\n\n    /**\n     * Create a rectangle\n     *\n     * @param {number} width Width\n     * @param {number} height Height\n     * @return {Geometry} A Geometry instance\n     */\n    static createRectangle(width, height)\n    {\n        let geometry = new Geometry();\n\n        // Set format\n        let format = new VertexFormat();\n        format.add(new VertexElement(VertexElement.Usage.Position, 0, VertexElement.Type.Float, 3, false));\n        format.add(new VertexElement(VertexElement.Usage.Color, 1, VertexElement.Type.Float, 4, false));\n        format.add(new VertexElement(VertexElement.Usage.UVS, 2, VertexElement.Type.Float, 2, false));\n        format.add(new VertexElement(VertexElement.Usage.Normal, 3, VertexElement.Type.Float, 3, false));\n        geometry.setVertexFormat(format);\n\n        // Set positions\n        let positions = new Float32Array([\n            -width, -height,  0,\n            -width,  height,  0,\n            width, -height,  0,\n            width,  height,  0\n        ]);\n        geometry.setPositions(positions);\n\n        // Set colors\n        let colors = new Float32Array([\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1\n        ]);\n        geometry.setColors(colors);\n\n        // Texture uvs\n        let uvs = new Float32Array([\n            0, 1,\n            0, 0,\n            1, 1,\n            1, 0\n        ]);\n        geometry.setTextureUVs(uvs);\n\n        // Normals\n        let normals = new Float32Array([\n            0.0, 0.0, 1.0,\n            0.0, 0.0, 1.0,\n            0.0, 0.0, 1.0,\n            0.0, 0.0, 1.0,\n        ]);\n        geometry.setNormals(normals);\n\n        // Indices\n        geometry.setIndices(new Uint16Array([0, 2, 1, 3]));\n\n        return geometry;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Geometry.js\n **/","/**\n * A context resource:\n * - Indicate that the object have a refence to the graphic API.\n * - The object have a unique ID.\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class ContextResource\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n         * Unique identifier\n         *\n         * @type {number}\n         * @public\n         */\n        this.UID = ++ContextResource.globalID;\n    }\n\n    /**\n     * Get unique ID\n     *\n     * @return {number} An unsigned integer\n     */\n    getUID()\n    {\n        return this.UID;\n    }\n}\n\n/**\n* Global ID\n *\n* @type {number}\n*/\nContextResource.globalID = -1;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ContextResource.js\n **/","/**\n * Represent one of the element of a vertex.\n * It can be a position, a normal, a color, ….\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class VertexElement\n{\n    /**\n     * Constructor\n     *\n     * @param {VertexElement.Usage} usage Element usage\n     * @param {number} stream Stream index\n     * @param {VertexElement.Type} type Type of element\n     * @param {number?} count Value count, ex: A \"vec2\" will have \"2\" for this parameter\n     * @param {boolean?} normalize True to ask rendering API to normalize values\n     */\n    constructor(usage, stream, type, count = 0, normalize = false)\n    {\n        /**\n         * Value count for this element\n         *\n         * @type {number}\n         * @public\n         */\n        this.count = count\n\n        /**\n         * Indicate if the value need to be normalized by the graphic API\n         *\n         * @type {boolean}\n         * @public\n         */\n        this.normalize = normalize;\n\n        /**\n         * Offset in the vertex data\n         *\n         * @type {number}\n         * @public\n         */\n        this.offset = 0;\n\n        /**\n         * Stream index\n         *\n         * @type {number}\n         * @public\n         */\n        this.stream = stream;\n\n        /**\n         * Stream stride.\n         * @type {number}\n         * @public\n         */\n        this.stride = 0;\n\n        /**\n         * Type of value\n         *\n         * @type {VertexElement.Type}\n         * @public\n         */\n        this.type = type;\n\n        /**\n         * Type of element\n         *\n         * @type {VertexElement.Usage}\n         * @public\n         */\n        this.usage = usage;\n    }\n}\n\n/**\n * Type of stream available\n *\n * @enum {number}\n */\nVertexElement.StreamType = { Static: 0, Dynamic: 1, Stream: 2 };\n\n/**\n * VertexElement's types\n *\n * @enum {number}\n */\nVertexElement.Type = { Byte: 0, Float: 1, Int: 2, Short: 3 };\n\n/**\n * VertexElement's usage\n *\n * @enum {number}\n */\nVertexElement.Usage = { Position: 0, Color: 1, UVS: 2, Normal: 3, Tangent: 4 };\n\n/**\n * Indicate the format of a vertex\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class VertexFormat\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n         * Elements inside this format\n         *\n         * @type {Array.<VertexElement>}\n         * @private\n         */\n        this.elements = [];\n\n        /**\n         * Stream's strides\n         *\n         * @type {Array.<VertexElement.StreamType>}\n         * @private\n         */\n        this.streamType = [];\n\n        /**\n         * Stream's strides\n         *\n         * @type {Array.<number>}\n         * @private\n         */\n        this.streamStride = [];\n\n        /**\n         * Stream's state\n         *\n         * @type {Array.<boolean>}\n         * @private\n         */\n        this.streamNeedUpdate = [];\n\n        /**\n         * Indicate if the indices have changed\n         *\n         * @type {boolean}\n         * @private\n         */\n        this.indicesNeedUpdate = true;\n    }\n\n    /**\n     * Add an element to the format\n     *\n     * @param {VertexElement} element A VertexElement instance\n     */\n    add(element)\n    {\n        this.elements.push(element);\n        this.compute();\n    };\n\n    /**\n     * Set elements\n     *\n     * @param {Array.<VertexElement>} elements An array of VertexElement instance\n     */\n    set(elements)\n    {\n        this.elements = elements;\n        this.compute();\n    }\n\n    /**\n     * Get stream's type\n     *\n     * @param {number} index Stream index\n     * @param {VertexElement.StreamType} type A type\n     */\n    setStreamType(index, type)\n    {\n        this.streamType[index] = type;\n    }\n\n    /**\n     * Compute offset and vertex format's data\n     *\n     * @private\n     */\n    compute()\n    {\n        let offset          = 0;\n        let size            = 0;\n        let previousStream  = 0;\n\n        // Sort elements by stream (ascending)\n        this.elements.sort(function(a, b)\n        {\n            if (a.stream < b.stream)\n                return -1;\n            else if (a.stream > b.stream)\n                return 1;\n\n            return 0;\n        })\n\n        // Compute values\n        for (let i = 0; i < this.elements.length; i++)\n        {\n            // Reset offset and stride when we change stream\n            if (previousStream != this.elements[i].stream)\n            {\n                this.streamStride[previousStream]   = offset;\n                offset                              = 0;\n            }\n\n            switch (this.elements[i].type)\n            {\n                case VertexElement.Type.Float:\n                case VertexElement.Type.Int:\n                    size = 4;\n                    break;\n                case VertexElement.Type.Short:\n                    size = 2;\n                    break;\n                case VertexElement.Type.Byte:\n                    size = 1;\n                    break;\n                default:\n                    size = 1;\n                    break;\n            }\n\n            this.elements[i].offset  = offset;\n            size                    *= this.elements[i].count;\n            offset                  += size;\n            previousStream           = this.elements[i].stream;\n        }\n\n        this.streamStride[previousStream] = offset;\n    }\n\n    /**\n     * Indicate if the indices need an update\n     *\n     * @param {boolean} state True to ask an update\n     */\n    setIndicesAsWaitingUpdate(state)\n    {\n        this.indicesNeedUpdate = state;\n    }\n\n    /**\n     * Indicate if the stream need an update.\n     * @param {VertexElement.Usage } usage Stream usage.\n     * @param {boolean} state True to ask an update.\n     */\n    setStreamAsWaitingUpdate(usage, state)\n    {\n        for (let i = 0; i < this.elements.length; i++)\n            if (this.elements[i].usage == usage)\n                this.streamNeedUpdate[this.elements[i].stream] = state;\n    }\n\n    /**\n     * Get elements\n     *\n     * @return {Array.<VertexElement>} An array of VertexElement\n     */\n    getElements()\n    {\n        return this.elements;\n    }\n\n    /**\n     * Get stride of the asked stream\n     *\n     * @param {number} index Stream index\n     * @return {number} A stride value, 0 if the stream don't exist\n     */\n    getStreamStride(index)\n    {\n        return this.streamStride[index] || 0;\n    }\n\n    /**\n     * Get stream's type\n     *\n     * @param {number} index Stream index\n     * @return {VertexElement.StreamType} A type, default: stream\n     */\n    getStreamType(index)\n    {\n        return this.streamType[index] || VertexElement.StreamType.Stream;\n    }\n\n    /**\n     * Check if indices need an update\n     *\n     * @return {boolean} True if the indices need an update, otherwise false\n     */\n    isIndicesWaitingUpdate()\n    {\n        return this.indicesNeedUpdate;\n    }\n\n    /**\n     * Check if the asked stream need an update\n     *\n     * @param {number} index Stream index\n     * @return {boolean} True if the stream need an update, otherwise false\n     */\n    isStreamWaitingUpdate(index)\n    {\n        return this.streamNeedUpdate[index];\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/VertexFormat.js\n **/","import {Pass} from './Pass.js';\nimport {Type} from '../Types.js';\n\n/**\n * A material\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Material\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n         * Index of the technique to use\n         *\n         * @type {number}\n         * @private\n         */\n        this.activeTechnique = 0;\n\n        /**\n         * An array of passes per technique\n         * By default, we have at least one technique available\n         *\n         * @type {Array.<Array.<Pass>>}\n         * @private\n         */\n        this.techniques = [];\n\n        // Add a default technique\n        this.createTechnique();\n    }\n\n    /**\n     * Shortcut to create common materials\n     *\n     * @return {Material} A Material instance\n     */\n    static create(name) \n    {\n        let material = new Material();\n        let pass = material.createPass();\n\n        if (name == 'default')\n        {\n            pass.add(\"material.ambient\", Type.Float, [0.0, 0.0, 0.0]);\n            pass.add(\"material.diffuse\", Type.Float, [0.55, 0.55, 0.55]);\n            pass.add(\"material.specular\", Type.Float, [0.7, 0.7, 0.7]);\n            pass.add(\"material.shininess\", Type.Float, 38.4);\n        }\n\n        return material;\n    }\n\n    /**\n     * Add a pass to a technique\n     *\n     * @param {number=} techniqueIndex Targeted technique's index (default: 0)\n     * @return {Pass} A Pass instance.\n     */\n    createPass(techniqueIndex = 0)\n    {\n        let pass = new Pass();\n        this.techniques[techniqueIndex].push(pass);\n\n        return pass;\n    }\n\n    /**\n     * Create a new technique\n     *\n     * @return {number} The technique index.\n     */\n    createTechnique() \n    {\n        this.techniques.push([]);\n        return this.techniques.length - 1;\n    }\n\n    /**\n     * Set technique to use\n     *\n     * @param {number} techniqueIndex Targeted technique's index\n     */\n    setActiveTechnique(techniqueIndex) \n    {\n        this.activeTechnique = techniqueIndex;\n    }\n\n    /**\n     * Get active technique's index\n     *\n     * @return {number} A positive integer\n     */\n    getActiveTechnique() \n    {\n        return this.activeTechnique;\n    }\n\n    /**\n     * Get a pass\n     *\n     * @param {number} techniqueIndex Targeted technique's index\n     * @param {number} passIndex Pass's index\n     * @return {?Pass} A Pass instance or null if the technique or the pass don't exist\n     */\n    getPass(techniqueIndex, passIndex) \n    {\n        if (techniqueIndex >= this.techniques.length)\n            return null;\n\n        return this.techniques[techniqueIndex][passIndex] || null;\n    }\n\n    /**\n     * Get pass count\n     *\n     * @param {number} techniqueIndex Targeted technique's index\n     * @return {number} A signed integer\n     */\n    getPassCount(techniqueIndex = 0) \n    {\n        if (techniqueIndex >= this.techniques.length)\n            return 0;\n\n        return this.techniques[techniqueIndex].length;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Material/Material.js\n **/","import {StateBlock} from '../StateBlock.js';\n\n/**\n * A pass parameter\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class PassParameter\n{\n    /**\n     * Constructor\n     *\n     * @param {string} name Name to assign\n     * @param {Type} type Element's type\n     * @param {Array.<number>|number|boolean|Texture|Float32Array} value Element's value\n     */\n    constructor(name, type, value)\n    {\n        /**\n         * Name\n         *\n         * @type {string}\n         * @public\n         */\n        this.name = name;\n\n        /**\n         * Type\n         *\n         * @type {Type}\n         * @public\n         */\n        this.type = type;\n\n        /**\n         * Value\n         *\n         * @type {Array.<number>|number|boolean|Texture|Float32Array}\n         * @public\n         */\n        this.value = value;\n    }\n}\n\n/**\n * A pass\n *\n * @extends {StateBlock}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Pass extends StateBlock\n{\n    /**\n     * Constructor\n     *\n     * @param {string} name Name to assign\n     * @param {Type} type Element's type\n     * @param {Array.<number>|number|boolean|Texture|Float32Array} value Element's value\n     */\n    constructor(name, type, value)\n    {\n        super();\n\n        /**\n        * Parameters: elements to send to the GPU\n        *\n        * @type {Array.<PassParameter>}\n        * @private\n        */\n        this.parameters = [];\n    }\n\n    /**\n     * Add a parameter to the material\n     *\n     * @param {string} name Parameter's name\n     * @param {Type} type Parameter's type\n     * @param {Array.<number>|number|boolean|Texture|Float32Array} value Parameter's value\n     */\n    add(name, type, value) \n    {\n        // A value with this name already exist? We erase previous data …\n        for (let i = 0; i < this.parameters.length; i++)\n        {\n            if (this.parameters[i].name == name)\n            {\n                this.parameters[i].value = value; \n                this.parameters[i].type  = type; \n                return;\n            }\n        }\n\n        // … otherwise we create a new one\n        this.parameters.push(new PassParameter(name, type, value));\n    }\n\n    /**\n     * Set parameter's value\n     *\n     * @param {string} name Parameter's name\n     * @param {Array.<number>|number|boolean|Texture|Float32Array} value Parameter's value\n     */\n    set(name, value) \n    {\n        for (let i = 0; i < this.parameters.length; i++)\n        {\n            if (this.parameters[i].name == name)\n            {\n                this.parameters[i].value = value; \n                break;\n            }\n        }\n    }\n\n    /**\n     * Return an array with all material's parameters\n     *\n     * @return {Array.<PassParameter>} An array of PassParameter\n     */\n    getParameters() \n    {\n        return this.parameters;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Material/Pass.js\n **/","/**\n * Types available\n */\nexport class Type {}\n\n/**\n * Float\n *\n * @type {number}\n */\nType.Float = 0;\n\n/**\n * Integer\n *\n * @type {number}\n */\nType.Int = 1;\n\n/**\n * Bool\n *\n * @type {number}\n */\nType.Bool = 2;\n\n/**\n * Matrix\n *\n * @type {number}\n */\nType.Matrix  = 3;\n\n/**\n * 2D Texture\n *\n * @type {number}\n */\nType.Texture2D = 4;\n\n/**\n * 3D Texture\n *\n * @type {number}\n */\nType.TextureCube = 5;\n\n/**\n * Byte\n *\n * @type {number}\n */\nType.Byte = 6;\n\n/**\n * u_Byte\n *\n * @type {number}\n */\nType.u_Byte = 7;\n\n/**\n * Short\n *\n * @type {number}\n */\nType.Short = 8;\n\n/**\n * u_Short\n *\n * @type {number}\n */\nType.u_Short = 9;\n\n/**\n * u_Int\n * \n * @type {number}\n */\nType.u_Int = 10;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Types.js\n **/","import {Drawable} from './Drawable.js';\nimport {MeshCommand} from '../Renderers/Commands/MeshCommand.js';\n\n/**\n * A mesh\n *\n * @extends {Drawable}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Mesh extends Drawable\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        super();\n\n        /**\n         * Geometry\n         *\n         * @type {Geometry}\n         * @private\n         */\n        this.geometry = null;\n\n        /**\n         * Material\n         *\n         * @type {Material}\n         * @private\n         */\n        this.material = null;\n\n        /**\n         * Program\n         *\n         * @type {Program}\n         * @private\n         */\n        this.program = null;\n    }\n\n    /**\n     * Draw the element\n     *\n     * @param {RenderTarget} renderTarget Renderer who called this method\n     */\n    draw(renderTarget)\n    {\n        if (!this.geometry || !this.material || !this.program)\n            return;\n\n        let task            = renderTarget.getActiveTask();\n        let activeTechnique = this.material.getActiveTechnique();\n        let passCount       = this.material.getPassCount(activeTechnique);\n\n        for (let i = 0; i < passCount; i++)\n            task.addCommand(new MeshCommand(this.geometry, this.material.getPass(activeTechnique, i), this.program, this.getTransformationMatrix(), this.getNormalMatrix(), 0, this.geometry.getIndexCount()));\n    };\n\n    /**\n     * Set geometry\n     *\n     * @param {Geometry} geometry A Geometry instance\n     */\n    setGeometry(geometry)\n    {\n        this.geometry = geometry;\n    }\n\n    /**\n     * Set material\n     *\n     * @param {Material} material A Material instance\n     */\n    setMaterial(material)\n    {\n        this.material = material;\n    };\n\n    /**\n     * Set program\n     *\n     * @param {Program} program A Program instance\n     */\n    setProgram(program)\n    {\n        this.program = program;\n    }\n\n    /**\n     * Return a reference to the program use by this mesh\n     *\n     * @return {Program} A Program instance\n     */\n    getProgram()\n    {\n        return this.program;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Objects/Mesh.js\n **/","import {Node} from '../Scene/Node.js';\n\n/**\n * A drawable element\n *\n * @extends {Node}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Drawable extends Node\n{\n    /**\n     * Draw the element\n     *\n     * @param {RenderTarget} renderTarget Renderer who called this method\n     */\n    draw(renderTarget) { };\n\n    /**\n     * Visit the node and his children\n     *\n     * @param {RenderTarget} renderTarget Renderer who called this method\n     */\n    visit(renderTarget)\n    {\n        this.draw(renderTarget);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Objects/Drawable.js\n **/","import {Program} from '../../Program.js';\nimport {RenderCommand} from './RenderCommand.js';\nimport {Type} from '../../Types.js';\n\n/**\n * Draw meshes\n *\n * @extends {RenderCommand}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class MeshCommand extends RenderCommand\n{\n    /**\n     * Constructor\n     *\n     * @param {Geometry} geometry A Geometry instance\n     * @param {Pass} pass A Pass instance\n     * @param {Program} program A Program instance\n     * @param {mat4} modelMatrix A Matrix with model's transformations (scale, rotate, translate)\n     * @param {mat4} normalMatrix A Matrix with model's normals transformed\n     * @param {number} startVertex First vertex to draw\n     * @param {number} endVertex Last vertex to draw\n     */\n    constructor(geometry, pass, program, modelMatrix, normalMatrix, startVertex, endVertex)\n    {\n        super();\n\n        /**\n         * Last vertex to draw\n         *\n         * @type {number}\n         * @private\n         */\n        this.endVertex = endVertex;\n\n        /**\n         * Geometry\n         *\n         * @type {Geometry}\n         * @private\n         */\n        this.geometry = geometry;\n\n        /**\n         * Model's matrix\n         *\n         * @type {mat4}\n         * @private\n         */\n        this.modelMatrix = modelMatrix;\n\n        /**\n         * Model's normal matrix\n         *\n         * @type {mat4}\n         * @private\n         */\n        this.normalMatrix = normalMatrix;\n\n        /**\n         * Pass\n         *\n         * @type {Pass}\n         * @private\n         */\n        this.pass = pass;\n\n        /**\n         * Program\n         *\n         * @type {Program}\n         * @private\n         */\n        this.program = program;\n\n        /**\n         * First vertex to draw\n         *\n         * @type {number}\n         * @private\n         */\n        this.startVertex = startVertex;\n    }\n\n    /**\n     * Execute the command\n     *\n     * @param {RenderAPI} renderAPI RenderAPI instance used to process the commands\n     */\n    execute(renderAPI) \n    {\n        // Program\n        let programCode = renderAPI.setProgram(this.program);\n        if (programCode == -1)\n            return;\n\n        // Must send/update shared uniforms\n        if (programCode == 1)\n            renderAPI.setUniform(this.program, 'uCamera', Type.Matrix, renderAPI.getActiveCamera().getViewProjectionMatrix());\n\n        // Send uniforms.\n        renderAPI.setUniform(this.program, 'uModel', Type.Matrix, this.modelMatrix);\n        renderAPI.setUniform(this.program, 'uModelNormal', Type.Matrix, this.normalMatrix);\n\n        // State.\n        renderAPI.applyStateBlock(this.pass);\n\n        // Material.\n        let parameters = this.pass.getParameters();\n        let slot = 0;\n        for (let i = 0; i < parameters.length; i++)\n        {\n            let parameter = parameters[i];\n            switch(parameter.type)\n            {\n                case Type.Texture2D:\n                {\n                    renderAPI.setUniform(this.program, parameter.name, Type.Int, slot);\n                    renderAPI.bindTexture(slot, /** @type {TextureInterface} */ (parameter.value));\n                    slot++;\n                    break;\n                }\n                default:\n                {\n                    renderAPI.setUniform(this.program, parameter.name, parameter.type, parameter.value);\n                    break;\n                }\n            }\n        }\n\n        // Bind geometry\n        renderAPI.setGeometry(this.geometry);\n\n        // Draw object\n        renderAPI.drawIndexedPrimitives(this.pass.drawingMode, this.startVertex, this.endVertex);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/Commands/MeshCommand.js\n **/","import {ContextResource} from './ContextResource.js';\nimport {FileLoader} from './Loaders/FileLoader.js';\n\n/**\n * A program\n *\n * @extends {ContextResource}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Program extends ContextResource\n{\n    /**\n     * Constructor\n     *\n     * @constructor\n     */\n    constructor()\n    {\n        super();\n\n        /**\n         * Attributes\n         *\n         * @type {Array.<ProgramElement>}\n         * @private\n         */\n        this.attributes = [];\n\n        /**\n         * Shader sources\n         *\n         * - First index is for the vertex shader\n         * - Second index is for the fragment shader\n         *\n         * @type {Array.<string>}\n         * @private\n         */\n        this.sources = [null, null];\n\n        /**\n         * Uniforms\n         *\n         * @type {Array.<Program.Element>}\n         * @private\n         */\n        this.uniforms = [];\n    }\n\n    /**\n     * Load program from shader files\n     *\n     * @param {string} vertexFile Path to the vertex shader file\n     * @param {string} fragmentFile Path to the fragment shader file\n     */\n    loadFromFiles(vertexFile, fragmentFile)\n    {\n        // Vertex file.\n        FileLoader.load(vertexFile, (status, data) =>\n        {\n            this.sources[0] = data;\n        });\n\n        // Fragment file.\n        FileLoader.load(fragmentFile, (status, data) =>\n        {\n            this.sources[1] = data;\n        });\n    };\n\n    /**\n     * Load program from data\n     *\n     * @param {string} vertexSource Vertex shader code\n     * @param {string} fragmentSource Fragment shader code\n     */\n    loadFromData(vertexSource, fragmentSource)\n    {\n        this.sources[0] = vertexSource;\n        this.sources[1] = fragmentSource;\n    }\n\n    /**\n     * Get attributes\n     *\n     * @return {Array.<ProgramElement>} An array of attribute\n     */\n    getAttributes()\n    {\n        return this.attributes;\n    }\n\n    /**\n     * Get program's sources\n     *\n     * @return {Array.<string>} Index 0: Vertex shader, Index 1: Fragment shader\n     */\n    getSources()\n    {\n        return this.sources;\n    }\n\n    /**\n     * Get uniform\n     *\n     * @param {string} name Name of the uniform\n     * @return {?ProgramElement} A program Element or null if uniform doesn't exist\n     */\n    getUniform(name)\n    {\n        return this.uniforms[name] || null;\n    }\n\n    /**\n     * Get uniforms\n     *\n     * @return {Array.<ProgramElement>} An array of uniforms\n     */\n    getUniforms()\n    {\n        return this.uniforms;\n    }\n\n    /**\n     * Say if program is ready to be use\n     *\n     * Source array must have two elements: the fragment and the vertex shaders\n     * @return {boolean} True if program is ready, otherwise false\n     */\n    isReady()\n    {\n        return (this.sources.length === 2 && this.sources[0] !== null && this.sources[1] !== null);\n    }\n}\n\n/**\n * An element from the shader\n *\n * @constructor\n */\nexport class ProgramElement\n{\n    /**\n     * Constructor\n     *\n     * @param {number} location Location in the shader\n     * @param {string} name His name\n     * @param {Type} type Element's type (float, vec, …)\n     * @param {number} size Element's size\n     */\n    constructor(location, name, type, size)\n    {\n        /**\n         * Location in the shader\n         *\n         * @type {number}\n         * @public\n         */\n        this.location = location;\n\n        /**\n         * Name\n         *\n         * @type {string}\n         * @public\n         */\n        this.name = name;\n\n        /**\n         * Type\n         *\n         * @type {Type}\n         * @public\n         */\n        this.type = type;\n\n        /**\n         * Size/Count\n         *\n         * @type {number}\n         * @public\n         */\n        this.size = size;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Program.js\n **/","/**\n * An abstract rendering command\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class RenderCommand\n{ \n    /**\n     * Indicate if the command concern an opaque element\n     *\n     * @return {boolean} True if command must be in the opaque queue\n     */\n    isOpaque() { return true; };\n\n    /**\n     * Execute the command\n     *\n     * @param {RenderAPI} renderAPI RenderAPI instance used to process the commands\n     */\n    execute(renderAPI) { };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/Commands/RenderCommand.js\n **/","import {Drawable} from './Drawable.js';\nimport {ModelLoader} from '../Loaders/ModelLoader.js';\n\n/**\n * A model\n *\n * @extends {Drawable}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Model extends Drawable\n{\n    /**\n     * Constructor\n     *\n     * @param {string} filePath Path to the file with model's data\n     */\n    constructor(filePath = '')\n    {\n        super();\n\n        /**\n         * Meshes\n         *\n         * @type {Array.<Mesh>}\n         * @public\n         */\n        this.meshes = [];\n\n        if (filePath.length)\n            this.loadFromFile(filePath);\n    }\n\n    /**\n     * Update the node and his children\n     *\n     * @param {number} deltaTime A floating value representing time elapsed between two frames\n     * @param {boolean} parentUpdated Indicate if the parent element have been updated\n     * @return {boolean} True if the node have been updated\n     */\n    update(deltaTime, parentUpdated)\n    {\n        // Call parent method\n        let updated = super.update.call(this, deltaTime, parentUpdated);\n\n        // Update meshes.\n        for (let i = 0; i < this.meshes.length; i++)\n            this.meshes[i].computeTransformationMatrix(this.getTransformationMatrix(), updated);\n\n        return updated;\n    }\n\n    /**\n     * Draw the element\n     *\n     * @param {RenderTarget} renderTarget Renderer who called this method\n     */\n    draw(renderTarget)\n    {\n        for (let i = 0; i < this.meshes.length; i++)\n            this.meshes[i].draw(renderTarget);\n    }\n\n    /**\n     * Load model from a file\n     *\n     * @param {string} filePath Path to the file with model's data\n     */\n    loadFromFile(filePath)\n    {\n        ModelLoader.loadFromFile(filePath, this);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Objects/Model.js\n **/","import {DrawingMode} from '../StateBlock.js';\nimport {FileLoader} from './FileLoader.js';\nimport {Geometry} from '../Geometry.js';\nimport {Material} from '../Material/Material.js';\nimport {Mesh} from '../Objects/Mesh.js';\nimport {ProgramLibrary} from '../Extra/ProgramLibrary.js';\nimport {Texture} from '../Textures/Texture.js';\nimport {Type} from '../Types.js';\nimport {VertexFormat, VertexElement} from '../VertexFormat.js';\n\n/**\n * A class to load 3D models\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class ModelLoader\n{\n    /**\n     * Load a 3D model from a JSON file\n     *\n     * @see https://github.com/acgessler/assimp2json\n     * @param {string} filePath Path to the file with the 3D model\n     * @param {Model} model Model to fill with data\n     */\n    static loadFromFile(filePath, model)\n    {\n        FileLoader.load(filePath, (status, data, userData) =>\n        {\n            // Compute path to the parent folder\n            let folder = userData.filePath.replace(/[^\\/]*$/, '');\n\n            // Parse file.\n            ModelLoader.parseJSON(data, userData.model, folder);\n        }, { model: model, filePath: filePath });\n    }\n\n    /**\n     * Parse given data and fill model with it\n     *\n     * @param {string} data JSON data\n     * @param {Model} model Model to fill with data\n     * @param {string?} relativePath Relative path to the externals assets\n     * @see https://github.com/acgessler/assimp2json\n     * @private\n     */\n    static parseJSON(data, model, relativePath = '')\n    {\n        // Get JSON data\n        let obj = /** @type {{materials:Array<{properties: Array<{index: number, key:string, semantic: number, type:number, value: (Array|number)}>}>, meshes: Array<{vertices: Array, normals: Array, faces: Array, texturecoords: Array, numuvcomponents: Array, materialindex: number}>}} */(JSON.parse(data));\n\n        // Materials.\n        let materials = [];\n        let i, j, k, l;\n\n        for (i = 0; i < obj.materials.length; i++)\n        {\n            let material = new Material();\n            let pass = material.createPass();\n\n            // Default data\n            pass.drawingMode = DrawingMode.Triangles;\n\n            let properties = obj.materials[i].properties;\n            for (j = 0; j < properties.length; j++)\n            {\n                let property = properties[j];\n\n                // Colors.\n                if( property.type == 1 )\n                {\n                    if (property.key == '$mat.twosided' && property.value == 1)\n                        pass.faceCulling = FaceCulling.None;\n                    else if (property.key == '$mat.shininess')\n                        pass.add('material.shininess', Type.Float, /** @type {number} */(property.value));\n                    else if (property.key == '$clr.ambient')\n                        pass.add('material.ambient', Type.Float, [property.value[0], property.value[1], property.value[2]]);\n                    else if (property.key == '$clr.diffuse')\n                        pass.add('material.diffuse', Type.Float, [property.value[0], property.value[1], property.value[2]]);\n                    else if (property.key == '$clr.specular')\n                        pass.add('material.specular', Type.Float, [property.value[0], property.value[1], property.value[2]]);\n                    else if (property.key == '$clr.emissive')\n                        pass.add('material.emissive', Type.Float, [property.value[0], property.value[1], property.value[2]]);\n                }\n                // Textures.\n                else if (property.type == 3 && property.key != '?mat.name')\n                {\n                    let texture = new Texture();\n                    texture.loadFromFile(relativePath + property.value);\n\n                    let name = 'material.diffuseTexture';\n                    switch(property.semantic)\n                    {\n                        default:\n                        case 1:\n                            name = 'material.diffuseTexture';\n                            break;\n                        case 2:\n                            name = 'material.specularTexture';\n                            break;\n                        case 3:\n                            name = 'material.ambientTexture';\n                            break;\n                        case 4:\n                            name = 'material.emissiveTexture';\n                            break;\n                        case 5:\n                            name = 'material.heightTexture';\n                            break;\n                        case 6:\n                            name = 'material.normalsTexture';\n                            break;\n                        case 7:\n                            name = 'material.shininessTexture';\n                            break;\n                        case 8:\n                            name = 'material.opacityTexture';\n                            break;\n                        case 9:\n                            name = 'material.displacementTexture';\n                            break;\n                    }\n\n                    pass.add(name, Type.Texture2D, texture);\n                }\n            }\n\n            materials.push(material);\n        }\n\n        // Geometries\n        for (i = 0; i < obj.meshes.length; i++)\n        {\n            // Create a new mesh\n            let mesh = new Mesh();\n            model.meshes.push(mesh);\n\n            // Add data\n            let meshData = obj.meshes[i];\n\n            // Geometry\n            {\n                let geometry = new Geometry();\n\n                // Format\n                let format = new VertexFormat();\n                geometry.setVertexFormat(format);\n\n                // Positions\n                let positions = new Float32Array(meshData.vertices);\n                format.add(new VertexElement(VertexElement.Usage.Position, 0, VertexElement.Type.Float, 3, false));\n                geometry.setPositions(positions);\n\n                // Normals\n                let normals = new Float32Array(meshData.normals);\n                format.add(new VertexElement(VertexElement.Usage.Normal, 1, VertexElement.Type.Float, 3, false));\n                geometry.setNormals(normals);\n\n                // UVs\n                if (meshData.texturecoords)\n                {\n                    let uvs = new Float32Array(meshData.texturecoords[0]);\n                    format.add(new VertexElement(VertexElement.Usage.UVS, 2, VertexElement.Type.Float, meshData.numuvcomponents[0], false));\n                    geometry.setTextureUVs(uvs);\n                }\n\n                // Indices\n                let indices = new Uint16Array(meshData.faces.length * 3);\n                for (k = 0, l = 0; k < meshData.faces.length; k++, l += 3)\n                {\n                    indices[l+0] = meshData.faces[k][0];\n                    indices[l+1] = meshData.faces[k][1];\n                    indices[l+2] = meshData.faces[k][2];\n                }\n                geometry.setIndices(indices);\n\n                mesh.setGeometry(geometry);\n            }\n\n            // Material.\n            if (meshData.materialindex !== undefined && materials[meshData.materialindex])\n                mesh.setMaterial(materials[meshData.materialindex]);\n            else\n            {\n                let material = new Material();\n                let pass     = material.createPass();\n                pass.drawingMode = DrawingMode.Triangles;\n                pass.add('material.ambient', Type.Float, [0.0, 0.0, 0.0]);\n                pass.add('material.diffuse', Type.Float, [0.55, 0.55, 0.55]);\n                pass.add('material.specular', Type.Float, [0.7, 0.7, 0.7]);\n                pass.add('material.shininess', Type.Float, 38.4);\n                mesh.setMaterial(material);\n            }\n\n            // Program\n            mesh.setProgram(ProgramLibrary.get('PhongShader'));\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Loaders/ModelLoader.js\n **/","import {FileLoader} from '../Loaders/FileLoader.js';\nimport {Program} from '../Program.js';\n\n/**\n * A class to manage programs/shaders\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class ProgramLibrary \n{\n    /**\n     * Get the program with the given name\n     *\n     * @param {string} name Program's name\n     * @return {Program} A Program instance, otherwise null is the program doesn't exist\n     */\n    static get(name) \n    {\n        let program = ProgramLibrary.programs[name];\n        if (!program)\n        {\n            program = new Program();\n            ProgramLibrary.programs[name] = program;\n        }\n\n        return program;\n    }\n\n    /**\n     * Load a new program\n     *\n     * @param {string} name Program's name\n     * @param {string} vertexShaderFile Path to the vertex shader file\n     * @param {string} fragmentShaderFile Path to the fragment shader file\n     * @param {Array.<string>=} defines An array with defines data\n     * @return {?Program} A Program instance\n     */\n    static load(name, vertexShaderFile, fragmentShaderFile, defines) \n    {\n        // Get/Create program\n        let program = ProgramLibrary.get(name);\n\n        // Chunck variables\n        let chunkPatterns = /include\\[([^\\]]*)\\]/g;\n\n        // Prepare cache\n        ProgramLibrary.cache[name] = { data: null, ready: false, sources: [] };\n\n        /**\n        * Callback for chunks\n        *\n        * @param {boolean} status Load status\n        * @param {string} chunkData Chunk data\n        * @param {Object=} userData Additional data\n        */ \n        let chunkCallback = function( status, chunkData, userData )\n        {\n            // Put chunk data in cache\n            ProgramLibrary.chunks[userData].data  = chunkData;\n            ProgramLibrary.chunks[userData].ready = true;\n\n            // Try to update\n            ProgramLibrary.tryUpdateWaitingPrograms();                        \n        };\n\n        // Callback processing chunk\n        let callback = function(type, programName, data)\n        {\n            let program = ProgramLibrary.programs[name];\n            let sources = program.getSources();\n            let chunks  = data.match(chunkPatterns);\n\n            // Analyse if the file ask external chunks\n            if (chunks)\n            {\n                let missingChunkCount = chunks.length;\n\n                for (let i = 0; i < chunks.length; i++)\n                {\n                    let chunk       = chunks[i];\n                    let chunkPath   = chunk.substring(chunk.lastIndexOf('[') + 1, chunk.lastIndexOf(']'));\n\n                    if (ProgramLibrary.chunks[chunkPath] && ProgramLibrary.chunks[chunkPath].ready)\n                        missingChunkCount--;\n                    else if( !ProgramLibrary.chunks[chunkPath] )\n                    {\n                        ProgramLibrary.chunks[chunkPath] = { data: '', ready: false };\n                        FileLoader.load(ProgramLibrary.folderPath + chunkPath + '?' + new Date().getTime(), chunkCallback, chunkPath);\n                    }\n                }\n\n                // Everything is in memory? We can fill the program directly\n                let result = ProgramLibrary.replaceChunks(data);\n                if (missingChunkCount === 0)\n                    ProgramLibrary.fillProgram(sources, program, name, type, result || '');\n            }\n            else \n                ProgramLibrary.fillProgram(sources, program, name, type, data);\n        };\n\n        // Load vertex file\n        FileLoader.load(ProgramLibrary.folderPath + vertexShaderFile + '?' + new Date().getTime(), (status, data) =>\n        {\n            data = ProgramLibrary.addDefines(data, defines || []);\n            ProgramLibrary.cache[name].sources[0] = data;\n            callback(ProgramLibrary.Target.Vertex, name, data);        \n        });\n\n        // Load fragment file\n        FileLoader.load(ProgramLibrary.folderPath + fragmentShaderFile + '?' + new Date().getTime(), (status, data) =>\n        {\n            data = ProgramLibrary.addDefines(data, defines || []);\n            \n            ProgramLibrary.cache[name].sources[1] = data;\n            callback(ProgramLibrary.Target.Fragment, name, data);\n        });   \n\n        return program;\n    }\n\n    /**\n     * Shortcut to fill program with sources and clear the cache.\n     * @private\n     * @param {Array.<string>} sources Vertex and fragment sources.\n     * @param {Program} program A Program instance.\n     * @param {string} name Program's name.\n     * @param {ProgramLibrary.Target} type Type of data.\n     * @param {string} data Data to add to the program.\n     */\n    static fillProgram(sources, program, name, type, data)\n    {\n        if (type == ProgramLibrary.Target.Vertex)\n            program.loadFromData(data, sources[1]);\n        else\n            program.loadFromData(sources[0], data);\n\n        if (program.isReady())\n            delete ProgramLibrary.cache[name];\n    };\n\n    /**\n     * Update waiting programs\n     *\n     * @private\n     */\n    static tryUpdateWaitingPrograms() \n    {\n        for (let i in ProgramLibrary.programs)\n        {\n            if (!ProgramLibrary.programs[i].isReady())\n            {\n                let sources = ProgramLibrary.programs[i].getSources();\n                for (let j = 0; j < 2; j++)\n                {\n                    if (!sources[j])\n                    {\n                        let source = ProgramLibrary.replaceChunks(ProgramLibrary.cache[i].sources[j]);\n                        if (source)\n                            ProgramLibrary.fillProgram(sources, ProgramLibrary.programs[i], i, (j === 0) ? ProgramLibrary.Target.Vertex : ProgramLibrary.Target.Fragment, source);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Fill programs with chunks data\n     *\n     * @private\n     * @param {string} data Data to process\n     * @return {?string} A string if everything is ok, otherwise null\n     */\n    static replaceChunks(data) \n    {\n        let chunkPattern = /include\\[([^\\]]*)\\]/;\n        let result       = data;\n\n        while (chunkPattern.test(result))\n        {\n            let chunk       = result.match(chunkPattern);\n            let chunkName   = chunk[0].substring(chunk[0].lastIndexOf('[') + 1, chunk[0].lastIndexOf(']'));\n\n            // We need to wait all chunks to continue.\n            if (!ProgramLibrary.chunks[chunkName] || !ProgramLibrary.chunks[chunkName].ready)\n                return null;\n\n            result = result.replace(chunk[0], ProgramLibrary.chunks[chunkName].data || '');\n        }\n\n        return result;\n    }\n\n    /**\n     * Add defines to the program\n     *\n     * @private\n     * @param {string} source Source data\n     * @param {Array.<string>} defines An array with defines to add to the source parameter\n     * @return {string} The new string\n     */\n    static addDefines(source, defines) \n    {\n        if (!defines)\n            return source;\n\n        let defineString = '';\n        for (let i = 0; i < defines.length; i++)\n            defineString += '#define ' + defines[i] + '\\n'; \n\n        return defineString + source;\n    }\n}\n\n/**\n * Put data in cache due to asynchrone loading\n *\n * @type {Array.<{data: null, ready: boolean, sources: Array<string>}>}\n */\nProgramLibrary.cache = [];\n\n/**\n * Chunks in cache\n *\n * @type {Array.<{data: string, ready: boolean}>}\n */\nProgramLibrary.chunks = [];\n\n/**\n * Path to the folder with shaders\n *\n * @type {string}\n */\nProgramLibrary.folderPath = '../shaders/';\n\n/**\n * Shaders\n *\n * @type {Array.<Program>}\n */\nProgramLibrary.programs = [];\n\n/**\n * Target\n *\n * @enum {number}\n */\nProgramLibrary.Target = { Vertex: 0, Fragment: 1 };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Extra/ProgramLibrary.js\n **/","import {TextureInterface} from './TextureInterface.js';\nimport {Img as Image} from '../Image.js';\n\n/**\n * A texture\n *\n * @extends {TextureInterface}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Texture extends TextureInterface\n{\n    /**\n     * Constructor\n     *\n     * @param {string} path Path to the texture file\n     */\n    constructor(path = '')\n    {\n        super()\n\n        /**\n         * Image instance\n         *\n         * @type {Image}\n         * @private\n         */\n        this.image = null;\n\n        /**\n         * Repeat the texture\n         *\n         * @type {boolean}\n         * @private\n         */\n        this.repeat = true;\n\n        /**\n         * Smooth the texture\n         *\n         * @type {boolean}\n         * @private\n         */\n        this.smooth = true;\n\n        if (path.length)\n            this.loadFromFile(path);\n    }\n\n    /**\n     * Load texture from a file\n     *\n     * @param {string} path Path to the texture file\n     */\n    loadFromFile(path)\n    {\n        this.image = new Image();\n        this.image.loadFromFile(path);\n    }\n\n    /**\n     * Load texture from an Image\n     *\n     * @param {Image} image An Image instance\n     */\n    loadFromImage(image)\n    {\n        this.image = image;\n    }\n\n    /**\n     * Repeat the texture\n     *\n     * @param {boolean} value True to repeat, otherwise false\n     */\n    setRepeated(value)\n    {\n        this.repeat = value;\n    }\n\n    /**\n     * Smooth the texture\n     *\n     * @param {boolean} value True to smooth, otherwise false\n     */\n    setSmooth(value)\n    {\n        this.smooth = value;\n    }\n\n    /**\n     * Get image instance\n     *\n     * @return {?Image} An Image instance\n     */\n    getImage()\n    {\n        return this.image;\n    }\n\n    /**\n     * Indicate if texture is ready\n     *\n     * @return {boolean} True if the texture is ready to be use\n     */\n    isReady()\n    {\n        if (!this.image)\n            return false;\n\n        let textureSize = this.image.getSize();\n        if (textureSize[0] === 0 || textureSize[1] === 0)\n            return false;\n\n        return true;\n    }\n\n    /**\n     * Indicate if the texture is repeated\n     *\n     * @return {boolean} True if the texture is repeated\n     * @override\n     */\n    isRepeated()\n    {\n        return this.repeat;\n    }\n\n    /**\n     * Indicate if the texture is smoothed\n     *\n     * @return {boolean} True if the texture is smoothed\n     * @override\n     */\n    isSmoothed()\n    {\n        return this.smooth;\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Textures/Texture.js\n **/","import {ContextResource} from '../ContextResource.js';\n\n/**\n * A texture\n *\n * @extends {ContextResource}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class TextureInterface extends ContextResource\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        super();\n\n        /**\n         * State\n         *\n         * @type {boolean}\n         * @protected\n         */\n        this.ready = false;\n\n        /**\n         * Mipmap state\n         *\n         * @type {boolean}\n         * @protected\n         */\n        this.mipmap = true;\n    }\n\n    /**\n     * Indicate if texture is ready\n     *\n     * @return {boolean} True if the texture is ready to be use\n     */\n    isReady()\n    {\n        return this.ready;\n    }\n\n    /**\n     * Indicate if the texture use mip-mapping\n     *\n     * @return {boolean} True if the texture is mip-mapped\n     */\n    isMipmaped()\n    {\n        return this.mipmap;\n    }\n\n    /**\n     * Indicate if the texture is repeated\n     *\n     * @return {boolean} True if the texture is repeated\n     */\n    isRepeated()\n    {\n        return false;\n    }\n\n    /**\n     * Indicate if the texture is smoothed\n     *\n     * @return {boolean} True if the texture is smoothed\n     */\n    isSmoothed()\n    {\n        return false;\n    }\n\n    /**\n     * Indicate if the texture must use mip-mapping\n     *\n     * @param {boolean} value True to use mip-mapping\n     */\n    useMipmap(value)\n    {\n        this.mipmap = value;\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Textures/TextureInterface.js\n **/","/**\n * An image\n * Use a weird name due to the lack of namespace in Javascript :(\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Img\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n         * Native instance\n         *\n         * @type {Image}\n         * @private\n         */\n        this.data = new Image();\n\n        /**\n         * Height\n         *\n         * @type {number}\n         * @private\n         */\n        this.height = 0;\n\n        /**\n         * Pixels\n         *\n         * @type {Uint8Array}\n         * @private\n         */\n        this.pixels = null;\n\n        /**\n         * Status\n         *\n         * @type {Img.Status}\n         * @private\n         */\n        this.status = Img.Status.Unload;\n\n        /**\n         * Width\n         *\n         * @type {number}\n         * @private\n         */\n        this.width = 0;\n    }\n\n    /**\n     * Load image from a file\n     *\n     * @param {string} path Path to the image file\n     */\n    loadFromFile(path)\n    {\n        this.data.onload = () =>\n        {\n            this.status = Img.Status.Loaded;\n            this.width  = this.data.width;\n            this.height = this.data.height;\n            this.pixels = null;\n        };\n\n        this.data.src = path;\n    }\n\n    /**\n     * Create a new image\n     *\n     * @param {number} width Image's width\n     * @param {number} height Image's height\n     * @param {Uint8Array?} data An array with pixels (r, g, b, a)\n     */\n    create(width, height, data = null)\n    {\n        this.pixels = data ? data : new Uint8Array(width * height * 4);\n        this.data   = null;\n        this.width  = width;\n        this.height = height;\n        this.status = Img.Status.Loaded;\n    }\n\n    /**\n     * Get image's dimensions\n     *\n     * @return {Array.<number>} Image's width and height in pixel\n     */\n    getSize()\n    {\n        return [this.width, this.height];\n    }\n\n    /**\n     * Get Image's data\n     *\n     * @return {Image|Uint8Array} A native Image object or an array depending method use to load the image\n     */\n    getData()\n    {\n        return this.data || this.pixels;\n    }\n\n    /**\n     * Indicate if the image is ready to be use\n     *\n     * @return {boolean} True if image is ready, otherwise false\n     */\n    isReady()\n    {\n        return (this.status == Img.Status.Loaded);\n    }\n}\n\n/**\n * Status\n *\n * @enum {number}\n */\nImg.Status = { Unload: 0, Loading: 1, Loaded: 2 };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Image.js\n **/","import {Light} from './Light.js';\n\n/**\n * A point light\n *\n * @extends {Light}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class PointLight extends Light\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        super();\n\n        /**\n         * Constant value\n         *\n         * @type {number}\n         * @private\n         */\n        this.constant = 1.0;\n\n        /**\n         * Lieanr value\n         *\n         * @type {number}\n         * @private\n         */\n        this.linear = 0.09;\n\n        /**\n         * Quadratic value\n         *\n         * @type {number}\n         * @private\n         */\n        this.quadratic = 0.032;\n    }\n\n    /**\n     * Set point light's values\n     *\n     * @param {number} constant The constant value\n     * @param {number} linear The linear value\n     * @param {number} quadratic The quadratic value\n     */\n    setValues(constant, linear, quadratic) \n    {\n        this.constant   = constant;\n        this.linear     = linear;\n        this.quadratic  = quadratic;\n    }\n\n    /**\n     * Get values\n     *\n     * @return {Array.<number>} An array with constant, linear and quadratic values\n     */\n    getValues() \n    {\n        return [this.constant, this.linear, this.quadratic];\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Lights/PointLight.js\n **/","import {Color} from '../Color.js';\nimport {RenderTexture} from '../Renderers/RenderTexture.js';\nimport {Sprite} from '../Objects/Sprite.js';\nimport {SpriteCommand} from '../Renderers/Commands/SpriteCommand.js';\nimport {WebGL} from '../Renderers/WebGL/RenderWebGL.js';\n\n/**\n * A class to create post-effects\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class PostEffect\n{\n    /**\n     * Constructor\n     *\n     * @param {Program} program A Program instance.\n     */\n    constructor(program)\n    {\n        /**\n        * The render API to use\n        *\n        * @type {RenderAPI}\n        * @protected\n        */\n        this.renderApi = WebGL.getInstance();\n\n        /**\n        * Textures where we will apply effects\n        *\n        * @type {RenderTexture}\n        * @private\n        */\n        this.renderTexture = null;\n\n        /**\n        * Full screen sprite with the resulting effects\n        *\n        * @type {Sprite}\n        * @private\n        */\n        this.sprite = new Sprite();\n        this.sprite.setCustomProgram(program);\n    }\n\n    /**\n     * Init the post effect composer\n     *\n     * @param {number} width Resulting effect width\n     * @param {number} height Resulting effect height\n     * @param {boolean=} useDepthBuffer True to use depth buffer (useful in 3D)\n     * @param {boolean=} userStencilBuffer True to use stencil buffer\n     */\n    init(width, height, useDepthBuffer = true, userStencilBuffer = false) \n    {\n        // Init texture\n        this.renderTexture = new RenderTexture(width, height, 1, useDepthBuffer, userStencilBuffer);\n\n        // Link resulting texture to the sprite\n        this.sprite.setSize(1, 1);\n        this.sprite.setTexture(this.renderTexture.getTextures()[0]);\n        this.sprite.setTextureRect(0, 0, width, height);\n    }\n\n    /**\n     * Begin\n     *\n     * @param {Color=} color A Color instance\n     */\n    begin(color = new Color(30, 30, 30)) \n    {\n        if (!this.renderTexture)\n            return;\n\n        this.renderTexture.clear(color);\n    }\n\n    /**\n     * End\n     */\n    end() \n    {\n        if (!this.renderTexture)\n            return;\n\n        // Display result\n        this.renderTexture.display();\n\n        // Draw the full screen quad\n        SpriteCommand.draw(this.renderApi, this.sprite);\n    };\n\n    /**\n     * Render the given scene\n     *\n     * @param {Scene} scene A Scene instance\n     * @param {Camera} camera A Camera instance\n     */\n    render(scene, camera) \n    {\n        this.renderTexture.render(scene, camera);\n    }\n\n    /**\n     * Set program to use\n     *\n     * @param {Program} program A Program instance\n     */\n    setProgram(program) \n    {\n        this.sprite.setCustomProgram(program);\n    }\n\n    /**\n     * Set value of an element from the program\n     *\n     * @param {string} name Element's name in the shader\n     * @param {Type} type Type of value to send\n     * @param {Array.<number>|number|boolean|Texture|Float32Array} value A value\n     */\n    setEffectValue(name, type, value, groupCount) \n    { \n        this.renderApi.setUniform(this.sprite.getCustomProgram(), name, type, value, groupCount);\n    }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Extra/PostEffect.js\n **/","import {Img as Image} from '../Image.js';\nimport {RenderTarget} from './RenderTarget.js';\nimport {Texture} from '../Textures/Texture.js';\nimport {WebGL} from './WebGL/RenderWebGL.js';\n\n/**\n * A rendering texture: Supported by WebGL only.\n *\n * @extends {RenderTarget}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class RenderTexture extends RenderTarget\n{\n    /**\n     * Constructor\n     *\n     * @param {number} width Texture's width\n     * @param {number} height Texture's height\n     * @param {number} textureCount Texture count\n     * @param {boolean=} useDepthBuffer True to use a depth buffer\n     * @param {boolean=} useStencilBuffer True to use a stencil buffer\n     */\n    constructor(width, height, textureCount, useDepthBuffer = true, useStencilBuffer = false)\n    {\n        super();\n\n        /**\n        * The render API to use\n        *\n        * @type {RenderAPI}\n        * @protected\n        */\n        this.renderApi = WebGL.getInstance();\n\n        /**\n        * Frame buffer identifier\n        *\n        * @type {number}\n        * @private\n        */\n        this.framebuffer = this.renderApi.createFrameBuffer();\n\n        /**\n        * An array with the textures to draw in\n        *\n        * @type {Array.<Texture>}\n        * @private\n        */\n        this.textures = [];\n\n        // Init the render texture\n        this.init(width, height, textureCount, useDepthBuffer, useStencilBuffer);\n    }\n\n    /**\n     * Init\n     *\n     * @param {number} width Texture's width\n     * @param {number} height Texture's height\n     * @param {number} textureCount Texture count\n     * @param {boolean=} useDepthBuffer True to use a depth buffer\n     * @param {boolean=} useStencilBuffer True to use a depth buffer\n     * @private\n     */\n    init( width, height, textureCount, useDepthBuffer = true, useStencilBuffer = false) \n    {\n        // Create textures.\n        for (let i = 0; i < textureCount; i++)\n        {\n            let image = new Image();\n            image.create(width, height, null);\n\n            let texture = new Texture();\n            texture.setRepeated(false);\n            texture.setSmooth(true);\n            texture.useMipmap(false);\n            texture.loadFromImage(image);\n            this.textures.push(texture);\n        }\n\n        // Attach the texture to the frame buffer\n        this.renderApi.initFrameBuffer(this.framebuffer, this.textures, useDepthBuffer, useStencilBuffer);\n    }\n\n    /**\n     * Clear the texture\n     *\n     * @param {Color} color A Color instance\n     */\n    clear(color) \n    {\n        // Remove previous tasks.\n        this.removeTasks();\n\n        // Bind frame buffer.\n        this.begin();\n\n        // Clear screen.\n        this.renderApi.clear(color);\n    }\n\n    /**\n     * Begin rendering to texture\n     */\n    begin() \n    {\n        this.renderApi.bindFrameBuffer(this.framebuffer);    \n    }\n\n    /**\n     * Display\n     */\n    display() \n    {\n        super.display();\n\n        // Go back to the default buffer\n        this.renderApi.bindFrameBuffer(-1);\n    }\n\n    /**\n     * Output Textures\n     *\n     * @return {Array.<Texture>} An array of Texture\n     */\n    getTextures() \n    {\n        return this.textures;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/RenderTexture.js\n **/","import {Context} from '../Context.js';\nimport {RenderTask} from './RenderTask.js';\n\n/**\n * A rendering target\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class RenderTarget\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {   \n        /**\n        * A reference to the active task\n        *\n        * @type {null|RenderTask} \n        * @protected\n        */\n        this.activeTask = null;\n\n        /**\n        * Context instance\n        *\n        * @type {Context} \n        * @protected\n        */\n        this.context = new Context();\n\n        /**\n        * Tasks to execute\n        *\n        * @type {Array.<RenderTask>} \n        * @protected\n        */\n        this.tasks = [];\n\n        /**\n        * The render API to use\n        *\n        * @type {RenderAPI}\n        * @protected\n        */\n        this.renderApi = null;\n    }\n\n    /**\n     * Clear the rendering target\n     *\n     * @param {Color} color A Color instance\n     */\n    clear(color) { };\n\n    /**\n     * Display\n     */\n    display() \n    {\n        for (let i = 0; i < this.tasks.length; i++)\n            this.tasks[i].execute(this.renderApi);\n    }\n\n    /**\n     * Create a new task\n     *\n     * @return {number} RenderTask's index\n     */\n    createTask() \n    { \n        this.tasks.push(new RenderTask());\n        return (this.tasks.length - 1);\n    }\n\n    /**\n     * Render the given scene\n     *\n     * @param {Scene} scene A Scene instance\n     * @param {Camera} camera A Camera instance\n     */\n    render(scene, camera) \n    {\n        // Clear render API cache\n        this.renderApi.clearCache();\n\n        // Set default camera\n        this.renderApi.setActiveCamera(camera);\n\n        // Ensure at least one task is alive\n        if (!this.getActiveTask())\n            this.setActiveTask(this.createTask());\n\n        // Manage the scene\n        scene.visit(this);\n    }\n\n    /**\n     * Set the task with the given index active\n     *\n     * @param {number} index An integer representing task's index\n     */\n    setActiveTask(index) \n    {\n        if (index >= 0 && index < this.tasks.length)\n            this.activeTask = this.tasks[index];\n    }\n\n    /**\n     * Get the active task\n     *\n     * @return {?RenderTask} A RenderTask or null\n     */\n    getActiveTask() \n    {\n        return this.activeTask;\n    }\n\n    /**\n     * Remove all the tasks in memory\n     */\n    removeTasks() \n    {\n        this.tasks.length = 0;\n        this.activeTask = null;\n    }\n\n    /**\n     * Get the render API\n     *\n     * @return {RenderAPI} A Render API instance\n     */\n    getRenderAPI() \n    {\n        return this.renderApi;\n    }\n\n    /**\n     * Get size\n     *\n     * @return {Array.<number>} A array with size on x and y\n     */\n    getSize() \n    {\n        return this.context.getSize();\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/RenderTarget.js\n **/","/**\n * A context\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Context\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n         * The DOM element\n         *\n         * @type {Element}\n         */\n        this.domElement = null;\n\n        /**\n         * Context instance\n         *\n         * @type {WebGLRenderingContext|Object}\n         * @public\n         */\n        this.instance = null;\n    }\n\n    /**\n     * Shortcut to the active context's instance\n     *\n     * @enum {Object}\n     */\n    static getActive()\n    {\n        return Context.current.instance;\n    }\n\n    /**\n     * Init\n     *\n     * @param {Context.Type} type Type of context\n     * @param {{antialiasing: boolean, width: (number|undefined), height: (number|undefined)}} options Options\n     * @param {string} targetID Targeted DOM element\n     */\n    init(type, options, targetID)\n    {\n        // Get DOM element.\n        let target = document.getElementById(targetID);\n        if (!target)\n            throw '404 - Canvas with the name ' + targetID + ' not found.';\n\n        // Init webgl context.\n        if (type == Context.Type.WebGL)\n        {\n            // Create canvas.\n            this.domElement         = document.createElement('canvas');\n            this.domElement.width   = target.offsetWidth;\n            this.domElement.height  = target.offsetHeight;\n            target.appendChild(this.domElement);\n\n            // Init WebGL.\n            this.instance                   = this.domElement.getContext('webgl', { antialias: options.antialiasing || true });\n            this.instance.viewportWidth     = this.domElement.width;\n            this.instance.viewportHeight    = this.domElement.height;\n        }\n\n        // Set as active context.\n        if (!Context.current)\n            Context.current = this;\n    }\n\n    /**\n     * Resize context\n     *\n     * @param {number} width Width to assign in pixel\n     * @param {number} height Height to assign in pixel\n     */\n    resize(width, height)\n    {\n        if (!this.domElement || !this.instance)\n            return;\n\n        // DOM\n        this.domElement.width = width;\n        this.domElement.height = height;\n\n        // WebGL\n        this.instance.viewportWidth = width;\n        this.instance.viewportHeight = height;\n    }\n\n    /**\n     * Activate the context\n     *\n     * The context become the one used by the renderer\n     */\n    activate()\n    {\n        Context.current = this;\n    }\n\n    /**\n     * Get size\n     *\n     * @return {Array.<number>} A array with size on x and y\n     */\n    getSize()\n    {\n        return [this.domElement.width, this.domElement.height];\n    }\n}\n\n/**\n * Type of context\n *\n * @enum {number}\n */\nContext.Type = { WebGL: 0 };\n\n/**\n * Active context\n *\n * @type {Context}\n */\nContext.current = null;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Context.js\n **/","/**\n * A rendering task\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class RenderTask\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n        * Queue with opaques commands to process\n        *\n        * @type {Array.<Array.<RenderCommand>>}\n        * @private\n        */\n        this.opaqueQueue = [];\n\n        /**\n        * Queue with transparents commands to process\n        *\n        * @type {Array.<Array.<RenderCommand>>}\n        * @private\n        */\n        this.transparentQueue = [];\n    }\n\n    /**\n     * Add a command to the task\n     *\n     * @param {RenderCommand} command A RenderCommand instance\n     * @param {number=} queue ID of the queue\n     */\n    addCommand(command, queue = 0) \n    {\n        if (command.isOpaque())\n        {\n            this.opaqueQueue[queue] = this.opaqueQueue[queue] || [];\n            this.opaqueQueue[queue].push(command);\n        }\n        else\n        {\n            this.transparentQueue[queue] = this.transparentQueue[queue] || [];\n            this.transparentQueue[queue].push(command);\n        }\n    }\n\n    /**\n     * Execute the task\n     *\n     * @param {RenderAPI} renderAPI RenderAPI instance used to process the commands\n     */\n    execute(renderAPI) \n    { \n        let i = 0, j = 0;\n\n        // First we execute opaque commands\n        for (i = 0; i < this.opaqueQueue.length; i++)\n        {\n            for (j = 0; j < this.opaqueQueue[i].length; j++)\n                this.opaqueQueue[i][j].execute(renderAPI);\n        }\n\n        // Secondly, we execute non-opaque ones\n        for (i = 0; i < this.transparentQueue.length; i++)\n        {\n            for (j = 0; j < this.transparentQueue[i].length; j++)\n                this.transparentQueue[i][j].execute(renderAPI);\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/RenderTask.js\n **/","import {Cache} from './Cache.js';\nimport {Context} from '../../Context.js';\nimport {DirectionalLight} from '../../Lights/DirectionalLight.js';\nimport {Instances, BufferData} from './Instances.js';\nimport {PointLight} from '../../Lights/PointLight.js';\nimport {Program, ProgramElement} from '../../Program.js';\nimport {RenderAPI} from '../RenderAPI.js';\nimport {StateBlock, DrawingMode} from '../../StateBlock.js';\nimport {TextureCube} from '../../Textures/TextureCube.js';\nimport {TextureVideo} from '../../Textures/TextureVideo.js';\nimport {Type} from '../../Types.js';\nimport {VertexElement} from '../../VertexFormat.js';\nimport * as WebGLConst from './WebGL.js';\n\n// Unique instance\nlet instance = null;\n\n/**\n * WebGL renderer\n *\n * @extends {RenderAPI}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class WebGL extends RenderAPI\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        super();\n\n        // Singleton\n        if (!instance)\n            instance = this;\n\n        /**\n         * Cache\n         *\n         * @type {WebGL.Cache}\n         * @private\n         */\n        this.cache = new Cache();\n\n        /**\n         * Array with enabled attribut\n         *\n         * @type {Array.<boolean>}\n         * @private\n         */\n        this.enabledVertexAttribArray = [];\n\n        /**\n         * WebGL instances\n         *\n         * @type {Instances}\n         * @private\n         */\n        this.instances = new Instances();\n\n        /**\n         * Active states\n         *\n         * @type {StateBlock}\n         * @private\n         */\n        this.state = new StateBlock();\n\n        // Init state block\n        this.initStateBlockWithDefaultValues(this.state);\n\n        return instance;\n    }\n\n    /**\n     * Get unique instance\n     */\n    static getInstance()\n    {\n        if (!instance)\n            instance = new WebGL();\n\n        return instance;\n    }\n\n    /**\n     * Bind light\n     *\n     * @param {Light} light A Light instance\n     */\n    bindLight(light) \n    { \n        this.cache.lights.push(light);\n    }\n\n    /**\n     * Bind the given framebuffer\n     *\n     * @param {number} framebufferID An identifier, -1 to bind default the frame buffer\n     */\n    bindFrameBuffer(framebufferID) \n    {\n        let gl = Context.getActive();\n\n        if (framebufferID == -1)\n            gl.bindFramebuffer(WebGLConst.FRAMEBUFFER, null);\n        else \n        {\n            let webGLBuffer = this.instances.frameBuffers[framebufferID];\n            if (!webGLBuffer)\n                return;\n\n            gl.bindFramebuffer(WebGLConst.FRAMEBUFFER, webGLBuffer);\n        }\n    }\n\n    /**\n     * Bind texture to the the given slot\n     *\n     * @param {number} slot Targeted slot's index\n     * @param {Private.TextureInterface} texture A Texture instance\n     */\n    bindTexture(slot, texture) \n    {\n        if (!texture.isReady())\n            return;\n\n        let isTextureVideo  = (texture instanceof TextureVideo);\n        let needUpdate      = false;\n\n        // Retrieve context\n        let gl = Context.getActive();\n\n        // Create WebGL instance\n        let webGLTexture = this.instances.textures[texture.getUID()];\n        if (!webGLTexture)\n        {\n            webGLTexture = gl.createTexture();\n            this.instances.textures[texture.getUID()] = webGLTexture;\n            needUpdate = true;\n        }\n\n        // Bind it!\n        if (this.cache.texture != texture)\n        {\n            gl.activeTexture(WebGLConst.TEXTURE0 + slot);\n            gl.bindTexture(WebGLConst.TEXTURE_2D, webGLTexture);\n        }\n\n        // Need to update the texture?\n        if (needUpdate)\n        {\n            let imageSize = [0, 0];\n        \n            gl.pixelStorei(WebGLConst.UNPACK_FLIP_Y_WEBGL, true);\n\n            // Upload to the GPU\n            if (isTextureVideo)\n                gl.texImage2D(WebGLConst.TEXTURE_2D, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, texture.getVideoData());\n            else\n            {\n                // WebGL support image loading from HTMLImage instance and from array of pixels\n                let image   = texture.getImage();\n                let data    = image.getData();\n                imageSize   = image.getSize();\n\n                if (data instanceof Image)\n                    gl.texImage2D(WebGLConst.TEXTURE_2D, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, data);\n                else\n                    gl.texImage2D(WebGLConst.TEXTURE_2D, 0, WebGLConst.RGBA, imageSize[0], imageSize[1], 0, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, data);\n            }\n\n            let isPOT = ((imageSize[0] & (imageSize[0] - 1)) === 0) && ((imageSize[1] & (imageSize[1] - 1)) === 0);\n\n            // Apply filters.\n            gl.texParameteri(WebGLConst.TEXTURE_2D, WebGLConst.TEXTURE_WRAP_S, (texture.isRepeated() ? WebGLConst.REPEAT : WebGLConst.CLAMP_TO_EDGE) );\n            gl.texParameteri(WebGLConst.TEXTURE_2D, WebGLConst.TEXTURE_WRAP_T, (texture.isRepeated() ? WebGLConst.REPEAT : WebGLConst.CLAMP_TO_EDGE) );\n\n            gl.texParameteri(WebGLConst.TEXTURE_2D, WebGLConst.TEXTURE_MAG_FILTER, (texture.isSmoothed() ? WebGLConst.LINEAR : WebGLConst.NEAREST));\n\n            let min_filter = (isPOT && texture.isMipmaped()) ? WebGLConst.LINEAR_MIPMAP_NEAREST : WebGLConst.LINEAR;\n            gl.texParameteri(WebGLConst.TEXTURE_2D, WebGLConst.TEXTURE_MIN_FILTER, (texture.isSmoothed() ? min_filter : WebGLConst.NEAREST));\n\n            if (!isTextureVideo && isPOT && texture.isMipmaped())\n                gl.generateMipmap(WebGLConst.TEXTURE_2D);\n        }\n        // Video need to be updated continuously\n        else if (isTextureVideo)\n            gl.texImage2D(WebGLConst.TEXTURE_2D, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, texture.getVideoData());\n\n        this.cache.texture = texture;\n    }\n\n    /**\n     * Bind texture cube to the the given slot\n     *\n     * @param {number} slot Targeted slot's index\n     * @param {TextureCube} texture A TextureCube instance\n     */\n    bindTextureCube(slot, texture) \n    {\n        // Cache\n        if (!texture.isReady())\n            return;\n\n        // Retrieve context\n        let gl = Context.getActive();\n\n        // Create geometry's data\n        let needUpdate = false;\n        let webGLTexture = this.instances.textures[texture.getUID()];\n        if (!webGLTexture)\n        {\n            webGLTexture = gl.createTexture();\n            this.instances.textures[texture.getUID()] = webGLTexture;\n            needUpdate = true;\n        }\n\n        if (this.cache.texture != texture)\n        {\n            gl.activeTexture(WebGLConst.TEXTURE0 + slot);\n            gl.bindTexture(WebGLConst.TEXTURE_CUBE_MAP, webGLTexture);\n        }\n\n        // Need to update the texture?\n        if (needUpdate)\n        {\n            let images = texture.getImages();\n\n            // Upload to the GPU\n            gl.texImage2D(WebGLConst.TEXTURE_CUBE_MAP_POSITIVE_X, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, images[TextureCube.Face.Left].getData());\n            gl.texImage2D(WebGLConst.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, images[TextureCube.Face.Right].getData());\n            gl.texImage2D(WebGLConst.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, images[TextureCube.Face.Up].getData());\n            gl.texImage2D(WebGLConst.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, images[TextureCube.Face.Down].getData());\n            gl.texImage2D(WebGLConst.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, images[TextureCube.Face.Front].getData());\n            gl.texImage2D(WebGLConst.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, images[TextureCube.Face.Back].getData());\n\n            // Apply filters\n            gl.texParameteri(WebGLConst.TEXTURE_CUBE_MAP, WebGLConst.TEXTURE_MAG_FILTER, WebGLConst.NEAREST);\n            gl.texParameteri(WebGLConst.TEXTURE_CUBE_MAP, WebGLConst.TEXTURE_MIN_FILTER, WebGLConst.NEAREST);\n        }\n\n        this.cache.texture = texture;\n    }\n\n    /**\n     * Clear the rendering target\n     *\n     * @param {Color} color A Color instance\n     */\n    clear(color) \n    {\n        // Apply color.\n        if (!color.isEqual(this.cache.clearColor))\n        {\n            Context.getActive().clearColor(color.r, color.g, color.b, color.a); \n            this.cache.clearColor = color;\n        }\n\n        // Clear buffers\n        Context.getActive().clear(WebGLConst.COLOR_BUFFER_BIT | WebGLConst.DEPTH_BUFFER_BIT | WebGLConst.DEPTH_BUFFER_BIT);\n    }\n\n    /**\n     * Clear cache.\n     */\n    clearCache() \n    {\n        this.cache.program = null;\n        this.cache.lights.length = 0;\n    }\n\n    /**\n     * Create a new frame buffer\n     *\n     * @return {number} An identifier to work with it later\n     */\n    createFrameBuffer() \n    { \n        let identifier  = this.instances.frameBuffers.length;\n\n        let frameBuffer = Context.getActive().createFramebuffer();\n        this.instances.frameBuffers.push(frameBuffer);\n\n        return identifier;\n    }\n\n    /**\n    * Draw indexed primitives\n    *\n    * @param {DrawingMode} drawingMode Drawing mode to use\n    * @param {number} firstVertexIndex Index of the first vertex to draw, useful to draw some parts\n    * @param {number} vertexCount Vertex count to draw\n    */\n    drawIndexedPrimitives(drawingMode, firstVertexIndex, vertexCount) \n    {\n        Context.getActive().drawElements(this.convertDrawingModeToConstant(drawingMode), vertexCount, WebGLConst.UNSIGNED_SHORT, firstVertexIndex);\n        this.disableVertexAttribArray();\n    }\n\n    /**\n    * Draw primitives\n    *\n    * @param {DrawingMode} drawingMode Drawing mode to use\n    * @param {number} firstVertexIndex Index of the first vertex to draw, useful to draw some parts\n    * @param {number} vertexCount Vertex count to draw\n    */\n    drawPrimitives(drawingMode, firstVertexIndex, vertexCount) \n    {\n        Context.getActive().drawArrays(this.convertDrawingModeToConstant(drawingMode), firstVertexIndex, vertexCount);\n        this.disableVertexAttribArray();\n    }\n\n    /**\n    * Disable enabled vertex attributs array\n    *\n    * @private\n    */\n    disableVertexAttribArray() \n    {\n        // Retrieve context.\n        let gl = Context.getActive();\n\n        // Disable attributs\n        for (let i in this.enabledVertexAttribArray)\n            gl.disableVertexAttribArray(i);\n    }\n\n    /**\n     * Init frame buffer: attach it to textures, depth buffer and/or a stencil buffer\n     *\n     * @param {number} framebufferID Targeted slot's index\n     * @param {Array.<Texture>} textures An array of Texture instances\n     * @param {boolean=} useDepthBuffer True to use a depth buffer\n     * @param {boolean=} useStencilBuffer True to use a stencil buffer\n     */\n    initFrameBuffer(framebufferID, textures, useDepthBuffer = true, useStencilBuffer = false)\n    {\n        // Ensure FBO is ready\n        let webGLBuffer = this.instances.frameBuffers[framebufferID];\n        if (!webGLBuffer)\n            return;\n\n        // Retrieve context\n        let gl   = Context.getActive();\n        let size = [0, 0]; // We will retrieve FBO's size from his textures\n\n        // Bind frame buffer\n        this.bindFrameBuffer(framebufferID);\n\n        // Attach textures.\n        for (let i = 0; i < textures.length; i++)\n        {\n            // Force texture creation\n            this.bindTexture(i, textures[i]);\n\n            // Retrieve size\n            size = textures[i].getImage().getSize();\n\n            // Attach texture\n            let webGLTexture = this.instances.textures[textures[i].getUID()];\n\n            // Multiple attachements are not supported by WebGL\n            gl.framebufferTexture2D(WebGLConst.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, WebGLConst.TEXTURE_2D, webGLTexture, 0);\n        }\n\n        // Attach depth and/or stencil buffers.\n        if (useDepthBuffer || useStencilBuffer)\n        {\n            let renderBuffer = gl.createRenderbuffer();\n            gl.bindRenderbuffer(WebGLConst.RENDERBUFFER, renderBuffer);\n\n            if (!useStencilBuffer)\n            {\n                gl.renderbufferStorage(WebGLConst.RENDERBUFFER, WebGLConst.DEPTH_COMPONENT16, size[0], size[1]);\n                gl.framebufferRenderbuffer(WebGLConst.FRAMEBUFFER, WebGLConst.DEPTH_ATTACHMENT, WebGLConst.RENDERBUFFER, renderBuffer);                \n            }\n            else \n            {\n                gl.renderbufferStorage(WebGLConst.RENDERBUFFER, WebGLConst.DEPTH_STENCIL, size[0], size[1]);\n                gl.framebufferRenderbuffer(WebGLConst.FRAMEBUFFER, WebGLConst.DEPTH_STENCIL_ATTACHMENT, WebGLConst.RENDERBUFFER, renderBuffer);\n            }\n\n            gl.bindRenderbuffer(WebGLConst.RENDERBUFFER, null);\n        }\n\n        // Unbind FBO safely\n        this.bindFrameBuffer(-1);\n    }\n\n    /**\n    * Set default values on the state block instance\n    *\n    * @private\n    */\n    initStateBlockWithDefaultValues(stateBlock) \n    {\n        this.state.depthTest    = false;\n        this.state.depthWrite   = false;\n        this.state.stencilTest  = false;\n    }\n\n    /**\n     * Send lights to the given program\n     *\n     * @param {Program} program A Program instance\n     * @private\n     */\n    sendLights(program) \n    {\n        let webGLProgram = this.instances.programs[program.getUID()];\n        if (!webGLProgram)\n            return;\n\n        let lightCount = this.cache.lights.length;\n\n        // Fill arrays.\n        let light           = this.cache.lights[0];\n        let needData        = false;\n        let needDirection   = false;\n        for (let i = 0, j = 0; i < this.cache.lights.length; i++, j += 3)\n        {\n            light = this.cache.lights[i];\n\n            // Type of light\n            if (light instanceof PointLight) \n                this.cache.lightsType[i]            = 0;\n            else if (light instanceof DirectionalLight) \n                this.cache.lightsType[i]            = 1;\n            else\n                this.cache.lightsType[i]            = 2;\n\n            // Ambient\n            let ambient                             = light.getAmbientColor();\n            this.cache.lightsAmbient[j]             = ambient.r;\n            this.cache.lightsAmbient[j+1]           = ambient.g;\n            this.cache.lightsAmbient[j+2]           = ambient.b;\n\n            // Data (linear, quadratic and constant data)\n            if (this.cache.lightsType[i] != 1)\n            {\n                let values                          = light.getValues();\n                this.cache.lightsData[j]            = values[0];\n                this.cache.lightsData[j+1]          = values[1];\n                this.cache.lightsData[j+2]          = values[2];\n                needData                            = true;\n            }\n            else\n            {            \n                this.cache.lightsData[j]            = 0;\n                this.cache.lightsData[j+1]          = 0;\n                this.cache.lightsData[j+2]          = 0;   \n            }\n\n            // Diffuse.\n            let diffuse                             = light.getDiffuseColor();\n            this.cache.lightsDiffuse[j]             = diffuse.r;\n            this.cache.lightsDiffuse[j+1]           = diffuse.g;\n            this.cache.lightsDiffuse[j+2]           = diffuse.b;\n\n            // Direction.\n            if (this.cache.lightsType[i] !== 0)\n            {\n                let direction                       = light.getDirection();\n                this.cache.lightsDirection[j]       = direction[0];\n                this.cache.lightsDirection[j+1]     = direction[1];\n                this.cache.lightsDirection[j+2]     = direction[2];\n                needDirection                       = true;\n            }\n            else \n            {\n                this.cache.lightsDirection[j]       = 0;\n                this.cache.lightsDirection[j+1]     = 0;\n                this.cache.lightsDirection[j+2]     = 0;            \n            }\n\n            let position                            = light.getPosition();\n            this.cache.lightsPosition[j]            = position[0];\n            this.cache.lightsPosition[j+1]          = position[1];\n            this.cache.lightsPosition[j+2]          = position[2];\n\n            // Specular.\n            let specular                            = light.getSpecularColor();\n            this.cache.lightsSpecular[j]            = specular.r;\n            this.cache.lightsSpecular[j+1]          = specular.g;\n            this.cache.lightsSpecular[j+2]          = specular.b;\n        }\n\n        // Send data.\n        if (this.cache.lights.length)\n        {        \n            this.setUniform(program, 'uCameraPosition', Type.Float, this.activeCamera.getPosition());\n            this.setUniform(program, 'lights.count', Type.Int, lightCount);\n            this.setUniform(program, 'lights.ambient', Type.Float, this.cache.lightsAmbient, 3);\n\n            if (needData)\n                this.setUniform(program, 'lights.data', Type.Float, this.cache.lightsData, 3);\n\n            this.setUniform(program, 'lights.diffuse', Type.Float, this.cache.lightsDiffuse, 3);\n\n            if (needDirection)\n                this.setUniform(program, 'lights.direction', Type.Float, this.cache.lightsDirection, 3);\n\n            this.setUniform(program, 'lights.position', Type.Float, this.cache.lightsPosition, 3);\n            this.setUniform(program, 'lights.specular', Type.Float, this.cache.lightsSpecular, 3);\n            this.setUniform(program, 'lights.type', Type.Int, this.cache.lightsType, 1);\n        }\n    }\n\n    /**\n     * Set camera to use\n     *\n     * @param {Camera} camera A Camera instance\n     */\n    setActiveCamera(camera) \n    {\n        super.setActiveCamera(camera);\n\n        let viewport = camera.getViewport();\n        Context.getActive().viewport(viewport[0], viewport[1], viewport[2], viewport[3]);\n    }\n\n    /**\n     * Set blend mode to apply\n     *\n     * @param {BlendMode} blendMode A BlendMode instance\n     */\n    setBlendMode(blendMode) \n    {\n        // Avoid useless operations\n        if (blendMode.isEqual(this.state.blendMode))\n            return;\n\n        // Retrieve context\n        let gl = Context.getActive();\n\n        // Disable blending.\n        if (blendMode.colorSourceFactor == BlendMode.Factor.One && blendMode.colorDestinationFactor == BlendMode.Factor.Zero)\n            gl.disable(WebGLConst.BLEND);\n        else\n        {\n            // Enable it\n            gl.enable(WebGLConst.BLEND);\n\n            // Apply functions and equations\n            gl.blendEquationSeparate( this.convertBlendingEquationToConstant(blendMode.colorEquation), this.convertBlendingEquationToConstant(blendMode.alphaEquation) );\n\n            gl.blendFuncSeparate(   this.convertBlendingFactorToConstant(blendMode.colorSourceFactor), \n                                    this.convertBlendingFactorToConstant(blendMode.colorDestinationFactor), \n                                    this.convertBlendingFactorToConstant(blendMode.alphaSourceFactor), \n                                    this.convertBlendingFactorToConstant(blendMode.alphaDestinationFactor) );\n        }\n\n        this.state.blendMode = blendMode;\n    }\n\n    /**\n     * Set depth state\n     *\n     * @param {boolean} depthTest True to activate depth testing, otherwise false\n     * @param {boolean} writeTest True to activate depth writing otherwise false\n     * @param {DepthFunction} depthFunction Depth function to apply\n     */\n    setDepthState(depthTest, writeTest, depthFunction) \n    {\n        let gl = Context.getActive();\n\n        if (!depthTest && this.state.depthTest)\n            gl.disable(WebGLConst.DEPTH_TEST);\n        else if (depthTest)\n        {\n            if (!this.state.depthTest)\n                gl.enable(WebGLConst.DEPTH_TEST);\n\n            if (this.state.writeTest != writeTest)\n            {\n                gl.depthMask(writeTest);\n                this.state.writeTest = writeTest;\n            }\n\n            if (this.state.depthFunction != depthFunction)\n            {\n                gl.depthFunc(this.convertDepthFunctionToConstant(depthFunction));\n                this.state.depthFunction = depthFunction;\n            }\n        }\n\n        this.state.depthTest = depthTest;\n    }\n\n    /**\n     * Set face culling state\n     *\n     * @param {FaceCulling} mode Face culling mode to set\n     */\n    setFaceCulling(mode) \n    {\n        // Avoid useless operations\n        if (this.state.faceCulling == mode)\n            return;\n\n        // Retrieve context\n        let gl = Context.getActive();\n\n        // Apply state\n        if (mode == FaceCulling.None)\n            gl.disable(WebGLConst.CULL_FACE);\n        else\n        {\n            if (this.state.faceCulling == FaceCulling.None)\n                gl.enable(WebGLConst.CULL_FACE);\n\n            if (mode == FaceCulling.Front)\n                gl.cullFace(WebGLConst.FRONT);\n            else\n                gl.cullFace(WebGLConst.BACK);\n        }\n\n        this.state.faceCulling = mode;\n    } \n\n    /**\n     * Set index buffer to use\n     *\n     * @param {number|WebGLBuffer} buffer A buffer instance\n     */\n    setIndexBuffer(buffer) \n    {\n        Context.getActive().bindBuffer(WebGLConst.ELEMENT_ARRAY_BUFFER, buffer);\n    }\n\n    /**\n     * Set geometry to use\n     *\n     * @param {Geometry} geometry A Geometry instance\n     */\n    setGeometry(geometry) \n    {\n        // Ensure valid format is present\n        if (!geometry.getVertexFormat())\n            return;\n\n        // Set vertex format to use\n        this.setVertexFormat(geometry.getVertexFormat());\n\n        // Retrieve context\n        let gl = Context.getActive();\n\n        // Create geometry's data\n        let geometryInstances = this.instances.buffers[geometry.getUID()];\n        if( !geometryInstances )\n        {\n            geometryInstances = new BufferData();\n            this.instances.buffers[geometry.getUID()] = geometryInstances;\n        }\n\n        // Prepare/Set index buffer\n        {\n            if (!geometryInstances.indexBuffer)\n                geometryInstances.indexBuffer = gl.createBuffer();\n\n            this.setIndexBuffer(geometryInstances.indexBuffer);\n\n            // Update buffer data\n            if (this.cache.vertexFormat.isIndicesWaitingUpdate())\n            {\n                gl.bufferData( WebGLConst.ELEMENT_ARRAY_BUFFER, geometry.getIndices(), WebGLConst.STATIC_DRAW );\n                this.cache.vertexFormat.setIndicesAsWaitingUpdate(false);\n            }\n        }\n\n        // Prepare/Set vertex buffer\n        let vertexElements = this.cache.vertexFormat.getElements();\n        for (let i = 0; i < vertexElements.length; i++)\n        {\n            if (!geometryInstances.vertexBuffers[i])\n                geometryInstances.vertexBuffers[i] = gl.createBuffer();\n\n            // Apply buffer\n            this.setVertexBuffer(i, geometryInstances.vertexBuffers[i]);\n\n            // Fill it\n            if (this.cache.vertexFormat.isStreamWaitingUpdate(vertexElements[i].stream))\n            { \n                let streamType = this.convertStreamTypeToConstant(this.cache.vertexFormat.getStreamType(vertexElements[i].stream));\n\n                switch( vertexElements[i].usage )\n                {\n                    case VertexElement.Usage.Position:\n                        gl.bufferData( WebGLConst.ARRAY_BUFFER, geometry.getVerticesPositions(), streamType );\n                        break;\n                    case VertexElement.Usage.Color:\n                        gl.bufferData( WebGLConst.ARRAY_BUFFER, geometry.getVerticesColors(), streamType );\n                        break;\n                    case VertexElement.Usage.UVS:\n                        gl.bufferData( WebGLConst.ARRAY_BUFFER, geometry.getVerticesUVs(), streamType );\n                        break;\n                    case VertexElement.Usage.Normal:\n                        gl.bufferData( WebGLConst.ARRAY_BUFFER, geometry.getVerticesNormals(), streamType );\n                        break;\n                    default:\n                    case VertexElement.Usage.Tangent:\n                        console.log('Given vertex element is not supported for now.');\n                        break;\n                }\n\n                this.cache.vertexFormat.setStreamAsWaitingUpdate(vertexElements[i].usage, false);\n            }\n        }\n    }\n\n    /**\n     * Set program to use\n     *\n     * @param {Program} program A Program instance to use\n     * @return {number} -1: an error occured, 0: everything is ok, 1 : program have been changed\n     */\n    setProgram(program) \n    {\n        let webGLProgram = this.instances.programs[program.getUID()];\n\n        // Retrieve context.\n        let gl = Context.getActive();\n\n        // Create program.\n        if (!webGLProgram)\n        {\n            if (!program.isReady())\n                return -1;\n\n            let sources     = program.getSources();\n            let programID   = gl.createProgram();\n\n            // Load vertex and fragment shaders\n            let vertexShader = gl.createShader(WebGLConst.VERTEX_SHADER);\n            gl.shaderSource(vertexShader, sources[0]);\n            gl.compileShader(vertexShader);\n\n            let fragmentShader = gl.createShader(WebGLConst.FRAGMENT_SHADER);\n            gl.shaderSource(fragmentShader, sources[1]);\n            gl.compileShader(fragmentShader);\n\n            // Link to the program\n            gl.attachShader(programID, vertexShader);\n            gl.attachShader(programID, fragmentShader);\n\n            // Bind default locations\n            gl.bindAttribLocation(programID, VertexElement.Usage.Position,   'aPosition');\n            gl.bindAttribLocation(programID, VertexElement.Usage.UVS,        'aTexCoord');\n            gl.bindAttribLocation(programID, VertexElement.Usage.Color,      'aColor');\n            gl.bindAttribLocation(programID, VertexElement.Usage.Normal,     'aNormal');\n            gl.bindAttribLocation(programID, VertexElement.Usage.Tangent,    'aTangent');\n\n            // Link program\n            gl.linkProgram(programID);\n\n            // Remove vertex and fragment from memory\n            gl.deleteShader(vertexShader);\n            gl.deleteShader(fragmentShader);\n\n            // Save it\n            this.instances.programs[program.getUID()] = programID;\n            webGLProgram = programID;\n\n            // Get uniforms and attributs informations\n            {\n                let i;\n                let activeUniforms  = gl.getProgramParameter(programID, WebGLConst.ACTIVE_UNIFORMS);\n                let uniforms        = program.getUniforms();\n                for ( i = 0; i < activeUniforms; i++) \n                {\n                    let uniform   = gl.getActiveUniform(programID, i);\n\n                    let finalName = uniform.name;\n                    let arrayPos  = uniform.name.indexOf('[', uniform.name.length - 3);\n                    if (arrayPos >= 0)\n                        finalName = uniform.name.substring(0, arrayPos);\n\n                    uniforms[finalName] = new ProgramElement(gl.getUniformLocation(programID, uniform.name), \n                                                                    finalName,\n                                                                    this.convertConstantToShaderTypes(uniform.type),\n                                                                    uniform.size);\n                }\n\n                let activeAttributes    = gl.getProgramParameter(programID, WebGLConst.ACTIVE_ATTRIBUTES);\n                let attributes          = program.getAttributes();\n                for (i = 0; i < activeAttributes; i++) \n                {\n                    let attribute = gl.getActiveAttrib(programID, i);\n                    attributes[attribute.name] = new ProgramElement(gl.getAttribLocation(programID, attribute.name), \n                                                                    attribute.name,\n                                                                    this.convertConstantToShaderTypes(attribute.type),\n                                                                    attribute.size);\n                }\n            }\n        }\n\n        // Bind program.\n        if (this.cache.program != webGLProgram)\n        {\n            // Use Program\n            gl.useProgram(webGLProgram);\n            this.cache.program = webGLProgram;\n\n            // Send lights's informations\n            this.sendLights(program);\n\n            return 1;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Set uniform value\n     *\n     * @param {Program} program A Program instance to use\n     * @param {string} name Uniform's name\n     * @param {Type} type Type of value to send\n     * @param {?Array<number>|Texture|boolean|number|Float32Array} value A value\n     * @param {number=} groupCount When an element is an array, you can create group (like sub-array)\n     * @return {boolean} True if uniform has been set successfully, otherwise false\n     */\n    setUniform(program, name, type, value, groupCount = 0) \n    {\n        // Check if program need to be set\n        this.setProgram(program);\n\n        let uniform = program.getUniform(name);\n        if (!uniform || !value)\n            return false;\n\n        // Retrieve context\n        let gl = Context.getActive();\n\n        // Send value to the program/shaders\n        switch(type)\n        {\n            case Type.Float:\n            {\n                if (value instanceof Array)\n                {\n                    if (groupCount && groupCount >= 1)\n                    {\n                        if (groupCount == 2)\n                            gl.uniform2fv(uniform.location, value);\n                        else if (groupCount == 3)\n                            gl.uniform3fv(uniform.location, value);\n                        else if (groupCount == 4)\n                            gl.uniform4fv(uniform.location, value);\n                        else if (groupCount == 1)\n                            gl.uniform1fv(uniform.location, value);\n                    }\n                    else\n                    {\n                        if (value.length == 3)\n                            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n                        else if (value.length == 4)\n                            gl.uniform4f(uniform.location, value[0], value[1], value[2], value[3]);\n                        else if (value.length == 3)\n                            gl.uniform2f(uniform.location, value[0], value[1]);                    \n                    }    \n                }\n                else\n                    gl.uniform1f(uniform.location, value);\n\n                break;\n            }\n            case Type.Int:\n            {\n                if (value instanceof Array)\n                {\n                    if (groupCount && groupCount >= 1)\n                    {\n                        if( groupCount == 2 )\n                            gl.uniform2iv(uniform.location, value);\n                        else if( groupCount == 3 )\n                            gl.uniform3iv(uniform.location, value);\n                        else if( groupCount == 4 )\n                            gl.uniform4iv(uniform.location, value);\n                        else if( groupCount == 1 )\n                            gl.uniform1iv(uniform.location, value);\n                    }\n                    else\n                    {\n                        if (value.length == 3)\n                            gl.uniform3i(uniform.location, value[0], value[1], value[2]);\n                        else if (value.length == 4)\n                            gl.uniform4i(uniform.location, value[0], value[1], value[2], value[3]);\n                        else if (value.length == 2)\n                            gl.uniform2i(uniform.location, value[0], value[1]); \n                    }               \n                }\n                else\n                    gl.uniform1i(uniform.location, value);\n\n                break;\n            }\n            case Type.Matrix:\n            {\n                if (value.length == 16)\n                    gl.uniformMatrix4fv(uniform.location, false, value);\n                else if (value.length == 4)\n                    gl.uniformMatrix2fv(uniform.location, false, value);\n                else if (value.length == 9)\n                    gl.uniformMatrix3fv(uniform.location, false, value);\n\n                break;\n            }\n            default:\n                break;\n        }\n\n        return true;\n    }\n\n    /**\n     * Set scissor test state\n     *\n     * @param {boolean} state True to activate scissor testing, otherwise false\n     * @param {number} x Position on x from the left of the screen\n     * @param {number} y Position on y from the bottom of the screen\n     * @param {number} w Width of the rectangle\n     * @param {number} h Height of the rectangle\n     */\n    setScissorTest(state, x, y, w, h) \n    {\n        // Retrieve context\n        let gl = Context.getActive();\n\n        if (!state)\n            gl.disable(WebGLConst.SCISSOR_TEST);\n        else\n        {\n            gl.enable(WebGLConst.SCISSOR_TEST);\n            gl.scissor(x, y, w, h);\n        }\n    }\n\n    /**\n     * Set stencil test state\n     *\n     * @param {boolean} activate True to activate stencil test, otherwise false\n     * @param {number} writeMask Stencil writing value\n     */\n    setStencilState(activate, writeMask) \n    {\n        // Retrieve context\n        let gl = Context.getActive();\n\n        if (!activate && this.state.stencilTest)\n            gl.disable(WebGLConst.STENCIL_TEST);\n        else if (activate)\n        {\n            if (!this.state.stencilTest)\n                gl.enable(WebGLConst.STENCIL_TEST);\n\n            if (this.state.stencilWrite != writeMask)\n            {\n                gl.stencilMask(writeMask);\n                this.state.stencilWrite = writeMask;\n            }\n        }\n\n        this.state.stencilTest = activate;\n    }\n\n    /**\n     * Set stencil function to use\n     *\n     * @param {StencilFunction} stencilFunction Function to use\n     * @param {number} reference Reference value\n     * @param {number} mask Mask to use\n     */\n    setStencilFunction(stencilFunction, reference, mask) \n    {\n        if( this.state.stencilFunction != stencilFunction || this.state.stencilReference != reference || this.state.stencilMask != mask )\n        {\n            Context.getActive().stencilFunc(this.convertStencilFunctionToConstant(stencilFunction), reference, mask);\n            this.state.stencilFunction  = stencilFunction;\n            this.state.stencilReference = reference;\n            this.state.stencilMask      = mask;\n        }\n    }\n\n    /**\n     * Set stencil operations to use\n     *\n     * @param {StencilOperation} sFail Function to use\n     * @param {StencilOperation} dpFail Reference value\n     * @param {StencilOperation} dppPass Mask to use\n     */\n    setStencilOperations(sFail, dpFail, dppPass) \n    {\n        if (this.state.stencilTestFail != sFail || this.state.stencilDepthTestFail != dpFail || this.state.stencilSuccess != dppPass)\n        {\n            Context.getActive().stencilOp(this.convertStencilOperationToConstant(sFail), \n                                   this.convertStencilOperationToConstant(dpFail), \n                                   this.convertStencilOperationToConstant(dppPass));\n\n            this.state.stencilTestFail      = sFail;\n            this.state.stencilDepthTestFail = dpFail;\n            this.state.stencilSuccess       = dppPass;\n        }\n    }\n\n    /**\n     * Set vertex buffer to use\n     *\n     * Warning: You must call \"setVertexFormat\" before!\n     * @param {number} stream An integer representing stream to use\n     * @param {number|WebGLBuffer} buffer A buffer instance\n     */\n    setVertexBuffer(stream, buffer) \n    {\n        // Retrieve context\n        let gl = Context.getActive();\n\n        // Bind buffer\n        gl.bindBuffer(WebGLConst.ARRAY_BUFFER, buffer);\n\n        // Enable vertex data\n        let vertexElements = this.cache.vertexFormat.getElements();\n        for (let i = 0; i < vertexElements.length; i++)\n        {\n            if (vertexElements[i].stream == stream)\n            {\n                // Enable\n                gl.enableVertexAttribArray(vertexElements[i].usage);\n                gl.vertexAttribPointer( vertexElements[i].usage, \n                                        vertexElements[i].count, \n                                        this.convertVertexTypeToConstant(vertexElements[i].type), \n                                        vertexElements[i].normalize, \n                                        this.cache.vertexFormat.getStreamStride(vertexElements[i].stream),\n                                        vertexElements[i].offset);\n\n                // Save attribut's state\n                this.enabledVertexAttribArray[vertexElements[i].usage] = true;\n            }\n        } \n    }\n\n    /**\n     * Set vertex format to use\n     *\n     * @param {VertexFormat} format A VertexFormat instance\n     */\n    setVertexFormat(format) \n    {\n        this.cache.vertexFormat = format;\n    }\n\n    /* ------------------------------------------------------------------------------------------ */\n    ///\n    /// Conversions functions\n    ///\n    /* ------------------------------------------------------------------------------------------ */\n    /**\n     * Convert the given factor to a WebGL factor equivalent\n     *\n     * @param {BlendMode.Factor} factor A blending Factor instance\n     * @return {number} A WebGL value.\n     * @private\n     */\n    convertBlendingFactorToConstant(factor) \n    {\n        switch(factor)\n        {\n            default:\n            case BlendMode.Factor.Zero:                           return WebGLConst.ZERO;\n            case BlendMode.Factor.One:                            return WebGLConst.ONE;\n            case BlendMode.Factor.SourceColor:                    return WebGLConst.SRC_COLOR;\n            case BlendMode.Factor.OneMinusSourceColor:            return WebGLConst.ONE_MINUS_SRC_COLOR;\n            case BlendMode.Factor.DestinationColor:               return WebGLConst.DST_COLOR;\n            case BlendMode.Factor.OneMinusDestinationColor:       return WebGLConst.ONE_MINUS_DST_COLOR;\n            case BlendMode.Factor.SourceAlpha:                    return WebGLConst.SRC_ALPHA;\n            case BlendMode.Factor.OneMinusSourceAlpha:            return WebGLConst.ONE_MINUS_SRC_ALPHA;\n            case BlendMode.Factor.DestinationAlpha:               return WebGLConst.DST_ALPHA;\n            case BlendMode.Factor.OneMinusDestinationAlpha:       return WebGLConst.ONE_MINUS_DST_ALPHA;\n        }\n    }\n\n    /**\n     * Convert the given equation to an equivalent WebGL equation\n     *\n     * @param {BlendMode.Equation} equation A blending Equation value\n     * @return {number} A WebGL value.\n     * @private\n     */\n    convertBlendingEquationToConstant(equation) \n    {\n        switch(equation)\n        {\n            default:\n            case BlendMode.Equation.Add:                          return WebGLConst.FUNC_ADD;\n            case BlendMode.Equation.Subtract:                     return WebGLConst.FUNC_SUBTRACT;\n        }\n    }\n\n    /**\n     * Convert the given depth function to an equivalent WebGL function\n     *\n     * @param {DepthFunction} depthFunction A DepthFunction value\n     * @return {number} A WebGL value.\n     * @private\n     */\n    convertDepthFunctionToConstant(depthFunction) \n    {\n        switch(depthFunction)\n        {\n            case DepthFunction.Never:                             return WebGLConst.NEVER;\n            case DepthFunction.Less:                              return WebGLConst.LESS;\n            case DepthFunction.Equal:                             return WebGLConst.EQUAL;\n            case DepthFunction.LessEqual:                         return WebGLConst.LEQUAL;\n            case DepthFunction.Greater:                           return WebGLConst.GREATER;\n            case DepthFunction.NotEqual:                          return WebGLConst.NOTEQUAL;\n            case DepthFunction.GreaterEqual:                      return WebGLConst.GEQUAL;\n            case DepthFunction.Always:                            return WebGLConst.ALWAYS;\n            default:                                              return WebGLConst.LEQUAL;\n        }\n    }\n\n    /**\n     * Convert the given drawing mode to an equivalent WebGL value\n     *\n     * @param {DrawingMode} drawingMode A drawing mode\n     * @return {number} A WebGL value.\n     * @private\n     */\n    convertDrawingModeToConstant(drawingMode) \n    {\n        switch(drawingMode)\n        {\n            default:\n            case DrawingMode.Points:                              return WebGLConst.POINTS;\n            case DrawingMode.Lines:                               return WebGLConst.LINES;\n            case DrawingMode.LinesStrip:                          return WebGLConst.LINE_STRIP;\n            case DrawingMode.LinesLoop:                           return WebGLConst.LINE_LOOP;\n            case DrawingMode.Triangles:                           return WebGLConst.TRIANGLES;\n            case DrawingMode.TrianglesStrip:                      return WebGLConst.TRIANGLE_STRIP;\n            case DrawingMode.TrianglesFan:                        return WebGLConst.TRIANGLE_FAN;\n        }\n    }\n\n    /**\n     * Convert the given stencil function to an equivalent WebGL function\n     *\n     * @param {StencilFunction} stencilFunction A StencilFunction value\n     * @return {number} A WebGL value\n     * @private\n     */\n    convertStencilFunctionToConstant(stencilFunction) \n    {\n        switch(stencilFunction)\n        {\n            case StencilFunction.Never:                         return WebGLConst.NEVER;\n            case StencilFunction.Less:                          return WebGLConst.LESS;\n            case StencilFunction.Equal:                         return WebGLConst.EQUAL;\n            case StencilFunction.LessEqual:                     return WebGLConst.LEQUAL;\n            case StencilFunction.Greater:                       return WebGLConst.GREATER;\n            case StencilFunction.NotEqual:                      return WebGLConst.NOTEQUAL;\n            case StencilFunction.GreaterEqual:                  return WebGLConst.GEQUAL;\n            case StencilFunction.Always:                        return WebGLConst.ALWAYS;\n            default:                                            return WebGLConst.LEQUAL;\n        }\n    }\n\n    /**\n     * Convert the given stencil operation to an equivalent WebGL function\n     *\n     * @param {StencilOperation} operation A StencilOperation value\n     * @return {number} A WebGL value\n     * @private\n     */\n    convertStencilOperationToConstant(operation) \n    {\n        switch(operation)\n        {\n            default:\n            case StencilOperation.Keep:                            return WebGLConst.KEEP;\n            case StencilOperation.Zero:                            return WebGLConst.ZERO;\n            case StencilOperation.Replace:                         return WebGLConst.REPLACE;\n            case StencilOperation.Increment:                       return WebGLConst.INCR;\n            case StencilOperation.Decrement:                       return WebGLConst.DECR;\n            case StencilOperation.Invert:                          return WebGLConst.INVERT;\n            case StencilOperation.IncrementWrap:                   return WebGLConst.INCR_WRAP;\n            case StencilOperation.DecrementWrap:                   return WebGLConst.DECR_WRAP;\n        }\n    }\n\n    /**\n     * Convert the given vertex type to an equivalent WebGL type\n     *\n     * @param {VertexElement.Type} type A VertexElement type\n     * @return {number} A WebGL value\n     * @private\n     */\n    convertVertexTypeToConstant(type) \n    {\n        switch(type)\n        {\n            default:\n            case VertexElement.Type.Byte:            return WebGLConst.BYTE;\n            case VertexElement.Type.Float:           return WebGLConst.FLOAT;\n            case VertexElement.Type.Int:             return WebGLConst.INT;\n            case VertexElement.Type.Short:           return WebGLConst.SHORT;\n        }\n    }\n\n    /**\n     * Convert the given type of stream to an equivalent WebGL type\n     *\n     * @param {VertexElement.StreamType} type A StreamType\n     * @return {number} A WebGL value\n     * @private\n     */\n    convertStreamTypeToConstant(type) \n    {\n        switch(type)\n        {\n            default:\n            case VertexElement.StreamType.Static:    return WebGLConst.STATIC_DRAW;\n            case VertexElement.StreamType.Dynamic:   return WebGLConst.DYNAMIC_DRAW;\n            case VertexElement.StreamType.Stream:    return WebGLConst.STREAM_DRAW;\n        }\n    }\n\n    /**\n     * Convert the given type to a Lemon equivalent\n     *\n     * @param {number} type A WebGL value\n     * @return {Type} A custom type value\n     * @private\n     */\n    convertConstantToShaderTypes(type) \n    {\n        switch(type)\n        {\n            default:\n            case WebGLConst.FLOAT:\n            case WebGLConst.FLOAT_VEC2:\n            case WebGLConst.FLOAT_VEC3:\n            case WebGLConst.FLOAT_VEC4:\n                return Type.Float;\n            case WebGLConst.INT:\n            case WebGLConst.INT_VEC2:\n            case WebGLConst.INT_VEC3:\n            case WebGLConst.INT_VEC4:\n                return Type.Int;\n            case WebGLConst.BOOL:\n            case WebGLConst.BOOL_VEC2:\n            case WebGLConst.BOOL_VEC3:\n            case WebGLConst.BOOL_VEC4:\n                return Type.Bool;\n            case WebGLConst.FLOAT_MAT2:\n            case WebGLConst.FLOAT_MAT3:\n            case WebGLConst.FLOAT_MAT4:\n                return Type.Matrix;\n            case WebGLConst.SAMPLER_2D:\n                return Type.Texture2D;\n            case WebGLConst.SAMPLER_CUBE:\n                return Type.TextureCube;\n            case WebGLConst.BYTE:\n                return Type.Byte;\n            case WebGLConst.UNSIGNED_BYTE:\n                return Type.u_Byte;\n            case WebGLConst.SHORT:\n                return Type.Short;\n            case WebGLConst.UNSIGNED_SHORT:\n                return Type.u_Short;\n            case WebGLConst.UNSIGNED_INT:\n                return Type.u_Int;\n        }\n    }\n\n    /**\n     * Convert the given webgl shader's type to an equivalent Lemon value\n     *\n     * @param {number} type A WebGL value\n     * @return {number} A number representing element count for the given type\n     * @private\n     */\n    convertConstantToShaderCount(type) \n    {\n        switch(type)\n        {\n            default:\n            case WebGLConst.FLOAT:\n            case WebGLConst.INT:\n            case WebGLConst.BOOL:\n            case WebGLConst.SAMPLER_2D:\n            case WebGLConst.SAMPLER_CUBE:\n            case WebGLConst.BYTE:\n            case WebGLConst.UNSIGNED_BYTE:\n            case WebGLConst.SHORT:\n            case WebGLConst.UNSIGNED_SHORT:\n            case WebGLConst.UNSIGNED_INT:\n                return 1;\n            case WebGLConst.FLOAT_VEC2:\n            case WebGLConst.INT_VEC2:\n            case WebGLConst.BOOL_VEC2:\n            case WebGLConst.FLOAT_MAT2:\n                return 2;\n            case WebGLConst.FLOAT_VEC3:\n            case WebGLConst.INT_VEC3:\n            case WebGLConst.BOOL_VEC3:\n            case WebGLConst.FLOAT_MAT3:\n                return 3;\n            case WebGLConst.FLOAT_VEC4:\n            case WebGLConst.INT_VEC4:\n            case WebGLConst.BOOL_VEC4:\n            case WebGLConst.FLOAT_MAT4:\n                return 4;\n        }\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/WebGL/RenderWebGL.js\n **/","import {Color} from '../../Color.js';\n\n/**\n * Cache for WebGL API\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Cache\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n         * Active vertex format\n         *\n         * @type {Color}\n         * @public\n         */\n        this.clearColor = new Color(1, 1, 1, 255);\n\n        /**\n         * Active program\n         *\n         * @type {Program}\n         * @public\n         */\n        this.program = null;\n\n        /**\n         * Active texture\n         *\n         * @type {TextureInterface|TextureCube}\n         * @public\n         */\n        this.texture = null;\n\n        /**\n         * Active vertex format\n         *\n         * @type {VertexFormat}\n         * @public\n         */\n        this.vertexFormat = null;\n\n        /**\n         * Array with lights to send to the programs\n         *\n         * @type {Array.<Light>}\n         * @public\n         */\n        this.lights = [];\n\n        /**\n         * Lights positions\n         *\n         * @type {Array.<number>}\n         * @public\n         */\n        this.lightsAmbient = [];\n\n        /**\n         * Lights positions\n         *\n         * @type {Array.<number>}\n         * @public\n         */\n        this.lightsDiffuse = [];\n\n        /**\n         * Lights data: constant, linear and quadratic data\n         *\n         * @type {Array.<number>}\n         * @public\n         */\n        this.lightsData = [];\n\n        /**\n         * Lights directions\n         *\n         * @type {Array.<number>}\n         * @public\n         */\n        this.lightsDirection = [];\n\n        /**\n         * Lights positions\n         *\n         * @type {Array.<number>}\n         * @public\n         */\n        this.lightsPosition = [];\n\n        /**\n         * Lights positions\n         *\n         * @type {Array.<number>}\n         * @public\n         */\n        this.lightsSpecular = [];\n\n        /**\n         * Lights type\n         *\n         * @type {Array.<number>}\n         * @public\n         */\n        this.lightsType = [];\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/WebGL/Cache.js\n **/","/**\n * A WebGL buffer\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class BufferData\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n         * Index buffer\n         *\n         * @type {WebGLBuffer}\n         * @public\n         */\n        this.indexBuffer = null;\n\n        /**\n         * Vertex buffers\n         *\n         * @type {Array.<WebGLBuffer>}\n         * @public\n         */\n        this.vertexBuffers = [];\n\n        /**\n         * Vertex array object\n         *\n         * @type {WebGLBuffer}\n         * @public\n         */\n        this.vao = null;\n    }\n}\n\n/**\n * WebGL instances\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Instances\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n         * WebGL buffers\n         *\n         * @type {Array.<BufferData>}\n         * @public\n         */\n        this.buffers = [];\n\n        /**\n         * WebGL frame buffers\n         *\n         * @type {Array.<WebGLFramebuffer>}\n         * @public\n         */\n        this.frameBuffers = [];\n\n        /**\n         * Programs/Shaders data\n         *\n         * @type {Array.<WebGLProgram>}\n         * @public\n         */\n        this.programs = [];\n\n        /**\n         * Textures data\n         *\n         * @type {Array.<WebGLTexture>}\n         * @public\n         */\n        this.textures = [];\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/WebGL/Instances.js\n **/","/**\n * A rendering API\n *\n * Web technologies allow Canvas and WebGL rendering\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class RenderAPI \n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n         * Camera to use for next draw calls and graphics calculs\n         *\n         * @type {Camera} \n         * @protected\n         */\n        this.activeCamera = null;\n    }\n\n    /**\n     * Bind light\n     *\n     * @param {Light} light A Light instance\n     */\n    bindLight(light) { };\n\n    /**\n     * Apply the given state block\n     *\n     * @param {StateBlock} stateBlock A StateBlock instance\n     */\n    applyStateBlock(stateBlock)\n    {\n        this.setBlendMode(stateBlock.blendMode);\n        this.setDepthState(stateBlock.depthTest, stateBlock.depthWrite, stateBlock.depthFunction);\n        this.setFaceCulling(stateBlock.faceCulling);\n        this.setStencilState(stateBlock.stencilTest, stateBlock.stencilWrite);\n        this.setStencilFunction(stateBlock.stencilFunction, stateBlock.stencilReference, stateBlock.stencilMask);\n        this.setStencilOperations(stateBlock.stencilTestFail, stateBlock.stencilDepthTestFail, stateBlock.stencilSuccess);\n    }\n\n    /**\n     * Bind the given framebuffer\n     *\n     * @param {number} framebufferID An identifier, -1 to bind the default frame buffer\n     */\n    bindFrameBuffer(framebufferID = -1) { };\n\n    /**\n     * Bind texture to the the given slot\n     *\n     * @param {number} slot Targeted slot's index\n     * @param {TextureInterface} texture A Texture instance\n     */\n    bindTexture(slot, texture) { };\n\n    /**\n     * Bind texture cube to the the given slot\n     *\n     * @param {number} slot Targeted slot's index\n     * @param {TextureCube} texture A TextureCube instance\n     */\n    bindTextureCube(slot, texture) { };\n\n    /**\n     * Clear the rendering target\n     *\n     * @param {Color} color A Color instance\n     */\n    clear(color) { };\n\n    /**\n     * Clear cache\n     */\n    clearCache() { };\n\n    /**\n     * Create a new frame buffer\n     *\n     * @return {number} An identifier to work with it later\n     */\n    createFrameBuffer() { return 0; };\n\n    /**\n    * Draw indexed primitives\n    *\n    * @param {DrawingMode} drawingMode Drawing mode to use\n    * @param {number} firstVertexIndex Index of the first vertex to draw, useful to draw some parts\n    * @param {number} vertexCount Vertex count to draw\n    */\n    drawIndexedPrimitives(drawingMode, firstVertexIndex, vertexCount) { }; \n\n    /**\n    * Draw primitives\n    *\n    * @param {DrawingMode} drawingMode Drawing mode to use\n    * @param {number} firstVertexIndex Index of the first vertex to draw, useful to draw some parts\n    * @param {number} vertexCount Vertex count to draw\n    */\n    drawPrimitives(drawingMode, firstVertexIndex, vertexCount) { };\n\n    /**\n     * Init frame buffer: attach it to textures, depth buffer and/or a stencil buffer\n     *\n     * @param {number} framebufferID Targeted slot's index\n     * @param {Array.<Texture>} textures An array of Texture instances\n     * @param {boolean=} useDepthBuffer True to use a depth buffer\n     * @param {boolean=} useStencilBuffer True to use a depth buffer\n     */\n    initFrameBuffer(framebufferID, textures, useDepthBuffer = true, useStencilBuffer = false) { };\n\n    /**\n     * Set camera to use\n     *\n     * @param {Camera} camera A Camera instance\n     */\n    setActiveCamera(camera) \n    { \n        this.activeCamera = camera; \n    }\n\n    /**\n     * Set blend mode to apply\n     *\n     * @param {BlendMode} blendMode A BlendMode instance\n     */\n    setBlendMode(blendMode) { };\n\n    /**\n     * Set depth state\n     *\n     * @param {boolean} depthTest True to activate depth testing, otherwise false\n     * @param {boolean} writeTest True to activate depth writing otherwise false\n     * @param {DepthFunction} depthFunction Depth function to apply\n     */\n    setDepthState(depthTest, writeTest, depthFunction) { };\n\n    /**\n     * Set face culling state.\n     * @param {FaceCulling} mode Face culling mode to set.\n     */\n    setFaceCulling(mode) { };\n\n    /**\n     * Set geometry to use\n     *\n     * @param {Geometry} geometry A Geometry instance\n     */\n    setGeometry(geometry) { };\n\n    /**\n     * Set index buffer to use\n     *\n     * @param {number|WebGLBuffer} buffer A buffer instance\n     */\n    setIndexBuffer(buffer) { };\n\n    /**\n     * Set program to use\n     *\n     * @param {Program} program A Program instance to use\n     * @return {number} -1: an error occured, 0: everything is ok, 2 : program have been changed\n     */\n    setProgram(program) { return -1; };\n\n    /**\n     * Set uniform value\n     *\n     * @param {Program} program A Program instance to use\n     * @param {string} name Uniform's name\n     * @param {Type} type Type of value to send\n     * @param {?Array<number>|Texture|boolean|number|Float32Array} value A value\n     * @param {number=} groupCount When an element is an array, you can create group (like sub-array)\n     * @return {boolean} True if uniform has been set successfully, otherwise false\n     */\n    setUniform(program, name, type, value, groupCount) { return false; };\n\n    /**\n     * Set scissor test state\n     *\n     * @param {boolean} state True to activate scissor testing, otherwise false\n     * @param {number} x Position on x from the left of the screen\n     * @param {number} y Position on y from the bottom of the screen\n     * @param {number} w Width of the rectangle\n     * @param {number} h Height of the rectangle\n     */\n    setScissorTest(state, x, y, w, h) { };\n\n    /**\n     * Set stencil test state\n     *\n     * @param {boolean} activate True to active stencil testing, otherwise false\n     * @param {number} writeMask Stencil writing value\n     */\n    setStencilState(activate, writeMask) { };\n\n    /**\n     * Set stencil function to use\n     *\n     * @param {StencilFunction} stencilFunction Function to use\n     * @param {number} reference Reference value\n     * @param {number} mask Mask to use\n     */\n    setStencilFunction(stencilFunction, reference, mask) { };\n\n    /**\n     * Set stencil operations to use\n     *\n     * @param {StencilOperation} sFail Function to use\n     * @param {StencilOperation} dpFail Reference value\n     * @param {StencilOperation} dppPass Mask to use\n     */\n    setStencilOperations(sFail, dpFail, dppPass) { };\n\n    /**\n     * Set vertex buffer to use\n     *\n     * Warning: You must call \"setVertexFormat\" before!\n     * @param {number} stream An integer representing stream to use\n     * @param {number|WebGLBuffer} buffer A buffer instance\n     */\n    setVertexBuffer(stream, buffer) { };\n\n    /**\n     * Set vertex format to use\n     *\n     * @param {VertexFormat} format A VertexFormat instance\n     */\n    setVertexFormat(format) { };\n\n    /**\n     * Get the active camera\n     *\n     * @return {Camera} A Camera instance or null\n     */\n    getActiveCamera() \n    { \n        return this.activeCamera; \n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/RenderAPI.js\n **/","import {ContextResource} from '../ContextResource.js';\nimport {Img as Image} from '../Image.js';\n\n/**\n * A texture cube to use with Sky-boxes\n *\n * @extends {ContextResource}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class TextureCube extends ContextResource\n{\n    /**\n     * Constructor\n     *\n     * @param {Array.<string>} paths An array with the image's path for the right cube's face,\n     * Paths must be provided in the given order: up, down, left, right, back, front\n     */\n    constructor(paths = [])\n    {\n        super();\n\n        /**\n         * Images (one per face)\n         *\n         * @type {Array.<Image>}\n         * @private\n         */\n        this.images = [];\n\n        if (paths.length)\n            this.loadFromFiles(paths);\n    }\n\n    /**\n     * Load images from the given paths\n     *\n     * @param {Array.<string>} paths An array with the image's path for the right cube's face,\n     * Paths must be provided in the given order: up, down, left, right, back, front\n     */\n    loadFromFiles(paths)\n    {\n        for (let i in paths)\n        {\n            let image = new Image();\n            image.loadFromFile(paths[i]);\n            this.images[i] = image;\n        }\n    }\n\n    /**\n     * Get images\n     *\n     * @return {Array.<Image>} An array with images instances\n     */\n    getImages()\n    {\n        return this.images;\n    }\n\n    /**\n     * Check if texture cube is ready to be use\n     *\n     * @return {boolean} True if everything is ready\n     */\n    isReady()\n    {\n        if (this.images.length === 0)\n            return false;\n\n        for (let i = 0; i < this.images.length; i++)\n            if (!this.images[i].isReady())\n                return false;\n\n        return true;\n    }\n}\n\n/**\n* Faces\n *\n* @enum {number}\n*/\nTextureCube.Face = { Up: 0, Down: 1, Left: 2, Right: 3, Back: 4, Front: 5 };\n\n\n/** WEBPACK FOOTER **\n ** ./src/Textures/TextureCube.js\n **/","import {TextureInterface} from './TextureInterface.js';\n\n/**\n * A texture to display video\n *\n * @extends {TextureInterface}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class TextureVideo extends TextureInterface\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        super();\n\n        /**\n         * Video.\n         * @type {HTMLVideoElement}\n         * @private\n         */\n        this.data = document.createElement('video');\n    }\n\n    /**\n     * Load the video from a file\n     *\n     * @param {string} path Path to the video file\n     */\n    loadFromFile(path)\n    {\n        // Detect when video is ready\n        this.data.addEventListener('canplaythrough', () =>\n        {\n            this.ready = true;\n        }, true);\n\n        // Load\n        this.data.preload = 'auto';\n        this.data.src = path;\n    };\n\n    /**\n     * Pause the video\n     */\n    pause()\n    {\n        this.data.pause();\n    }\n\n    /**\n     * Play the video\n     */\n    play()\n    {\n        this.data.play();\n    }\n\n    /**\n     * Get video's duration\n     *\n     * @return {number} The duration property returns the length of the current audio/video, in seconds\n     */\n    getDuration()\n    {\n        return this.data.duration;\n    }\n\n    /**\n     * Get video's data\n     *\n     * @return {HTMLVideoElement} The HTML video element\n     */\n    getVideoData()\n    {\n        return this.data;\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Textures/TextureVideo.js\n **/","/**\n * @const\n * @type {number}\n */\nexport let DEPTH_BUFFER_BIT = 0x00000100;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_BUFFER_BIT = 0x00000400;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let POINTS = 0x0000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LINES = 0x0001;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LINE_LOOP = 0x0002;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LINE_STRIP = 0x0003;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TRIANGLE_FAN = 0x0006;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ZERO = 0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SRC_COLOR = 0x0300;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ONE_MINUS_SRC_COLOR = 0x0301;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DST_ALPHA = 0x0304;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ONE_MINUS_DST_ALPHA = 0x0305;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DST_COLOR = 0x0306;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ONE_MINUS_DST_COLOR = 0x0307;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SRC_ALPHA_SATURATE = 0x0308;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FUNC_ADD = 0x8006;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BLEND_EQUATION = 0x8009;\n\n\n/**\n * Same as BLEND_EQUATION\n * @const\n * @type {number}\n */\nexport let BLEND_EQUATION_RGB = 0x8009;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BLEND_EQUATION_ALPHA = 0x883D;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FUNC_SUBTRACT = 0x800A;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FUNC_REVERSE_SUBTRACT = 0x800B;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BLEND_DST_RGB = 0x80C8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BLEND_SRC_RGB = 0x80C9;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BLEND_DST_ALPHA = 0x80CA;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BLEND_SRC_ALPHA = 0x80CB;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let CONSTANT_COLOR = 0x8001;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ONE_MINUS_CONSTANT_COLOR = 0x8002;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let CONSTANT_ALPHA = 0x8003;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ONE_MINUS_CONSTANT_ALPHA = 0x8004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BLEND_COLOR = 0x8005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ARRAY_BUFFER_BINDING = 0x8894;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ELEMENT_ARRAY_BUFFER_BINDING = 0x8895;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BUFFER_SIZE = 0x8764;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BUFFER_USAGE = 0x8765;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let CURRENT_VERTEX_ATTRIB = 0x8626;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRONT = 0x0404;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BACK = 0x0405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRONT_AND_BACK = 0x0408;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DITHER = 0x0BD0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let POLYGON_OFFSET_FILL = 0x8037;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SAMPLE_ALPHA_TO_COVERAGE = 0x809E;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SAMPLE_COVERAGE = 0x80A0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let NO_ERROR = 0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let INVALID_ENUM = 0x0500;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let INVALID_VALUE = 0x0501;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let INVALID_OPERATION = 0x0502;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let OUT_OF_MEMORY = 0x0505;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let CW = 0x0900;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let CCW = 0x0901;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LINE_WIDTH = 0x0B21;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ALIASED_POINT_SIZE_RANGE = 0x846D;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ALIASED_LINE_WIDTH_RANGE = 0x846E;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let CULL_FACE_MODE = 0x0B45;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRONT_FACE = 0x0B46;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DEPTH_RANGE = 0x0B70;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DEPTH_WRITEMASK = 0x0B72;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DEPTH_CLEAR_VALUE = 0x0B73;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DEPTH_FUNC = 0x0B74;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_CLEAR_VALUE = 0x0B91;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_FUNC = 0x0B92;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_FAIL = 0x0B94;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_PASS_DEPTH_FAIL = 0x0B95;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_PASS_DEPTH_PASS = 0x0B96;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_REF = 0x0B97;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_VALUE_MASK = 0x0B93;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_WRITEMASK = 0x0B98;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_BACK_FUNC = 0x8800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_BACK_FAIL = 0x8801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_BACK_PASS_DEPTH_PASS = 0x8803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_BACK_REF = 0x8CA3;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_BACK_VALUE_MASK = 0x8CA4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_BACK_WRITEMASK = 0x8CA5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let VIEWPORT = 0x0BA2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SCISSOR_BOX = 0x0C10;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let COLOR_CLEAR_VALUE = 0x0C22;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let COLOR_WRITEMASK = 0x0C23;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let UNPACK_ALIGNMENT = 0x0CF5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let PACK_ALIGNMENT = 0x0D05;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MAX_TEXTURE_SIZE = 0x0D33;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MAX_VIEWPORT_DIMS = 0x0D3A;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SUBPIXEL_BITS = 0x0D50;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RED_BITS = 0x0D52;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let GREEN_BITS = 0x0D53;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BLUE_BITS = 0x0D54;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ALPHA_BITS = 0x0D55;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DEPTH_BITS = 0x0D56;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_BITS = 0x0D57;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let POLYGON_OFFSET_UNITS = 0x2A00;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let POLYGON_OFFSET_FACTOR = 0x8038;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_BINDING_2D = 0x8069;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SAMPLE_BUFFERS = 0x80A8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SAMPLES = 0x80A9;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SAMPLE_COVERAGE_VALUE = 0x80AA;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SAMPLE_COVERAGE_INVERT = 0x80AB;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let COMPRESSED_TEXTURE_FORMATS = 0x86A3;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DONT_CARE = 0x1100;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FASTEST = 0x1101;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let NICEST = 0x1102;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let GENERATE_MIPMAP_HINT = 0x8192;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BYTE = 0x1400;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SHORT = 0x1402;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let INT = 0x1404;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DEPTH_COMPONENT = 0x1902;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ALPHA = 0x1906;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RGB = 0x1907;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LUMINANCE = 0x1909;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LUMINANCE_ALPHA = 0x190A;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let UNSIGNED_SHORT_4_4_4_4 = 0x8033;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let UNSIGNED_SHORT_5_5_5_1 = 0x8034;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let UNSIGNED_SHORT_5_6_5 = 0x8363;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MAX_VERTEX_ATTRIBS = 0x8869;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MAX_VARYING_VECTORS = 0x8DFC;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MAX_TEXTURE_IMAGE_UNITS = 0x8872;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SHADER_TYPE = 0x8B4F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DELETE_STATUS = 0x8B80;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let VALIDATE_STATUS = 0x8B83;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ATTACHED_SHADERS = 0x8B85;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ACTIVE_UNIFORMS = 0x8B86;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ACTIVE_ATTRIBUTES = 0x8B89;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SHADING_LANGUAGE_VERSION = 0x8B8C;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let CURRENT_PROGRAM = 0x8B8D;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let NEVER = 0x0200;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LESS = 0x0201;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let EQUAL = 0x0202;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LEQUAL = 0x0203;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let GREATER = 0x0204;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let NOTEQUAL = 0x0205;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let GEQUAL = 0x0206;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ALWAYS = 0x0207;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let KEEP = 0x1E00;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let REPLACE = 0x1E01;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let INCR = 0x1E02;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DECR = 0x1E03;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let INVERT = 0x150A;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let INCR_WRAP = 0x8507;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DECR_WRAP = 0x8508;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let VENDOR = 0x1F00;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RENDERER = 0x1F01;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let VERSION = 0x1F02;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let NEAREST = 0x2600;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let NEAREST_MIPMAP_NEAREST = 0x2700;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LINEAR_MIPMAP_NEAREST = 0x2701;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let NEAREST_MIPMAP_LINEAR = 0x2702;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LINEAR_MIPMAP_LINEAR = 0x2703;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE = 0x1702;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_CUBE_MAP = 0x8513;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_BINDING_CUBE_MAP = 0x8514;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE1 = 0x84C1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE2 = 0x84C2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE3 = 0x84C3;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE4 = 0x84C4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE5 = 0x84C5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE6 = 0x84C6;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE7 = 0x84C7;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE8 = 0x84C8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE9 = 0x84C9;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE10 = 0x84CA;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE11 = 0x84CB;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE12 = 0x84CC;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE13 = 0x84CD;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE14 = 0x84CE;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE15 = 0x84CF;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE16 = 0x84D0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE17 = 0x84D1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE18 = 0x84D2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE19 = 0x84D3;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE20 = 0x84D4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE21 = 0x84D5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE22 = 0x84D6;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE23 = 0x84D7;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE24 = 0x84D8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE25 = 0x84D9;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE26 = 0x84DA;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE27 = 0x84DB;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE28 = 0x84DC;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE29 = 0x84DD;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE30 = 0x84DE;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE31 = 0x84DF;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ACTIVE_TEXTURE = 0x84E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let REPEAT = 0x2901;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MIRRORED_REPEAT = 0x8370;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FLOAT_VEC2 = 0x8B50;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FLOAT_VEC3 = 0x8B51;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FLOAT_VEC4 = 0x8B52;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let INT_VEC2 = 0x8B53;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let INT_VEC3 = 0x8B54;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let INT_VEC4 = 0x8B55;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BOOL = 0x8B56;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BOOL_VEC2 = 0x8B57;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BOOL_VEC3 = 0x8B58;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BOOL_VEC4 = 0x8B59;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FLOAT_MAT2 = 0x8B5A;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FLOAT_MAT3 = 0x8B5B;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FLOAT_MAT4 = 0x8B5C;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SAMPLER_2D = 0x8B5E;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SAMPLER_CUBE = 0x8B60;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let VERTEX_ATTRIB_ARRAY_SIZE = 0x8623;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let VERTEX_ATTRIB_ARRAY_TYPE = 0x8625;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let VERTEX_ATTRIB_ARRAY_POINTER = 0x8645;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LOW_FLOAT = 0x8DF0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MEDIUM_FLOAT = 0x8DF1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let HIGH_FLOAT = 0x8DF2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LOW_INT = 0x8DF3;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MEDIUM_INT = 0x8DF4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let HIGH_INT = 0x8DF5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRAMEBUFFER = 0x8D40;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RENDERBUFFER = 0x8D41;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RGBA4 = 0x8056;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RGB5_A1 = 0x8057;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RGB565 = 0x8D62;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DEPTH_COMPONENT16 = 0x81A5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_INDEX = 0x1901;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_INDEX8 = 0x8D48;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DEPTH_STENCIL = 0x84F9;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RENDERBUFFER_WIDTH = 0x8D42;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RENDERBUFFER_HEIGHT = 0x8D43;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RENDERBUFFER_INTERNAL_FORMAT = 0x8D44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RENDERBUFFER_RED_SIZE = 0x8D50;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RENDERBUFFER_GREEN_SIZE = 0x8D51;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RENDERBUFFER_BLUE_SIZE = 0x8D52;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RENDERBUFFER_ALPHA_SIZE = 0x8D53;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RENDERBUFFER_DEPTH_SIZE = 0x8D54;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RENDERBUFFER_STENCIL_SIZE = 0x8D55;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DEPTH_ATTACHMENT = 0x8D00;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_ATTACHMENT = 0x8D20;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DEPTH_STENCIL_ATTACHMENT = 0x821A;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let NONE = 0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRAMEBUFFER_COMPLETE = 0x8CD5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRAMEBUFFER_UNSUPPORTED = 0x8CDD;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRAMEBUFFER_BINDING = 0x8CA6;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RENDERBUFFER_BINDING = 0x8CA7;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MAX_RENDERBUFFER_SIZE = 0x84E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let INVALID_FRAMEBUFFER_OPERATION = 0x0506;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let UNPACK_FLIP_Y_WEBGL = 0x9240;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let CONTEXT_LOST_WEBGL = 0x9242;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BROWSER_DEFAULT_WEBGL = 0x9244;\n\n\n/**\n * From the OES_texture_half_float extension.\n * http://www.khronos.org/registry/webgl/extensions/OES_texture_half_float/\n * @const\n * @type {number}\n */\nexport let HALF_FLOAT_OES = 0x8D61;\n\n\n/**\n * From the OES_standard_derivatives extension.\n * http://www.khronos.org/registry/webgl/extensions/OES_standard_derivatives/\n * @const\n * @type {number}\n */\nexport let FRAGMENT_SHADER_DERIVATIVE_HINT_OES = 0x8B8B;\n\n\n/**\n * From the OES_vertex_array_object extension.\n * http://www.khronos.org/registry/webgl/extensions/OES_vertex_array_object/\n * @const\n * @type {number}\n */\nexport let VERTEX_ARRAY_BINDING_OES = 0x85B5;\n\n\n/**\n * From the WEBGL_debug_renderer_info extension.\n * http://www.khronos.org/registry/webgl/extensions/WEBGL_debug_renderer_info/\n * @const\n * @type {number}\n */\nexport let UNMASKED_VENDOR_WEBGL = 0x9245;\n\n\n/**\n * From the WEBGL_debug_renderer_info extension.\n * http://www.khronos.org/registry/webgl/extensions/WEBGL_debug_renderer_info/\n * @const\n * @type {number}\n */\nexport let UNMASKED_RENDERER_WEBGL = 0x9246;\n\n\n/**\n * From the WEBGL_compressed_texture_s3tc extension.\n * http://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\n * @const\n * @type {number}\n */\nexport let COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0;\n\n\n/**\n * From the WEBGL_compressed_texture_s3tc extension.\n * http://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\n * @const\n * @type {number}\n */\nexport let COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1;\n\n\n/**\n * From the WEBGL_compressed_texture_s3tc extension.\n * http://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\n * @const\n * @type {number}\n */\nexport let COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2;\n\n\n/**\n * From the WEBGL_compressed_texture_s3tc extension.\n * http://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\n * @const\n * @type {number}\n */\nexport let COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3;\n\n\n/**\n * From the EXT_texture_filter_anisotropic extension.\n * http://www.khronos.org/registry/webgl/extensions/EXT_texture_filter_anisotropic/\n * @const\n * @type {number}\n */\nexport let TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE;\n\n\n/**\n * From the EXT_texture_filter_anisotropic extension.\n * http://www.khronos.org/registry/webgl/extensions/EXT_texture_filter_anisotropic/\n * @const\n * @type {number}\n */\nexport let MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF;\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/WebGL/WebGL.js\n **/","import {BlendMode} from '../BlendMode.js';\nimport {Color} from '../Color.js';\nimport {Drawable} from './Drawable.js';\nimport {SpriteCommand} from '../Renderers/Commands/SpriteCommand.js';\n\n/**\n * A sprite\n *\n * @description Draw 2D textured element efficiently.\n * @extends {Drawable}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Sprite extends Drawable\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        super();\n\n        /**\n         * Blend mode\n         *\n         * @type {BlendMode}\n         * @private\n         */\n        this.blendMode = new BlendMode(BlendMode.Mode.Alpha);\n\n        /**\n         * Color\n         *\n         * @type {Color}\n         * @private\n         */\n        this.color = new Color(255, 255, 255, 255);\n\n        /**\n         * Texture's area to show.\n         * - Two first values represents x and y offset\n         * - Two last values represents width and height (relative to offset)\n         *\n         * @type {Array.<number>}\n         * @private\n         */\n        this.rect = [0.0, 0.0, 0.0, 0.0];\n\n        /**\n         * Size\n         *\n         * @type {Array.<number>}\n         * @private\n         */\n        this.size = [0.5, 0.5];\n\n        /**\n         * Program\n         *\n         * @type {Program}\n         * @private\n         */\n        this.customProgram = null;\n\n        /**\n         * Texture\n         *\n         * @type {TextureInterface}\n         * @private\n         */\n        this.texture = null;\n    }\n\n    /**\n     * Set blend mode to use\n     *\n     * @param {BlendMode} blendMode A BlendMode instance\n     */\n    setBlendMode(blendMode)\n    {\n        this.blendMode = blendMode;\n    }\n\n    /**\n     * Set program to use\n     *\n     * @param {number} r Red color in the range [0-255]\n     * @param {number} g Green color in the range [0-255]\n     * @param {number} b Blue color in the range [0-255]\n     * @param {number=} a Opacity in the range [0-255]\n     */\n    setColor(r, g, b, a)\n    {\n        this.color.set(r, g, b, a);\n    }\n\n    /**\n     * Draw the element\n     *\n     * @param {RenderTarget} renderTarget Renderer who called this method\n     */\n    draw(renderTarget)\n    {\n        if (this.texture)\n            renderTarget.getActiveTask().addCommand(new SpriteCommand(this));\n    }\n\n    /**\n     * Set program to use\n     *\n     * @param {Program} program A Program instance\n     */\n    setCustomProgram(program)\n    {\n        this.customProgram = program;\n    }\n\n    /**\n     * Set sprite's size\n     *\n     * @param {number} x Size on X\n     * @param {number} y Size on Y\n     */\n    setSize(x, y)\n    {\n        this.size[0] = x;\n        this.size[1] = y;\n    }\n\n    /**\n     * Set texture to use\n     *\n     * @param {TextureInterface} texture Can be a Texture or a TextureVideo\n     */\n    setTexture(texture)\n    {\n        this.texture = texture;\n    }\n\n    /**\n     * Set texture's area to show\n     *\n     * @param {number} x Start position on x\n     * @param {number} y Start position on y\n     * @param {number} w Area's width\n     * @param {number} h Area's height\n     */\n    setTextureRect(x, y, w, h)\n    {\n        this.rect = [x, y, w, h];\n    }\n\n    /**\n     * Get sprite's blend mode\n     *\n     * @return {BlendMode} A BlendMode instance\n     */\n    getBlendMode()\n    {\n        return this.blendMode;\n    }\n\n    /**\n     * Get sprite's color\n     *\n     * @return {Color} A Color instance\n     */\n    getColor()\n    {\n        return this.color;\n    }\n\n    /**\n     * Get program\n     *\n     * @return {?Program} A Program instance or null if the sprite use the default program\n     */\n    getCustomProgram()\n    {\n        return this.customProgram;\n    }\n\n    /**\n     * Get size\n     *\n     * @return {Array.<number>} An array with index 0 for size on X and index 1 for size on y\n     */\n    getSize()\n    {\n        return this.size;\n    }\n\n    /**\n     * Get texture\n     *\n     * @return {TextureInterface} A texture\n     */\n    getTexture ()\n    {\n        return this.texture;\n    }\n\n    /**\n     * Get texture's area to show\n     *\n     * @return {Array.<number>} An array representing area to show (x, y, w, h)\n     */\n    getTextureRect()\n    {\n        return this.rect;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Objects/Sprite.js\n **/","import {DepthFunction, DrawingMode} from '../../StateBlock.js';\nimport {Geometry} from '../../Geometry.js';\nimport {Program} from '../../Program.js';\nimport {RenderCommand} from './RenderCommand.js';\nimport {TextureVideo} from '../../Textures/TextureVideo.js';\nimport {Type} from '../../Types.js';\n\n/**\n * Draw sprites\n *\n * @extends {RenderCommand}\n */\nexport class SpriteCommand extends RenderCommand\n{\n    /**\n     * Constructor\n     *\n     * @param {Sprite} sprite A Sprite instance\n     */\n    constructor(sprite)\n    {\n        super();\n\n        /**\n         * The Sprite instance to draw\n         *\n         * @type {Sprite}\n         * @private\n         */\n        this.sprite = sprite;\n    }\n\n    /**\n     * Execute the command\n     *\n     * @param {RenderAPI} renderAPI RenderAPI instance used to process the commands\n     */\n    execute(renderAPI) \n    {\n        SpriteCommand.draw(renderAPI, this.sprite);\n    }\n\n    /**\n     * Draw the given sprite\n     *\n     * @param {RenderAPI} renderAPI RenderAPI instance used to process the commands\n     * @param {Sprite} sprite Sprite instance to draw\n     */\n    static draw(renderAPI, sprite) \n    {\n        let spriteTexture = sprite.getTexture();\n        if (!spriteTexture.isReady())\n            return;\n\n        // Use custom or default program\n        let program = sprite.getCustomProgram();\n        if (!program)\n        {\n            if (SpriteCommand.isDefaultProgramLoaded())\n                program = SpriteCommand.sharedProgram;\n            else\n                return;\n        }\n\n        // Program.\n        let programCode = renderAPI.setProgram(program);\n        if (programCode === -1)\n            return;\n\n        let spriteRect = sprite.getTextureRect();\n        let spriteSize = sprite.getSize();\n\n        // Must send/update shared uniforms\n        if (programCode === 1)\n            renderAPI.setUniform(program, 'uCamera', Type.Matrix, renderAPI.getActiveCamera().getViewProjectionMatrix());\n\n        // Send uniforms\n        renderAPI.setUniform(program, 'uModel', Type.Matrix, sprite.getTransformationMatrix());\n\n        // States and apparence\n        renderAPI.setBlendMode(sprite.getBlendMode());\n        renderAPI.setDepthState(true, true, DepthFunction.Less);\n        renderAPI.bindTexture(0, spriteTexture);\n\n        // Set visible area\n        let uvs = null;\n        if (spriteTexture instanceof TextureVideo)\n            uvs = new Float32Array([0, 1, 0, 0, 1, 1, 1, 0]);\n        else \n        {\n            let textureSize = spriteTexture.getImage().getSize();\n                \n            let x1 = spriteRect[0] / textureSize[0];\n            let y1 = (spriteRect[1] + spriteRect[3]) / textureSize[1];\n            let x2 = (spriteRect[0] + spriteRect[2]) / textureSize[0];\n            let y2 = spriteRect[1] / textureSize[1];\n\n            if (spriteRect[2] === 0 && spriteRect[3] === 0)\n                x2 = y2 = 1.0;\n\n            uvs = new Float32Array([x1, y2, x1, y1, x2, y2, x2, y1]);\n        }\n        SpriteCommand.sharedGeometry.setTextureUVs(uvs);\n\n        // Set color\n        let spriteColor = sprite.getColor();\n        let colors = new Float32Array([      \n            spriteColor.r, spriteColor.g, spriteColor.b, spriteColor.a, \n            spriteColor.r, spriteColor.g, spriteColor.b, spriteColor.a, \n            spriteColor.r, spriteColor.g, spriteColor.b, spriteColor.a, \n            spriteColor.r, spriteColor.g, spriteColor.b, spriteColor.a\n        ]);\n        SpriteCommand.sharedGeometry.setColors(colors);\n\n        // Set positions\n        let positions = new Float32Array([      \n            -spriteSize[0], -spriteSize[1],  0,\n            -spriteSize[0],  spriteSize[1],  0,\n             spriteSize[0], -spriteSize[1],  0,\n             spriteSize[0],  spriteSize[1],  0\n        ]);\n        SpriteCommand.sharedGeometry.setPositions(positions);\n\n        // Bind geometry\n        renderAPI.setGeometry(SpriteCommand.sharedGeometry);\n\n        // Draw object\n        renderAPI.drawIndexedPrimitives(DrawingMode.TrianglesStrip, 0, 4); \n    }\n\n    /**\n     * Check if the default program is ready, otherwise the function load it\n     *\n     * @return {boolean} Return true if the default program is loaded\n     */\n    static isDefaultProgramLoaded() \n    {\n        // Everything is ok?\n        if (SpriteCommand.sharedProgram.isReady())\n            return true;\n\n        let vertexShader =  'uniform mat4 uCamera;' +\n                            'uniform mat4 uModel;' +\n                            'attribute vec4 aPosition;' +\n                            'attribute vec4 aColor;' +\n                            'attribute vec2 aTexCoord;' +\n                            'varying vec4 vColor;' +\n                            'varying vec2 vUV;' +\n                            'void main() {' +\n                                'gl_Position = (uCamera * uModel) * aPosition;' +\n                                'vColor      = aColor;' +\n                                'vUV         = aTexCoord;' +\n                            '}';\n\n        let fragmentShader =    'uniform lowp sampler2D texture;' +\n                                'varying lowp vec4 vColor;' +\n                                'varying mediump vec2 vUV;' +\n                                'void main() {' +\n                                    'gl_FragColor = texture2D(texture, vUV) * vColor;' +\n                                '}';\n\n        SpriteCommand.sharedProgram.loadFromData(vertexShader, fragmentShader);\n\n        return false;\n    }\n}\n\n/**\n * Default geometry for sprite rendering\n *\n * @type {Geometry}\n * @private\n */\nSpriteCommand.sharedGeometry = Geometry.createRectangle(0.5, 0.5);\n\n/**\n * Default program for sprite rendering\n *\n * @type {Program}\n * @private\n */\nSpriteCommand.sharedProgram = new Program();\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/Commands/SpriteCommand.js\n **/","import {Context} from '../Context.js';\nimport {RenderTarget} from './RenderTarget.js';\nimport {WebGL} from './WebGL/RenderWebGL.js';\n\n/**\n * A rendering canvas\n *\n * @extends {RenderTarget}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class RenderCanvas extends RenderTarget\n{\n    /**\n     * Constructor\n     *\n     * @param {string} canvas Id of the container\n     * @param {{antialiasing: boolean, width: (number|undefined), height: (number|undefined)}} options Options\n     * @param {string=} type A string with the value \"webgl\" or \"canvas\"\n     */\n    constructor(canvas, options = {}, type = 'webgl')\n    {\n        super();\n\n        /**\n         * The render API to use: For now we support WebGL 1.0.3 only\n         *\n         * @type {RenderAPI}\n         * @protected\n         */\n        this.renderApi = WebGL.getInstance();\n\n        // Init the context\n        this.context.init(Context.Type.WebGL, options, canvas);\n    }\n\n    /**\n     * Clear the canvas\n     *\n     * @param {Color} color A Color instance\n     */\n    clear(color) \n    {\n        // Remove previous tasks\n        this.removeTasks();\n\n        // Activate context\n        this.context.activate();\n\n        // Clear screen\n        this.renderApi.clear(color);\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/RenderCanvas.js\n **/","import {Node} from './Node.js';\n\n/**\n * A scene\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Scene\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n         * Root node\n         *\n         * @type {Node}\n         * @private\n         */\n        this.root = new Node('root');\n    }\n\n    /**\n     * Add a node element to the scene\n     *\n     * @param {Node} node A Node instance\n     */\n    add(node)\n    {\n        this.root.addChild(node);\n    }\n\n    /**\n     * Find the node with the given name\n     *\n     * @param {string} name A string\n     * @return {?Node} A Node instance of null\n     */\n    find(name)\n    {\n        return this.root.findChild(name);\n    }\n\n    /**\n     * Remove a node element from the scene\n     *\n     * @param {Node} node A Node instance\n     * @return {boolean} True if the operation is a success\n     */\n    remove(node)\n    {\n        return this.root.removeChild(node);\n    }\n\n    /**\n     * Update the graph\n     *\n     * @param {number} deltaTime A floating value representing time elapsed between two frames\n     */\n    update(deltaTime)\n    {\n        // Recursive function to roam the graph\n        function update(node, deltaTime, parentUpdated)\n        {\n            // Update node\n            let updated = node.update(deltaTime, parentUpdated);\n\n            // Update his children\n            let children = node.getChildren();\n            for (let i = 0; i < children.length; i++)\n                update(children[i], deltaTime, (updated || parentUpdated));\n        }\n\n        // Start the recursive method\n        update(this.root, deltaTime, false);\n    }\n\n    /**\n     * Visit the graph\n     *\n     * @param {RenderTarget} renderTarget Renderer who called this method\n     */\n    visit(renderTarget)\n    {\n        // Recursive function to roam the graph\n        function visit(node, target)\n        {\n            // Visit node\n            node.visit(target);\n\n            // Visit his children\n            let children = node.getChildren();\n            for (let i = 0; i < children.length; i++)\n                visit(children[i], target);\n        }\n\n        // Start the recursive method\n        visit(this.root, renderTarget);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Scene/Scene.js\n **/","import {Drawable} from './Drawable.js';\nimport {SkyboxCommand} from '../Renderers/Commands/SkyboxCommand.js';\n\n/**\n * A Skybox\n *\n * @extends {Drawable}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Skybox extends Drawable\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        super();\n\n        /**\n         * Program\n         *\n         * @type {Program}\n         * @private\n         */\n        this.customProgram = null;\n\n        /**\n         * Texture cube linked\n         *\n         * @type {TextureCube}\n         * @private\n         */\n        this.texture = null;\n    }\n\n    /**\n     * Draw the element\n     *\n     * @param {RenderTarget} renderTarget Renderer who called this method\n     */\n    draw(renderTarget)\n    {\n        if (this.texture)\n            renderTarget.getActiveTask().addCommand(new SkyboxCommand(this));\n    }\n\n    /**\n     * Set program to use\n     *\n     * @param {Program} program A Program instance.\n     */\n    setCustomProgram(program)\n    {\n        this.customProgram = program;\n    }\n\n    /**\n     * Set texture\n     *\n     * @param {TextureCube} texture A TextureCube instance\n     */\n    setTexture(texture)\n    {\n        this.texture = texture;\n    }\n\n    /**\n     * Get program\n     *\n     * @return {?Program} A Program instance or null if the Skybox use the default program\n     */\n    getCustomProgram()\n    {\n        return this.customProgram;\n    }\n\n    /**\n     * Get the linked TextureCube instance\n     *\n     * @return {TextureCube} A TextureCube instances\n     */\n    getTexture()\n    {\n        return this.texture;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Objects/Skybox.js\n **/","import {DepthFunction, DrawingMode} from '../../StateBlock.js';\nimport {Geometry} from '../../Geometry.js';\nimport {Program} from '../../Program.js';\nimport {RenderCommand} from './RenderCommand.js';\nimport {TextureCube} from '../../Textures/TextureCube.js';\nimport {Type} from '../../Types.js';\nlet glMatrix = require('gl-matrix');\n\n/**\n * Draw Skyboxes\n *\n * @extends {RenderCommand}\n */\nexport class SkyboxCommand extends RenderCommand\n{\n    /**\n     * Constructor\n     *\n     * @param {Skybox} skybox A Skybox instance\n     */\n    constructor(skybox)\n    {\n        super();\n\n        /**\n         * The Skybox instance to draw\n         *\n         * @type {Skybox}\n         * @private\n         */\n        this.skybox = skybox;\n    }\n\n    /**\n     * Execute the command\n     *\n     * @param {RenderAPI} renderAPI RenderAPI instance used to process the commands\n     */\n    execute(renderAPI) \n    {\n        let texture = this.skybox.getTexture();\n        if (!texture || !texture.isReady())\n            return;\n\n        // Use custom or default program.\n        let program = this.skybox.getCustomProgram();\n        if (!program)\n        {\n            if (SkyboxCommand.isDefaultProgramLoaded())\n                program = SkyboxCommand.sharedProgram;\n            else\n                return;\n        }\n\n        // Program\n        let programCode = renderAPI.setProgram(program);\n        if (programCode == -1)\n            return;\n\n        // Must send/update shared uniforms\n        if (programCode == 1)\n        {\n            renderAPI.setUniform(program, 'projection', Type.Matrix, renderAPI.getActiveCamera().getProjectionMatrix());\n\n            // Tip: Remove last row and col from the matrix to get an infinite Skybox\n            let viewMatrix = renderAPI.getActiveCamera().getViewMatrix();\n            let m = glMatrix.mat3.fromMat4([], viewMatrix);\n\n            function toMat4(mat)\n            {\n                let result = glMatrix.mat4.create();\n                result[15] = 1; result[14] = 0; result[13] = 0; result[12] = 0;\n                result[11] = 0; result[10] = mat[8]; result[9] = mat[7]; result[8] = mat[6];\n                result[7] = 0; result[6] = mat[5]; result[5] = mat[4]; result[4] = mat[3];\n                result[3] = 0; result[2] = mat[2]; result[1] = mat[1]; result[0] = mat[0];\n\n                return result;\n            }\n\n            renderAPI.setUniform(program, 'view', Type.Matrix, toMat4(m));\n        }\n\n        // Send uniforms\n        renderAPI.setUniform(program, 'uModel', Type.Matrix, this.skybox.getTransformationMatrix());\n\n        // States and apparence\n        renderAPI.setDepthState(false, false, DepthFunction.Less);\n        renderAPI.bindTextureCube(0, texture);\n\n        // Bind geometry\n        renderAPI.setGeometry(SkyboxCommand.sharedGeometry);\n\n        // Draw object\n        renderAPI.drawIndexedPrimitives(DrawingMode.Triangles, 0, SkyboxCommand.sharedGeometry.getIndexCount());\n    }\n\n    /**\n     * Check if the default program is ready, otherwise the function load it\n     *\n     * @return {boolean} Return true if the default program is loaded\n     */\n    static isDefaultProgramLoaded() \n    {\n        if (SkyboxCommand.sharedProgram.isReady())\n            return true;\n\n        let vertexShader =  'uniform mat4 projection;' +\n                            'uniform mat4 view;' +\n                            'uniform mat4 uModel;' +\n                            'attribute vec4 aPosition;' +\n                            'attribute vec4 aColor;' +\n                            'varying vec4 vColor;' +\n                            'varying vec4 vUV;' +\n                            'void main() {' +\n                                'gl_Position = projection * view * aPosition;'+\n                                'vColor      = aColor;'+\n                                'vUV         = aPosition;' +\n                            '}';\n\n        let fragmentShader =    'uniform lowp samplerCube skybox;' +\n                                'varying lowp vec4 vColor;' +\n                                'varying mediump vec4 vUV;' +\n                                'void main() {'+\n                                    'gl_FragColor = textureCube(skybox, vUV.xyz) * vColor;' +\n                                '}';\n\n        SkyboxCommand.sharedProgram.loadFromData(vertexShader, fragmentShader);\n\n        return false;\n    }\n}\n\n/**\n * Default geometry for skybox rendering\n *\n * @type {Geometry}\n * @private\n */\nSkyboxCommand.sharedGeometry = Geometry.createCube(0.5, 0.5, 0.5);\n\n/**\n * Default program for skybox rendering\n *\n * @type {Program}\n * @private\n */\nSkyboxCommand.sharedProgram = new Program();\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/Commands/SkyboxCommand.js\n **/","import {Light} from './Light.js';\n\n/**\n * A spotlight\n *\n * @extends {Light}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class SpotLight extends Light\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        super();\n\n        /**\n         * Constant\n         *\n         * @type {number}\n         * @private\n         */\n        this.constant = 1.0;\n\n        /**\n         * Cutoff angle\n         *\n         * @type {number}\n         * @private\n         */\n        this.cutoff = 12.5;\n\n        /**\n         * Light's direction\n         *\n         * @type {Array.<number>}\n         * @private\n         */\n        this.direction = [];\n\n        /**\n         * Linear value\n         *\n         * @type {number}\n         * @private\n         */\n        this.linear = 0.09;\n\n        /**\n         * Quadratic value\n         *\n         * @type {number}\n         * @private\n         */\n        this.quadratic = 0.032;\n    }\n\n    /**\n     * Set direction\n     *\n     * @param {number} x Direction on X\n     * @param {number} y Direction on Y\n     * @param {number} z Direction on Z\n     */\n    setDirection(x, y, z) \n    {\n        this.direction = [x, y, z]; \n    }\n\n    /**\n     * Set cut off\n     *\n     * @param {number} value The cutoff value\n     */\n    setCutoff(value) \n    {\n        this.cutoff = value;\n    }\n\n    /**\n     * Set point light's values\n     *\n     * @param {number} constant The constant value\n     * @param {number} linear The linear value\n     * @param {number} quadratic The quadratic value\n     */\n    setValues(constant, linear, quadratic) \n    {\n        this.constant   = constant;\n        this.linear     = linear;\n        this.quadratic  = quadratic;\n    }\n\n    /**\n     * Get direction\n     *\n     * @return {Array.<number>} A vector with values for each axis\n     */\n    getDirection() \n    {\n        return this.direction; \n    }\n\n    /**\n     * Get values\n     *\n     * @return {Array.<number>} An array with constant, linear and quadratic values\n     */\n    getValues() \n    {\n        return [this.constant, this.linear, this.quadratic];\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Lights/SpotLight.js\n **/"],"sourceRoot":""}