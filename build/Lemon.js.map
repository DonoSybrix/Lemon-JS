{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 55c1705d1e8d95184cb7","webpack:///./src/Main.js","webpack:///./src/BlendMode.js","webpack:///./src/Camera.js","webpack:///./~/gl-matrix/src/gl-matrix.js","webpack:///./~/gl-matrix/src/gl-matrix/common.js","webpack:///./~/gl-matrix/src/gl-matrix/mat2.js","webpack:///./~/gl-matrix/src/gl-matrix/mat2d.js","webpack:///./~/gl-matrix/src/gl-matrix/mat3.js","webpack:///./~/gl-matrix/src/gl-matrix/mat4.js","webpack:///./~/gl-matrix/src/gl-matrix/quat.js","webpack:///./~/gl-matrix/src/gl-matrix/vec3.js","webpack:///./~/gl-matrix/src/gl-matrix/vec4.js","webpack:///./~/gl-matrix/src/gl-matrix/vec2.js","webpack:///./src/Color.js","webpack:///./src/Lights/DirectionalLight.js","webpack:///./src/Lights/Light.js","webpack:///./src/Scene/Node.js","webpack:///./src/Transformable.js","webpack:///./src/StateBlock.js","webpack:///./src/Loaders/FileLoader.js","webpack:///./src/Geometry.js","webpack:///./src/ContextResource.js","webpack:///./src/VertexFormat.js","webpack:///./src/Material/Material.js","webpack:///./src/Material/Pass.js","webpack:///./src/Types.js","webpack:///./src/Objects/Mesh.js","webpack:///./src/Objects/Drawable.js","webpack:///./src/Renderers/Commands/MeshCommand.js","webpack:///./src/Program.js","webpack:///./src/Renderers/Commands/RenderCommand.js","webpack:///./src/Objects/Model.js","webpack:///./src/Loaders/ModelLoader.js","webpack:///./src/Extra/ProgramLibrary.js","webpack:///./src/Textures/Texture.js","webpack:///./src/Textures/TextureInterface.js","webpack:///./src/Image.js","webpack:///./src/Lights/PointLight.js","webpack:///./src/Extra/PostEffect.js","webpack:///./src/Renderers/RenderTexture.js","webpack:///./src/Renderers/RenderTarget.js","webpack:///./src/Context.js","webpack:///./src/Renderers/RenderTask.js","webpack:///./src/Renderers/WebGL/RenderWebGL.js","webpack:///./src/Renderers/WebGL/Cache.js","webpack:///./src/Renderers/WebGL/Instances.js","webpack:///./src/Renderers/RenderAPI.js","webpack:///./src/Textures/TextureCube.js","webpack:///./src/Textures/TextureVideo.js","webpack:///./src/Renderers/WebGL/WebGL.js","webpack:///./src/Objects/Sprite.js","webpack:///./src/Renderers/Commands/SpriteCommand.js","webpack:///./src/Renderers/RenderCanvas.js","webpack:///./src/Scene/Scene.js","webpack:///./src/Objects/Skybox.js","webpack:///./src/Renderers/Commands/SkyboxCommand.js","webpack:///./src/Lights/SpotLight.js"],"names":[],"mappings":"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;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;ACpCA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAU,OAAO;AACjB;AACA;AACA;AACA;;AAEA;;;;;;;ACnDA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB;;AAEA,mC;AACA,sB;AACA,iB;AACA,iB;AACA,+B;AACA,sB;AACA,G;;;AAGA;;;;;;;AC7SA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,cAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,YAAW,OAAO;AAClB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,YAAW,KAAK;AAChB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,YAAW,KAAK;AAChB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,OAAO;AAClB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,KAAK;AAChB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,KAAK;AAChB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,cAAa,OAAO;AACpB;AACA,4B;AACA;AACA,G;;AAEA;;;;;;;AC5TA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,gB;AACA,qB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,MAAM;AACjB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAU,KAAK;AACf,WAAU,KAAK;AACf;AACA,aAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAU,KAAK;AACf,WAAU,KAAK;AACf;AACA,aAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gB;AACA,qB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;;AAGA;;;;;;;ACpjBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gB;AACA,qB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qD;AACA;AACA;AACA;AACA;;AAEA,eAAc,WAAW,WAAW;AACpC;AACA;AACA;AACA;;AAEA,eAAc,WAAW,YAAY;AACrC;AACA;AACA;AACA;;AAEA,gBAAe,YAAY,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,oBAAmB,YAAY,YAAY;AAC3C,oBAAmB,YAAY,YAAY;AAC3C,oBAAmB,YAAY,aAAa;;AAE5C,sBAAqB,cAAc,cAAc;AACjD,sBAAqB,cAAc,cAAc;AACjD,sBAAqB,cAAc,eAAe;;AAElD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA2C,aAAa;;AAExD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAe,YAAY,YAAY;AACvC,gBAAe,YAAY,YAAY;AACvC,gBAAe,YAAY,aAAa;;AAExC;AACA,yBAAwB,yBAAyB;AACjD,6BAA4B,qBAAqB;AACjD,6BAA4B,yBAAyB;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA,4CAA2C,aAAa;;AAExD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,MAAM;AACjB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,MAAM;AACjB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,MAAM;AACjB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;;AAGA;;;;;;;AClwCA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA,gB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA,gB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA,gB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK,O;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAwC;AACxC;AACA,2BAA0B;AAC1B;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;ACxiBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,cAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA,wBAAuB,OAAO;AAC9B,2BAA0B,iBAAiB;AAC3C;AACA,2BAA0B,iBAAiB;AAC3C;;AAEA;AACA;AACA,EAAC;;AAED;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA,M;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;ACpsBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,cAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA,wBAAuB,OAAO;AAC9B,2BAA0B,iBAAiB,iBAAiB;AAC5D;AACA,2BAA0B,iBAAiB,iBAAiB;AAC5D;;AAEA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;ACxhBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB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","file":"Lemon.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Lemon\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Lemon\"] = factory();\n\telse\n\t\troot[\"Lemon\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 55c1705d1e8d95184cb7\n **/","import {BlendMode} from './BlendMode.js';\nimport {Camera} from './Camera.js';\nimport {Color} from './Color.js';\nimport {DirectionalLight} from './Lights/DirectionalLight.js';\nimport {DrawingMode} from './StateBlock.js';\nimport {FileLoader} from './Loaders/FileLoader.js';\nimport {Geometry} from './Geometry.js';\nimport {Material} from './Material/Material.js';\nimport {Mesh} from './Objects/Mesh.js';\nimport {Model} from './Objects/Model.js';\nimport {ModelLoader} from './Loaders/ModelLoader.js';\nimport {Pass} from './Material/Pass.js';\nimport {PointLight} from './Lights/PointLight.js';\nimport {PostEffect} from './Extra/PostEffect.js';\nimport {Program} from './Program.js';\nimport {ProgramLibrary} from './Extra/ProgramLibrary.js';\nimport {RenderCanvas} from './Renderers/RenderCanvas.js';\nimport {RenderTarget} from './Renderers/RenderTarget.js';\nimport {RenderTexture} from './Renderers/RenderTexture.js';\nimport {Scene} from './Scene/Scene.js';\nimport {Skybox} from './Objects/Skybox.js';\nimport {SpotLight} from './Lights/SpotLight.js';\nimport {Sprite} from './Objects/Sprite.js';\nimport {Texture} from './Textures/Texture.js';\nimport {TextureCube} from './Textures/TextureCube.js';\nimport {TextureVideo} from './Textures/TextureVideo.js';\nimport {Transformable} from './Transformable.js';\nimport {Type} from './Types.js';\nimport {VertexFormat, VertexElement} from './VertexFormat.js';\n\nexports.BlendMode = BlendMode;\nexports.Camera = Camera;\nexports.Color = Color;\nexports.DirectionalLight = DirectionalLight;\nexports.DrawingMode = DrawingMode;\nexports.FileLoader = FileLoader;\nexports.Geometry = Geometry;\nexports.Material = Material;\nexports.Mesh = Mesh;\nexports.Model = Model;\nexports.ModelLoader = ModelLoader;\nexports.Pass = Pass;\nexports.PointLight = PointLight;\nexports.PostEffect = PostEffect;\nexports.Program = Program;\nexports.ProgramLibrary = ProgramLibrary;\nexports.RenderCanvas = RenderCanvas;\nexports.RenderTexture = RenderTexture;\nexports.Scene = Scene;\nexports.Skybox = Skybox;\nexports.SpotLight = SpotLight;\nexports.Sprite = Sprite;\nexports.Texture = Texture;\nexports.TextureCube = TextureCube;\nexports.TextureVideo = TextureVideo;\nexports.Transformable = Transformable;\nexports.Type = Type;\nexports.VertexFormat = VertexFormat;\nexports.VertexElement = VertexElement;\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main.js\n **/","/**\n * Blending\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class BlendMode\n{\n    /**\n     * Constructor\n     *\n     * @param {BlendMode=} mode Mode to use, preset values.\n     */\n    constructor(mode)\n    {\n        /**\n         * Source blending factor for the alpha channel\n         *\n         * @type {BlendMode.Factor}\n         * @public\n         */\n        this.alphaSourceFactor = BlendMode.Factor.One;\n\n        /**\n         * Destination blending factor for the alpha channel\n         *\n         * @type {BlendMode.Factor}\n         * @public\n         */\n        this.alphaDestinationFactor = BlendMode.Factor.OneMinusSourceAlpha;\n\n        /**\n         * Blending equation for the alpha channel\n         *\n         * @type {BlendMode.Equation}\n         * @public\n         */\n        this.alphaEquation = BlendMode.Equation.Add;\n\n        /**\n         * Blending color (source)\n         *\n         * @type {BlendMode.Factor}\n         * @public\n         */\n        this.colorSourceFactor = BlendMode.Factor.SourceAlpha;\n\n        /**\n         * Blending color (destination)\n         *\n         * @type {BlendMode.Factor}\n         * @public\n         */\n        this.colorDestinationFactor = BlendMode.Factor.OneMinusSourceAlpha;\n\n        /**\n         * Equation to use on source and destination color\n         *\n         * @type {BlendMode.Equation}\n         * @public\n         */\n        this.colorEquation = BlendMode.Equation.Add;\n\n        if (mode)\n            this.setMode(mode);\n    }\n\n    /**\n     * Set blending mode to use: this method erase the previous configuration, be careful\n     *\n     * @param {BlendMode.Mode=} mode Mode to use, preset values\n     */\n    setMode(mode)\n    {\n        switch(mode)\n        {\n            case BlendMode.Mode.Alpha:\n            {\n                this.colorSourceFactor      = BlendMode.Factor.SourceAlpha;\n                this.colorDestinationFactor = BlendMode.Factor.OneMinusSourceAlpha;\n                this.colorEquation          = BlendMode.Equation.Add;\n                this.alphaSourceFactor      = BlendMode.Factor.One;\n                this.alphaDestinationFactor = BlendMode.Factor.OneMinusSourceAlpha;\n                this.alphaEquation          = BlendMode.Equation.Add;\n                break;\n            }\n            case BlendMode.Mode.Add:\n            {\n                this.colorSourceFactor      = BlendMode.Factor.SourceAlpha;\n                this.colorDestinationFactor = BlendMode.Factor.One;\n                this.colorEquation          = BlendMode.Equation.Add;\n                this.alphaSourceFactor      = BlendMode.Factor.One;\n                this.alphaDestinationFactor = BlendMode.Factor.One;\n                this.alphaEquation          = BlendMode.Equation.Add;\n                break;\n            }\n            case BlendMode.Mode.Multiply:\n            {\n                this.colorSourceFactor      = BlendMode.Factor.DestinationColor;\n                this.colorDestinationFactor = BlendMode.Factor.One;\n                this.colorEquation          = BlendMode.Equation.Add;\n                this.alphaSourceFactor      = BlendMode.Factor.One;\n                this.alphaDestinationFactor = BlendMode.Factor.OneMinusSourceAlpha;\n                this.alphaEquation          = BlendMode.Equation.Add;\n                break;\n            }\n            default:\n            case BlendMode.Mode.None:\n            {\n                this.colorSourceFactor      = BlendMode.Factor.One;\n                this.colorDestinationFactor = BlendMode.Factor.Zero;\n                this.colorEquation          = BlendMode.Equation.Add;\n                this.alphaSourceFactor      = BlendMode.Factor.One;\n                this.alphaDestinationFactor = BlendMode.Factor.OneMinusSourceAlpha;\n                this.alphaEquation          = BlendMode.Equation.Add;\n                break;\n            }\n        }\n    }\n\n    /**\n     * Check if the given BlendMode instance is equal to this one\n     *\n     * @param {BlendMode} blendMode A BlendMode instance\n     * @return {boolean} True if the two blend mode are equals, otherwise false\n     */\n    isEqual(blendMode)\n    {\n        return (this.alphaSourceFactor          == blendMode.alphaSourceFactor      &&\n                this.alphaDestinationFactor     == blendMode.alphaDestinationFactor &&\n                this.alphaEquation              == blendMode.alphaEquation          &&\n                this.colorSourceFactor          == blendMode.colorSourceFactor      &&\n                this.colorDestinationFactor     == blendMode.colorDestinationFactor &&\n                this.colorEquation              == blendMode.colorEquation);\n    }\n}\n\n/**\n * Default modes availables\n *\n * @enum {number}\n */\nBlendMode.Mode = { Alpha : 0, Add : 1, Multiply : 2, None : 3 };\n\n/**\n * Blend factors\n *\n * @enum {number}\n */\nBlendMode.Factor =  {   DestinationAlpha            : 0,\n                        DestinationColor            : 1,\n                        One                         : 2,\n                        OneMinusDestinationAlpha    : 3,\n                        OneMinusDestinationColor    : 4,\n                        OneMinusSourceAlpha         : 5,\n                        OneMinusSourceColor         : 6,\n                        SourceAlpha                 : 7,\n                        SourceColor                 : 8,\n                        Zero                        : 9\n                    };\n\n/**\n * Blend equations\n *\n * @enum {number}\n */\nBlendMode.Equation = { Add: 0, Subtract: 1 };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/BlendMode.js\n **/","let glMatrix = require('gl-matrix');\n\n/**\n * A camera\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Camera\n{\n    /**\n     * Constructor\n     *\n     * @param {Camera.Type=} type Type of camera\n     */\n    constructor(type = Camera.Type.Perspective)\n    {\n        /**\n         * Camera's direction\n         *\n         * @type {glMatrix.vec3}\n         * @private\n         */\n        this.direction = glMatrix.vec3.create();\n\n        /**\n         * Field of view\n         *\n         * @type {number}\n         * @private\n         */\n        this.fov = 45.0;\n\n        /**\n         * Visibility limits: min (x) and max (y)\n         *\n         * @type {glMatrix.vec2}\n         * @private\n         */\n        this.limits = glMatrix.vec2.fromValues(0.1, 100.0);\n\n        /**\n         * Projection matrix\n         *\n         * @type {glMatrix.mat4}\n         * @private\n         */\n        this.matrixProjection = glMatrix.mat4.create();\n\n        /**\n         * View matrix\n         *\n         * @type {glMatrix.mat4}\n         * @private\n         */\n        this.matrixView = glMatrix.mat4.create();\n\n        /**\n         * Indicate if the view matrix need an update\n         *\n         * @type {boolean}\n         * @private\n         */\n        this.matrixViewNeedUpdate = true;\n\n        /**\n         * Resulting matrix with camera's transformations\n         *\n         * @type {glMatrix.mat4}\n         * @private\n         */\n        this.matrixViewProjection = glMatrix.mat4.create();\n\n        /**\n         * Indicate if the view matrix need an update\n         *\n         * @type {boolean}\n         * @private\n         */\n        this.matrixViewProjectionNeedUpdate = true;\n\n        /**\n         * Camera's position\n         *\n         * @type {glMatrix.vec3}\n         * @private\n         */\n        this.position = glMatrix.vec3.fromValues(0.0, 0.0, 3.0);\n\n        /**\n         * Ratio: 16/9, 4/3, …\n         *\n         * @type {number}\n         * @private\n         */\n        this.ratio = 16.0 / 9.0;\n\n        /**\n         * Camera's rotation\n         *\n         * @type {glMatrix.quat}\n         * @private\n         */\n        this.rotation = glMatrix.quat.fromValues(0.0, 0.0, 0.0, 1.0);\n\n        /**\n         * Type of camera\n         *\n         * @type {Camera.Type}\n         * @private\n         */\n        this.type = type;\n\n        /**\n         * View size with x, y, w and h values\n         *\n         * @type {glMatrix.vec4}\n         * @private\n         */\n        this.viewport = glMatrix.vec4.create();\n\n        /**\n         * Zoom\n         *\n         * @type {number}\n         * @default 1.0\n         * @private\n         */\n        this.zoomScale = 1.0;\n\n        // Force projection matrix computation\n        this.setType(this.type);\n    }\n\n    /**\n     * Set camera's direction: Point to look at\n     *\n     * @param {number} x Direction on X\n     * @param {number} y Direction on Y\n     * @param {number} z Direction on Z\n     */\n    lookAt(x, y, z)\n    {\n        glMatrix.vec3.set(this.direction, x, y, z);\n        this.matrixViewNeedUpdate = true;\n    }\n\n    /**\n     * Set camera's position\n     *\n     * @param {number} x Position on X\n     * @param {number} y Position on Y\n     * @param {number} z Position on Z\n     */\n    move(x, y, z)\n    {\n        glMatrix.vec3.set(this.position, x, y, z);\n        this.matrixViewNeedUpdate = true;\n    }\n\n    /**\n     * Set camera's rotation\n     *\n     * @param {number} yaw A floating value\n     * @param {number} pitch A floating value\n     */\n    rotate(yaw, pitch)\n    {\n        let yawQuat     = glMatrix.quat.fromValues(0.0, 0.0, 0.0, 1.0);\n        let pitchQuat   = glMatrix.quat.fromValues(0.0, 0.0, 0.0, 1.0);\n\n        glMatrix.quat.setAxisAngle(yawQuat, [0.0, 1.0, 0.0], yaw);\n        glMatrix.quat.setAxisAngle(pitchQuat, [1.0, 0.0, 0.0], -pitch);\n        glMatrix.quat.multiply(this.rotation, yawQuat, pitchQuat);\n\n        /**\n         * Multiply two vec4\n         *\n         * @param {quat} q1 First vector\n         * @param {quat} q2 Second vector\n         */\n        function multiply (q1, q2)\n        {\n            return [q1[3] * q2[0] + q1[0] * q2[3] + q1[2] * q2[1] - q1[1] * q2[2],\n                q1[3] * q2[1] + q1[1] * q2[3] + q1[0] * q2[2] - q1[2] * q2[0],\n                q1[3] * q2[2] + q1[2] * q2[3] + q1[1] * q2[0] - q1[0] * q2[1],\n                q1[3] * q2[3] + q1[0] * q2[0] + q1[1] * q2[1] - q1[2] * q2[2]];\n        }\n\n        let d = multiply(this.rotation, [this.direction[0], this.direction[1], this.direction[2], 0.0]);\n        let p = multiply(this.rotation, [this.position[0], this.position[1], this.position[2], 0.0]);\n\n        glMatrix.vec3.set(this.direction, d[0], d[1], d[2]);\n        glMatrix.vec3.set(this.position, p[0], p[1], p[2]);\n\n        this.matrixViewNeedUpdate = true;\n    }\n\n    /**\n     * Set field of view\n     *\n     * @param {number} value Value in degrees (default: 45)\n     */\n    setFieldOfView(value)\n    {\n        this.fov = value;\n        this.setType(this.type); // Force projection matrix update\n    }\n\n    /**\n     * Set screen's ratio\n     *\n     * @param {number} ratio Ratio to assign (4/3, 16/9, …)\n     */\n    setRatio(ratio)\n    {\n        this.ratio = ratio;\n        this.setType(this.type); // Force projection matrix update\n    }\n\n    /**\n     * Set camera's distances\n     *\n     * @param {Camera.Type} type Type asked, for 2D you should use \"Orthographic\"\n     */\n    setType(type)\n    {\n        // Save type\n        this.type = type;\n\n        // Compute projection matrix\n        if (type == Camera.Type.Perspective)\n            glMatrix.mat4.perspective(this.matrixProjection, glMatrix.glMatrix.toRadian(this.fov * this.zoomScale), this.ratio, this.limits[0], this.limits[1]);\n        else\n        {\n            glMatrix.mat4.ortho(this.matrixProjection,\n                                (-1.5 * this.ratio) * this.zoomScale,\n                                (+1.5 * this.ratio) * this.zoomScale,\n                                (-1.5 * this.zoomScale),\n                                (+1.5 * this.zoomScale),\n                                this.limits[0],\n                                this.limits[1]);\n        }\n\n        this.matrixViewProjectionNeedUpdate = true;\n    }\n\n    /**\n     * Set camera's distances\n     *\n     * @param {number} min Minimum distance to show\n     * @param {number} max Maximum distance to show\n     */\n    setViewDistances(min, max)\n    {\n        glMatrix.vec2.set(this.limits, min, max);\n        this.setType(this.type); // Force projection matrix update\n    }\n\n    /**\n     * Set camera's viewport\n     *\n     * @param {number} x View start position on X\n     * @param {number} y View start position on Y\n     * @param {number} w View size on X\n     * @param {number} h View size on Y\n     */\n    setViewport(x, y, w, h)\n    {\n        glMatrix.vec4.set(this.viewport, x, y, w, h);\n        this.setRatio(w / h);\n    }\n\n    /**\n     * Zoom\n     *\n     * @param {number} zoomValue Zoom scale to apply\n     */\n    zoom(zoomValue)\n    {\n        this.zoomScale = 1.0 / zoomValue;\n        this.setType(this.type); // Force projection matrix update\n    }\n\n    /**\n     * Get camera's position\n     *\n     * @return {!Array.<number>} A vector with three values: x, y and z\n     */\n    getPosition()\n    {\n        return [this.position[0], this.position[1], this.position[2]];\n    }\n\n    /**\n     * Get camera's projection matrix\n     *\n     * @return {!glMatrix.mat4} A matrix\n     */\n    getProjectionMatrix()\n    {\n        return this.matrixProjection;\n    }\n\n    /**\n     * Get camera's matrix\n     *\n     * @return {!glMatrix.mat4} A matrix\n     */\n    getViewMatrix()\n    {\n        if (this.matrixViewNeedUpdate)\n        {\n            glMatrix.mat4.lookAt(this.matrixView, this.position, this.direction, glMatrix.vec3.fromValues(0.0, 1.0, 0.0));\n            this.matrixViewNeedUpdate           = false;\n            this.matrixViewProjectionNeedUpdate = true;\n        }\n\n        return this.matrixView;\n    }\n\n    /**\n     * Get camera's viewport\n     *\n     * @return {!glMatrix.vec3} A vector with four values: x, y, w and h\n     */\n    getViewport()\n    {\n        return this.viewport;\n    }\n\n    /**\n     * Get camera's matrix\n     *\n     * @return {!glMatrix.mat4} A matrix\n     */\n    getViewProjectionMatrix()\n    {\n        if (this.matrixViewProjectionNeedUpdate || this.matrixViewNeedUpdate)\n        {\n            glMatrix.mat4.multiply(this.matrixViewProjection, this.getProjectionMatrix(), this.getViewMatrix());\n            this.matrixViewProjectionNeedUpdate = false;\n        }\n\n        return this.matrixViewProjection;\n    }\n}\n\n/**\n * Types\n *\n * @type {{Perspective: number, Orthographic: number}}\n */\nCamera.Type = { Perspective: 0, Orthographic: 1 };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Camera.js\n **/","/**\n * @fileoverview gl-matrix - High performance matrix and vector operations\n * @author Brandon Jones\n * @author Colin MacKenzie IV\n * @version 2.3.0\n */\n\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n// END HEADER\n\nexports.glMatrix = require(\"./gl-matrix/common.js\");\nexports.mat2 = require(\"./gl-matrix/mat2.js\");\nexports.mat2d = require(\"./gl-matrix/mat2d.js\");\nexports.mat3 = require(\"./gl-matrix/mat3.js\");\nexports.mat4 = require(\"./gl-matrix/mat4.js\");\nexports.quat = require(\"./gl-matrix/quat.js\");\nexports.vec2 = require(\"./gl-matrix/vec2.js\");\nexports.vec3 = require(\"./gl-matrix/vec3.js\");\nexports.vec4 = require(\"./gl-matrix/vec4.js\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix.js\n ** module id = 3\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n/**\n * @class Common utilities\n * @name glMatrix\n */\nvar glMatrix = {};\n\n// Constants\nglMatrix.EPSILON = 0.000001;\nglMatrix.ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\nglMatrix.RANDOM = Math.random;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nglMatrix.setMatrixArrayType = function(type) {\n    GLMAT_ARRAY_TYPE = type;\n}\n\nvar degree = Math.PI / 180;\n\n/**\n* Convert Degree To Radian\n*\n* @param {Number} Angle in Degrees\n*/\nglMatrix.toRadian = function(a){\n     return a * degree;\n}\n\nmodule.exports = glMatrix;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/common.js\n ** module id = 4\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 2x2 Matrix\n * @name mat2\n */\nvar mat2 = {};\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nmat2.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {mat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\nmat2.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nmat2.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a1 = a[1];\n        out[1] = a[2];\n        out[2] = a1;\n    } else {\n        out[0] = a[0];\n        out[1] = a[2];\n        out[2] = a[1];\n        out[3] = a[3];\n    }\n    \n    return out;\n};\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.invert = function(out, a) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n\n        // Calculate the determinant\n        det = a0 * a3 - a2 * a1;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n    \n    out[0] =  a3 * det;\n    out[1] = -a1 * det;\n    out[2] = -a2 * det;\n    out[3] =  a0 * det;\n\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.adjoint = function(out, a) {\n    // Caching this value is nessecary if out == a\n    var a0 = a[0];\n    out[0] =  a[3];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] =  a0;\n\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {mat2} a the source matrix\n * @returns {Number} determinant of a\n */\nmat2.determinant = function (a) {\n    return a[0] * a[3] - a[2] * a[1];\n};\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nmat2.multiply = function (out, a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    return out;\n};\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nmat2.mul = mat2.multiply;\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nmat2.rotate = function (out, a, rad) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = a0 *  c + a2 * s;\n    out[1] = a1 *  c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    return out;\n};\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nmat2.scale = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    return out;\n};\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nmat2.fromRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = -s;\n    out[3] = c;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2} out\n */\nmat2.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = v[1];\n    return out;\n}\n\n/**\n * Returns a string representation of a mat2\n *\n * @param {mat2} mat matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat2.str = function (a) {\n    return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {mat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat2.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))\n};\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {mat2} L the lower triangular matrix \n * @param {mat2} D the diagonal matrix \n * @param {mat2} U the upper triangular matrix \n * @param {mat2} a the input matrix to factorize\n */\n\nmat2.LDU = function (L, D, U, a) { \n    L[2] = a[2]/a[0]; \n    U[0] = a[0]; \n    U[1] = a[1]; \n    U[3] = a[3] - L[2] * U[1]; \n    return [L, D, U];       \n}; \n\n\nmodule.exports = mat2;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/mat2.js\n ** module id = 5\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 2x3 Matrix\n * @name mat2d\n * \n * @description \n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\nvar mat2d = {};\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nmat2d.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(6);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n};\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {mat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\nmat2d.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(6);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n};\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nmat2d.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n};\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nmat2d.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n};\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nmat2d.invert = function(out, a) {\n    var aa = a[0], ab = a[1], ac = a[2], ad = a[3],\n        atx = a[4], aty = a[5];\n\n    var det = aa * ad - ab * ac;\n    if(!det){\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = ad * det;\n    out[1] = -ab * det;\n    out[2] = -ac * det;\n    out[3] = aa * det;\n    out[4] = (ac * aty - ad * atx) * det;\n    out[5] = (ab * atx - aa * aty) * det;\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {mat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nmat2d.determinant = function (a) {\n    return a[0] * a[3] - a[1] * a[2];\n};\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nmat2d.multiply = function (out, a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    out[4] = a0 * b4 + a2 * b5 + a4;\n    out[5] = a1 * b4 + a3 * b5 + a5;\n    return out;\n};\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nmat2d.mul = mat2d.multiply;\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nmat2d.rotate = function (out, a, rad) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = a0 *  c + a2 * s;\n    out[1] = a1 *  c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n};\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nmat2d.scale = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n};\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nmat2d.translate = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = a0 * v0 + a2 * v1 + a4;\n    out[5] = a1 * v0 + a3 * v1 + a5;\n    return out;\n};\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nmat2d.fromRotation = function(out, rad) {\n    var s = Math.sin(rad), c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = -s;\n    out[3] = c;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2d} out\n */\nmat2d.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = v[1];\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat2d} out\n */\nmat2d.fromTranslation = function(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = v[0];\n    out[5] = v[1];\n    return out;\n}\n\n/**\n * Returns a string representation of a mat2d\n *\n * @param {mat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat2d.str = function (a) {\n    return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + \n                    a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {mat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat2d.frob = function (a) { \n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))\n}; \n\nmodule.exports = mat2d;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/mat2d.js\n ** module id = 6\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 3x3 Matrix\n * @name mat3\n */\nvar mat3 = {};\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nmat3.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(9);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n};\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nmat3.fromMat4 = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n};\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nmat3.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(9);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nmat3.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n    \n    return out;\n};\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.invert = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        b01 = a22 * a11 - a12 * a21,\n        b11 = -a22 * a10 + a12 * a20,\n        b21 = a21 * a10 - a11 * a20,\n\n        // Calculate the determinant\n        det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.adjoint = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8];\n\n    out[0] = (a11 * a22 - a12 * a21);\n    out[1] = (a02 * a21 - a01 * a22);\n    out[2] = (a01 * a12 - a02 * a11);\n    out[3] = (a12 * a20 - a10 * a22);\n    out[4] = (a00 * a22 - a02 * a20);\n    out[5] = (a02 * a10 - a00 * a12);\n    out[6] = (a10 * a21 - a11 * a20);\n    out[7] = (a01 * a20 - a00 * a21);\n    out[8] = (a00 * a11 - a01 * a10);\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nmat3.determinant = function (a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n};\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nmat3.multiply = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        b00 = b[0], b01 = b[1], b02 = b[2],\n        b10 = b[3], b11 = b[4], b12 = b[5],\n        b20 = b[6], b21 = b[7], b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n};\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nmat3.mul = mat3.multiply;\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nmat3.translate = function(out, a, v) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n        x = v[0], y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n};\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nmat3.rotate = function (out, a, rad) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nmat3.scale = function(out, a, v) {\n    var x = v[0], y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat3} out\n */\nmat3.fromTranslation = function(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = v[0];\n    out[7] = v[1];\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nmat3.fromRotation = function(out, rad) {\n    var s = Math.sin(rad), c = Math.cos(rad);\n\n    out[0] = c;\n    out[1] = s;\n    out[2] = 0;\n\n    out[3] = -s;\n    out[4] = c;\n    out[5] = 0;\n\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat3} out\n */\nmat3.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n\n    out[3] = 0;\n    out[4] = v[1];\n    out[5] = 0;\n\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nmat3.fromMat2d = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = 0;\n\n    out[3] = a[2];\n    out[4] = a[3];\n    out[5] = 0;\n\n    out[6] = a[4];\n    out[7] = a[5];\n    out[8] = 1;\n    return out;\n};\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nmat3.fromQuat = function (out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n};\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nmat3.normalFromMat4 = function (out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n};\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {mat3} mat matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat3.str = function (a) {\n    return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + \n                    a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + \n                    a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat3.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\n};\n\n\nmodule.exports = mat3;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/mat3.js\n ** module id = 7\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 4x4 Matrix\n * @name mat4\n */\nvar mat4 = {};\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(16);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(16);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nmat4.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a03 = a[3],\n            a12 = a[6], a13 = a[7],\n            a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n    \n    return out;\n};\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.invert = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.adjoint = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nmat4.determinant = function (a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n};\n\n/**\n * Multiplies two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.multiply = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];  \n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n    return out;\n};\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nmat4.mul = mat4.multiply;\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nmat4.translate = function (out, a, v) {\n    var x = v[0], y = v[1], z = v[2],\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n};\n\n/**\n * Scales the mat4 by the dimensions in the given vec3\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nmat4.scale = function(out, a, v) {\n    var x = v[0], y = v[1], z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nmat4.rotate = function (out, a, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t,\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23,\n        b00, b01, b02,\n        b10, b11, b12,\n        b20, b21, b22;\n\n    if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n    \n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateX = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[0]  = a[0];\n        out[1]  = a[1];\n        out[2]  = a[2];\n        out[3]  = a[3];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[4] = a10 * c + a20 * s;\n    out[5] = a11 * c + a21 * s;\n    out[6] = a12 * c + a22 * s;\n    out[7] = a13 * c + a23 * s;\n    out[8] = a20 * c - a10 * s;\n    out[9] = a21 * c - a11 * s;\n    out[10] = a22 * c - a12 * s;\n    out[11] = a23 * c - a13 * s;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateY = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[4]  = a[4];\n        out[5]  = a[5];\n        out[6]  = a[6];\n        out[7]  = a[7];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c - a20 * s;\n    out[1] = a01 * c - a21 * s;\n    out[2] = a02 * c - a22 * s;\n    out[3] = a03 * c - a23 * s;\n    out[8] = a00 * s + a20 * c;\n    out[9] = a01 * s + a21 * c;\n    out[10] = a02 * s + a22 * c;\n    out[11] = a03 * s + a23 * c;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateZ = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[8]  = a[8];\n        out[9]  = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c + a10 * s;\n    out[1] = a01 * c + a11 * s;\n    out[2] = a02 * c + a12 * s;\n    out[3] = a03 * c + a13 * s;\n    out[4] = a10 * c - a00 * s;\n    out[5] = a11 * c - a01 * s;\n    out[6] = a12 * c - a02 * s;\n    out[7] = a13 * c - a03 * s;\n    return out;\n};\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nmat4.fromTranslation = function(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nmat4.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = v[1];\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = v[2];\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nmat4.fromRotation = function(out, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t;\n    \n    if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n    \n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n    \n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n    \n    // Perform rotation-specific matrix multiplication\n    out[0] = x * x * t + c;\n    out[1] = y * x * t + z * s;\n    out[2] = z * x * t - y * s;\n    out[3] = 0;\n    out[4] = x * y * t - z * s;\n    out[5] = y * y * t + c;\n    out[6] = z * y * t + x * s;\n    out[7] = 0;\n    out[8] = x * z * t + y * s;\n    out[9] = y * z * t - x * s;\n    out[10] = z * z * t + c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromXRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n    \n    // Perform axis-specific matrix multiplication\n    out[0]  = 1;\n    out[1]  = 0;\n    out[2]  = 0;\n    out[3]  = 0;\n    out[4] = 0;\n    out[5] = c;\n    out[6] = s;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = -s;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromYRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n    \n    // Perform axis-specific matrix multiplication\n    out[0]  = c;\n    out[1]  = 0;\n    out[2]  = -s;\n    out[3]  = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = s;\n    out[9] = 0;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromZRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n    \n    // Perform axis-specific matrix multiplication\n    out[0]  = c;\n    out[1]  = s;\n    out[2]  = 0;\n    out[3]  = 0;\n    out[4] = -s;\n    out[5] = c;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nmat4.fromRotationTranslation = function (out, q, v) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    \n    return out;\n};\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nmat4.fromRotationTranslationScale = function (out, q, v, s) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2,\n        sx = s[0],\n        sy = s[1],\n        sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    \n    return out;\n};\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @param {vec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nmat4.fromRotationTranslationScaleOrigin = function (out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0], y = q[1], z = q[2], w = q[3],\n      x2 = x + x,\n      y2 = y + y,\n      z2 = z + z,\n\n      xx = x * x2,\n      xy = x * y2,\n      xz = x * z2,\n      yy = y * y2,\n      yz = y * z2,\n      zz = z * z2,\n      wx = w * x2,\n      wy = w * y2,\n      wz = w * z2,\n      \n      sx = s[0],\n      sy = s[1],\n      sz = s[2],\n\n      ox = o[0],\n      oy = o[1],\n      oz = o[2];\n      \n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\n  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\n  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\n  out[15] = 1;\n        \n  return out;\n};\n\nmat4.fromQuat = function (out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.frustum = function (out, left, right, bottom, top, near, far) {\n    var rl = 1 / (right - left),\n        tb = 1 / (top - bottom),\n        nf = 1 / (near - far);\n    out[0] = (near * 2) * rl;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = (near * 2) * tb;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = (right + left) * rl;\n    out[9] = (top + bottom) * tb;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (far * near * 2) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.perspective = function (out, fovy, aspect, near, far) {\n    var f = 1.0 / Math.tan(fovy / 2),\n        nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (2 * far * near) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.perspectiveFromFieldOfView = function (out, fov, near, far) {\n    var upTan = Math.tan(fov.upDegrees * Math.PI/180.0),\n        downTan = Math.tan(fov.downDegrees * Math.PI/180.0),\n        leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0),\n        rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0),\n        xScale = 2.0 / (leftTan + rightTan),\n        yScale = 2.0 / (upTan + downTan);\n\n    out[0] = xScale;\n    out[1] = 0.0;\n    out[2] = 0.0;\n    out[3] = 0.0;\n    out[4] = 0.0;\n    out[5] = yScale;\n    out[6] = 0.0;\n    out[7] = 0.0;\n    out[8] = -((leftTan - rightTan) * xScale * 0.5);\n    out[9] = ((upTan - downTan) * yScale * 0.5);\n    out[10] = far / (near - far);\n    out[11] = -1.0;\n    out[12] = 0.0;\n    out[13] = 0.0;\n    out[14] = (far * near) / (near - far);\n    out[15] = 0.0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.ortho = function (out, left, right, bottom, top, near, far) {\n    var lr = 1 / (left - right),\n        bt = 1 / (bottom - top),\n        nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nmat4.lookAt = function (out, eye, center, up) {\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n        eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2],\n        centerx = center[0],\n        centery = center[1],\n        centerz = center[2];\n\n    if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&\n        Math.abs(eyey - centery) < glMatrix.EPSILON &&\n        Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n        return mat4.identity(out);\n    }\n\n    z0 = eyex - centerx;\n    z1 = eyey - centery;\n    z2 = eyez - centerz;\n\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} mat matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat4.str = function (a) {\n    return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n                    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n                    a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + \n                    a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat4.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n};\n\n\nmodule.exports = mat4;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/mat4.js\n ** module id = 8\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\nvar mat3 = require(\"./mat3.js\");\nvar vec3 = require(\"./vec3.js\");\nvar vec4 = require(\"./vec4.js\");\n\n/**\n * @class Quaternion\n * @name quat\n */\nvar quat = {};\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nquat.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nquat.rotationTo = (function() {\n    var tmpvec3 = vec3.create();\n    var xUnitVec3 = vec3.fromValues(1,0,0);\n    var yUnitVec3 = vec3.fromValues(0,1,0);\n\n    return function(out, a, b) {\n        var dot = vec3.dot(a, b);\n        if (dot < -0.999999) {\n            vec3.cross(tmpvec3, xUnitVec3, a);\n            if (vec3.length(tmpvec3) < 0.000001)\n                vec3.cross(tmpvec3, yUnitVec3, a);\n            vec3.normalize(tmpvec3, tmpvec3);\n            quat.setAxisAngle(out, tmpvec3, Math.PI);\n            return out;\n        } else if (dot > 0.999999) {\n            out[0] = 0;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            return out;\n        } else {\n            vec3.cross(tmpvec3, a, b);\n            out[0] = tmpvec3[0];\n            out[1] = tmpvec3[1];\n            out[2] = tmpvec3[2];\n            out[3] = 1 + dot;\n            return quat.normalize(out, out);\n        }\n    };\n})();\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nquat.setAxes = (function() {\n    var matr = mat3.create();\n\n    return function(out, view, right, up) {\n        matr[0] = right[0];\n        matr[3] = right[1];\n        matr[6] = right[2];\n\n        matr[1] = up[0];\n        matr[4] = up[1];\n        matr[7] = up[2];\n\n        matr[2] = -view[0];\n        matr[5] = -view[1];\n        matr[8] = -view[2];\n\n        return quat.normalize(out, quat.fromMat3(out, matr));\n    };\n})();\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nquat.clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nquat.fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nquat.copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nquat.set = vec4.set;\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nquat.identity = function(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nquat.setAxisAngle = function(out, axis, rad) {\n    rad = rad * 0.5;\n    var s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n};\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nquat.add = vec4.add;\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nquat.multiply = function(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n};\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nquat.mul = quat.multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nquat.scale = vec4.scale;\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateX = function (out, a, rad) {\n    rad *= 0.5; \n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n};\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateY = function (out, a, rad) {\n    rad *= 0.5; \n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        by = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n};\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateZ = function (out, a, rad) {\n    rad *= 0.5; \n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bz = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n};\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nquat.calculateW = function (out, a) {\n    var x = a[0], y = a[1], z = a[2];\n\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n    return out;\n};\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nquat.dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nquat.lerp = vec4.lerp;\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nquat.slerp = function (out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    var        omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if ( cosom < 0.0 ) {\n        cosom = -cosom;\n        bx = - bx;\n        by = - by;\n        bz = - bz;\n        bw = - bw;\n    }\n    // calculate coefficients\n    if ( (1.0 - cosom) > 0.000001 ) {\n        // standard case (slerp)\n        omega  = Math.acos(cosom);\n        sinom  = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {        \n        // \"from\" and \"to\" quaternions are very close \n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n    \n    return out;\n};\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {quat} c the third operand\n * @param {quat} d the fourth operand\n * @param {Number} t interpolation amount\n * @returns {quat} out\n */\nquat.sqlerp = (function () {\n  var temp1 = quat.create();\n  var temp2 = quat.create();\n  \n  return function (out, a, b, c, d, t) {\n    quat.slerp(temp1, a, d, t);\n    quat.slerp(temp2, b, c, t);\n    quat.slerp(out, temp1, temp2, 2 * t * (1 - t));\n    \n    return out;\n  };\n}());\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nquat.invert = function(out, a) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        dot = a0*a0 + a1*a1 + a2*a2 + a3*a3,\n        invDot = dot ? 1.0/dot : 0;\n    \n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0*invDot;\n    out[1] = -a1*invDot;\n    out[2] = -a2*invDot;\n    out[3] = a3*invDot;\n    return out;\n};\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nquat.conjugate = function (out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n * @function\n */\nquat.length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nquat.len = quat.length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nquat.squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nquat.sqrLen = quat.squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nquat.normalize = vec4.normalize;\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nquat.fromMat3 = function(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    var fTrace = m[0] + m[4] + m[8];\n    var fRoot;\n\n    if ( fTrace > 0.0 ) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5/fRoot;  // 1/(4w)\n        out[0] = (m[5]-m[7])*fRoot;\n        out[1] = (m[6]-m[2])*fRoot;\n        out[2] = (m[1]-m[3])*fRoot;\n    } else {\n        // |w| <= 1/2\n        var i = 0;\n        if ( m[4] > m[0] )\n          i = 1;\n        if ( m[8] > m[i*3+i] )\n          i = 2;\n        var j = (i+1)%3;\n        var k = (i+2)%3;\n        \n        fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\n        out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\n        out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\n    }\n    \n    return out;\n};\n\n/**\n * Returns a string representation of a quatenion\n *\n * @param {quat} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nquat.str = function (a) {\n    return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};\n\nmodule.exports = quat;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/quat.js\n ** module id = 9\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 3 Dimensional Vector\n * @name vec3\n */\nvar vec3 = {};\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nvec3.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(3);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nvec3.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(3);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n};\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nvec3.fromValues = function(x, y, z) {\n    var out = new glMatrix.ARRAY_TYPE(3);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nvec3.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n};\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nvec3.set = function(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nvec3.sub = vec3.subtract;\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nvec3.mul = vec3.multiply;\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nvec3.div = vec3.divide;\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    return out;\n};\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nvec3.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n};\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nvec3.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nvec3.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2];\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nvec3.dist = vec3.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec3.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2];\n    return x*x + y*y + z*z;\n};\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nvec3.sqrDist = vec3.squaredDistance;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec3.length = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nvec3.len = vec3.length;\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec3.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    return x*x + y*y + z*z;\n};\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nvec3.sqrLen = vec3.squaredLength;\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nvec3.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nvec3.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n};\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nvec3.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    var len = x*x + y*y + z*z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n        out[2] = a[2] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec3.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n};\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.cross = function(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2],\n        bx = b[0], by = b[1], bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n};\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nvec3.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n};\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nvec3.hermite = function (out, a, b, c, d, t) {\n  var factorTimes2 = t * t,\n      factor1 = factorTimes2 * (2 * t - 3) + 1,\n      factor2 = factorTimes2 * (t - 2) + t,\n      factor3 = factorTimes2 * (t - 1),\n      factor4 = factorTimes2 * (3 - 2 * t);\n  \n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  \n  return out;\n};\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nvec3.bezier = function (out, a, b, c, d, t) {\n  var inverseFactor = 1 - t,\n      inverseFactorTimesTwo = inverseFactor * inverseFactor,\n      factorTimes2 = t * t,\n      factor1 = inverseFactorTimesTwo * inverseFactor,\n      factor2 = 3 * t * inverseFactorTimesTwo,\n      factor3 = 3 * factorTimes2 * inverseFactor,\n      factor4 = factorTimes2 * t;\n  \n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  \n  return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nvec3.random = function (out, scale) {\n    scale = scale || 1.0;\n\n    var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n    var z = (glMatrix.RANDOM() * 2.0) - 1.0;\n    var zScale = Math.sqrt(1.0-z*z) * scale;\n\n    out[0] = Math.cos(r) * zScale;\n    out[1] = Math.sin(r) * zScale;\n    out[2] = z * scale;\n    return out;\n};\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nvec3.transformMat4 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2],\n        w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n};\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nvec3.transformMat3 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n};\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nvec3.transformQuat = function(out, a, q) {\n    // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return out;\n};\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateX = function(out, a, b, c){\n   var p = [], r=[];\n\t  //Translate point to the origin\n\t  p[0] = a[0] - b[0];\n\t  p[1] = a[1] - b[1];\n  \tp[2] = a[2] - b[2];\n\n\t  //perform rotation\n\t  r[0] = p[0];\n\t  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\n\t  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\n\n\t  //translate to correct position\n\t  out[0] = r[0] + b[0];\n\t  out[1] = r[1] + b[1];\n\t  out[2] = r[2] + b[2];\n\n  \treturn out;\n};\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateY = function(out, a, b, c){\n  \tvar p = [], r=[];\n  \t//Translate point to the origin\n  \tp[0] = a[0] - b[0];\n  \tp[1] = a[1] - b[1];\n  \tp[2] = a[2] - b[2];\n  \n  \t//perform rotation\n  \tr[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\n  \tr[1] = p[1];\n  \tr[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\n  \n  \t//translate to correct position\n  \tout[0] = r[0] + b[0];\n  \tout[1] = r[1] + b[1];\n  \tout[2] = r[2] + b[2];\n  \n  \treturn out;\n};\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateZ = function(out, a, b, c){\n  \tvar p = [], r=[];\n  \t//Translate point to the origin\n  \tp[0] = a[0] - b[0];\n  \tp[1] = a[1] - b[1];\n  \tp[2] = a[2] - b[2];\n  \n  \t//perform rotation\n  \tr[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\n  \tr[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\n  \tr[2] = p[2];\n  \n  \t//translate to correct position\n  \tout[0] = r[0] + b[0];\n  \tout[1] = r[1] + b[1];\n  \tout[2] = r[2] + b[2];\n  \n  \treturn out;\n};\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec3.forEach = (function() {\n    var vec = vec3.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 3;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\n        }\n        \n        return a;\n    };\n})();\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nvec3.angle = function(a, b) {\n   \n    var tempA = vec3.fromValues(a[0], a[1], a[2]);\n    var tempB = vec3.fromValues(b[0], b[1], b[2]);\n \n    vec3.normalize(tempA, tempA);\n    vec3.normalize(tempB, tempB);\n \n    var cosine = vec3.dot(tempA, tempB);\n\n    if(cosine > 1.0){\n        return 0;\n    } else {\n        return Math.acos(cosine);\n    }     \n};\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec3} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nvec3.str = function (a) {\n    return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n};\n\nmodule.exports = vec3;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/vec3.js\n ** module id = 10\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 4 Dimensional Vector\n * @name vec4\n */\nvar vec4 = {};\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nvec4.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nvec4.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nvec4.fromValues = function(x, y, z, w) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n};\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nvec4.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nvec4.set = function(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n};\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nvec4.sub = vec4.subtract;\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    out[3] = a[3] * b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nvec4.mul = vec4.multiply;\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    out[3] = a[3] / b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nvec4.div = vec4.divide;\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    out[3] = Math.min(a[3], b[3]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    out[3] = Math.max(a[3], b[3]);\n    return out;\n};\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nvec4.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n};\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nvec4.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nvec4.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2],\n        w = b[3] - a[3];\n    return Math.sqrt(x*x + y*y + z*z + w*w);\n};\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nvec4.dist = vec4.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec4.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2],\n        w = b[3] - a[3];\n    return x*x + y*y + z*z + w*w;\n};\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nvec4.sqrDist = vec4.squaredDistance;\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec4.length = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    return Math.sqrt(x*x + y*y + z*z + w*w);\n};\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nvec4.len = vec4.length;\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec4.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    return x*x + y*y + z*z + w*w;\n};\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nvec4.sqrLen = vec4.squaredLength;\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nvec4.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = -a[3];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nvec4.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n};\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nvec4.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    var len = x*x + y*y + z*z + w*w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n        out[0] = x * len;\n        out[1] = y * len;\n        out[2] = z * len;\n        out[3] = w * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec4.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n};\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nvec4.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nvec4.random = function (out, scale) {\n    scale = scale || 1.0;\n\n    //TODO: This is a pretty awful way of doing this. Find something better.\n    out[0] = glMatrix.RANDOM();\n    out[1] = glMatrix.RANDOM();\n    out[2] = glMatrix.RANDOM();\n    out[3] = glMatrix.RANDOM();\n    vec4.normalize(out, out);\n    vec4.scale(out, out, scale);\n    return out;\n};\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nvec4.transformMat4 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2], w = a[3];\n    out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n    out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n    out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n    out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n    return out;\n};\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nvec4.transformQuat = function(out, a, q) {\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec4.forEach = (function() {\n    var vec = vec4.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 4;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\n        }\n        \n        return a;\n    };\n})();\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec4} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nvec4.str = function (a) {\n    return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};\n\nmodule.exports = vec4;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/vec4.js\n ** module id = 11\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 2 Dimensional Vector\n * @name vec2\n */\nvar vec2 = {};\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nvec2.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(2);\n    out[0] = 0;\n    out[1] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nvec2.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(2);\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n};\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nvec2.fromValues = function(x, y) {\n    var out = new glMatrix.ARRAY_TYPE(2);\n    out[0] = x;\n    out[1] = y;\n    return out;\n};\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nvec2.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n};\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nvec2.set = function(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n};\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nvec2.sub = vec2.subtract;\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nvec2.mul = vec2.multiply;\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nvec2.div = vec2.divide;\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    return out;\n};\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nvec2.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n};\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nvec2.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nvec2.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nvec2.dist = vec2.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec2.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x*x + y*y;\n};\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nvec2.sqrDist = vec2.squaredDistance;\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec2.length = function (a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nvec2.len = vec2.length;\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec2.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1];\n    return x*x + y*y;\n};\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nvec2.sqrLen = vec2.squaredLength;\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nvec2.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nvec2.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n};\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nvec2.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x*x + y*y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec2.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n};\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nvec2.cross = function(out, a, b) {\n    var z = a[0] * b[1] - a[1] * b[0];\n    out[0] = out[1] = 0;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nvec2.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nvec2.random = function (out, scale) {\n    scale = scale || 1.0;\n    var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n    out[0] = Math.cos(r) * scale;\n    out[1] = Math.sin(r) * scale;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat2 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat2d = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat3 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat4 = function(out, a, m) {\n    var x = a[0], \n        y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec2.forEach = (function() {\n    var vec = vec2.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 2;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1];\n        }\n        \n        return a;\n    };\n})();\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec2} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nvec2.str = function (a) {\n    return 'vec2(' + a[0] + ', ' + a[1] + ')';\n};\n\nmodule.exports = vec2;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/vec2.js\n ** module id = 12\n ** module chunks = 0\n **/","/**\n * A color\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Color\n{\n    /**\n     * Constructor\n     *\n     * @param {number} r Red color in the range [0-255]\n     * @param {number} g Green color in the range [0-255]\n     * @param {number} b Blue color in the range [0-255]\n     * @param {number=} a Opacity in the range [0-255]\n     */\n    constructor(r, g, b, a = 1.0)\n    {\n        /**\n         * Red color in the range [0-1]\n         *\n         * @type {number}\n         * @public\n         */\n        this.r = (r / 255.0);\n\n        /**\n         * Green color in the range [0-1]\n         *\n         * @type {number}\n         * @public\n         */\n        this.g = (g / 255.0);\n\n        /**\n         * Red color in the range [0-1]\n         *\n         * @type {number}\n         * @public\n         */\n        this.b = (b / 255.0);\n\n        /**\n         * Opacity in the range [0-1]\n         *\n         * @type {number}\n         * @public\n         */\n        this.a = a ? (a / 255.0) : 1.0;\n    }\n\n    /**\n     * Set color\n     *\n     * @param {number} r Red color in the range [0-255]\n     * @param {number} g Green color in the range [0-255]\n     * @param {number} b Blue color in the range [0-255]\n     * @param {number=} a Opacity in the range [0-255]\n     */\n    set(r, g, b, a = 1.0)\n    {\n        this.r = (r / 255.0);\n        this.g = (g / 255.0);\n        this.b = (b / 255.0);\n        this.a = a ? (a / 255.0) : 1.0;\n    }\n\n    /**\n     * Check if the given Color instance is equal to this one\n     *\n     * @param {Color} color A Color instance\n     * @return {boolean} True if the two colors are equals, otherwise false\n     */\n    isEqual(color)\n    {\n        return (this.r == color.r && this.g == color.g && this.b == color.b && this.a == color.a);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Color.js\n **/","import {Light} from './Light.js';\n\n/**\n * A directional light\n *\n * @extends {Light}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class DirectionalLight extends Light\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        super();\n\n        /**\n         * Light's direction\n         *\n         * @type {Array.<number>}\n         * @private\n         */\n        this.direction = [];\n    }\n\n    /**\n     * Set direction\n     *\n     * @param {number} x Direction on X\n     * @param {number} y Direction on Y\n     * @param {number} z Direction on Z\n     */\n    setDirection(x, y, z) \n    {\n        this.direction = [x, y, z];\n    }\n\n    /**\n     * Get direction\n     *\n     * @return {Array.<number>} A vector with values for each axis\n     */\n    getDirection() \n    {\n        return this.direction; \n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Lights/DirectionalLight.js\n **/","import {Color} from '../Color.js';\nimport {Node} from '../Scene/Node.js';\n\n/**\n * A light\n\n * @extends {Node}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Light extends Node\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        super();\n\n        /**\n         * Ambient color\n         *\n         * @type {Color}\n         * @private\n         */\n        this.ambient = new Color(255, 255, 255);\n\n        /**\n         * Diffuse color\n         *\n         * @type {Color}\n         * @private\n         */\n        this.diffuse = new Color(255, 255, 255);\n\n        /**\n         * Specular color\n         *\n         * @type {Color}\n         * @private\n         */\n        this.specular = new Color(255, 255, 255);\n    }\n\n    /**\n     * Visit the node and his children\n     *\n     * @param {RenderTarget} renderTarget Renderer who called this method\n     */\n    visit(renderTarget) \n    {\n        renderTarget.getRenderAPI().bindLight(this);\n    }\n\n    /**\n     * Set ambient color\n     *\n     * @param {number} r Red value in the range 0 to 255\n     * @param {number} g Green value in the range 0 to 255\n     * @param {number} b Blue value in the range 0 to 255\n     */\n    setAmbientColor(r, g, b) \n    {\n        this.ambient.set(r, g, b);\n    }\n\n    /**\n     * Set diffuse color\n     *\n     * @param {number} r Red value in the range 0 to 255\n     * @param {number} g Green value in the range 0 to 255\n     * @param {number} b Blue value in the range 0 to 255\n     */\n    setDiffuseColor(r, g, b) \n    {\n        this.diffuse.set(r, g, b);\n    }\n\n    /**\n     * Set specular color\n     *\n     * @param {number} r Red value in the range 0 to 255\n     * @param {number} g Green value in the range 0 to 255\n     * @param {number} b Blue value in the range 0 to 255\n     */\n    setSpecularColor(r, g, b) \n    {\n        this.specular.set(r, g, b);\n    }\n\n    /**\n     * Get ambient color\n     *\n     * @return {Color} A color instance\n     */\n    getAmbientColor() \n    {\n        return this.ambient;\n    }\n\n    /**\n     * Get diffuse color\n     *\n     * @return {Color} A color instance\n     */\n    getDiffuseColor() \n    {\n        return this.diffuse;\n    }\n\n    /**\n     * Get specular color\n     *\n     * @return {Color} A color instance\n     */\n    getSpecularColor() \n    {\n        return this.specular;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Lights/Light.js\n **/","import {Transformable} from '../Transformable.js';\n\n/**\n * A node element is an element of a scene\n *\n * @description A Node can represent something like a light, a mesh, a sprite, a camera or a text\n * @extends {Transformable}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Node extends Transformable\n{\n    /**\n     * Constructor\n     *\n     * @param {string=} name A string\n     */\n    constructor(name = '')\n    {\n        super();\n\n        /**\n         * Node's children\n         *\n         * @type {Array.<Node>}\n         * @private\n         */\n        this.children = [];\n\n        /**\n         * Name, useful to retrieve the node\n         *\n         * @type {string}\n         * @private\n         */\n        this.name = name;\n\n        /**\n         * Node's parent\n         *\n         * @type {?Node}\n         * @private\n         */\n        this.parent = null;\n    }\n\n    /**\n     * Add a child to the node\n     *\n     * @param {Node} node A Node instance\n     */\n    addChild(node)\n    {\n        if (node == this)\n            return;\n\n        // Detach node from his previous parent\n        if (node.parent)\n            node.parent.removeChild(node);\n\n        // Add as a child\n        this.children.push(node);\n        node.parent = this;\n    }\n\n    /**\n     * Find the child with the given name\n     *\n     * @param {string} name A string\n     * @return {?Node} A Node instance of null\n     */\n    findChild(name)\n    {\n        for (let i = 0; i < this.children.length; i++)\n        {\n            if (this.children[i].name == name)\n                return this.children[i];\n            else\n            {\n                let child = this.children[i].findChild(name);\n                if (child)\n                    return child;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Remove a child from the node\n     *\n     * @param {Node} node A Node instance\n     * @return {boolean} True if the operation is a success\n     */\n    removeChild(node)\n    {\n        let index = this.children.indexOf(node);\n        if (index != -1)\n        {\n            this.children.splice(index, 1);\n            node.parent = null;\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Set the name to easily retrieve it later\n     *\n     * @param {string} name A string\n     */\n    setName(name)\n    {\n        this.name = name;\n    }\n\n    /**\n     * Update the node and his children\n     *\n     * @param {number} deltaTime A floating value representing time elapsed between two frames\n     * @param {boolean} parentUpdated Indicate if the parent element have been updated\n     * @return {boolean} True if the node have been updated\n     */\n    update(deltaTime, parentUpdated)\n    {\n        let parentMatrix = this.parent ? this.parent.getTransformationMatrix() : null;\n        return this.computeTransformationMatrix(parentMatrix, parentUpdated);\n    }\n\n    /**\n     * Visit the node and his children\n     *\n     * @param {RenderTarget} renderTarget Renderer who called this method\n     */\n    visit(renderTarget) { };\n\n    /**\n     * Return Node's children\n     *\n     * @return {Array.<Node>} An array of Node\n     */\n    getChildren()\n    {\n        return this.children;\n    }\n\n    /**\n     * Indicate if the current node is the scene's root\n     *\n     * @return {boolean} True if it's the root node, otherwise false\n     */\n    isRoot()\n    {\n        return (this.parent === null);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Scene/Node.js\n **/","let glMatrix = require('gl-matrix');\n\n/**\n * Transformable: Manage matrix's transformations\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Transformable\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n         * The result matrix\n         *\n         * @type {glMatrix.mat4}\n         * @private\n         */\n        this.matrix = glMatrix.mat4.create();\n\n        /**\n         * The normal matrix: inverse and transpose the transformation matrix\n         *\n         * @type {glMatrix.mat4}\n         * @private\n         */\n        this.normalMatrix = glMatrix.mat4.create();\n\n        /**\n         * Origin, useful to apply rotation relatively to a point in space\n         *\n         * @type {glMatrix.vec3}\n         * @private\n         */\n        this.origin = glMatrix.vec3.create();\n\n        /**\n         * Position\n         *\n         * @type {glMatrix.vec3}\n         * @private\n         */\n        this.position = glMatrix.vec3.create();\n\n        /**\n         * Rotation\n         *\n         * @type {glMatrix.quat}\n         * @private\n         */\n        this.rotation = glMatrix.quat.create();\n\n        /**\n         * Matrix with rotation data\n         *\n         * @type {glMatrix.mat4}\n         * @private\n         */\n        this.rotationMatrix = glMatrix.mat4.create();\n\n        /**\n         * Scale\n         *\n         * @type {glMatrix.vec3}\n         * @private\n         */\n        this.scale = glMatrix.vec3.fromValues(1.0, 1.0, 1.0);\n\n        /**\n         * Indicate if the matrix/cache need to be updated\n         *\n         * @type {boolean}\n         * @private\n         */\n        this.needTransformUpdate = true;\n    }\n\n    /**\n     * Look at the given position\n     *\n     * @param {Array.<number>|Float32Array|Float64Array} position An array with value for each axis\n     * @param {Array.<number>|Float32Array|Float64Array=} up An array with value for each axis\n     */\n    lookAt(position = [0, 0, 0], up = [0, 1, 0])\n    {\n        // Useful variables\n        let xAxis = glMatrix.vec3.create();\n        let yAxis = glMatrix.vec3.create();\n        let zAxis = glMatrix.vec3.create();\n\n        // Compute rotation on z-axis\n        glMatrix.vec3.subtract(zAxis, position, this.position);\n        glMatrix.vec3.normalize(zAxis, zAxis);\n\n        // Compute rotation on z-axis\n        glMatrix.vec3.subtract(zAxis, position, this.position);\n        glMatrix.vec3.normalize(zAxis, zAxis);\n\n        // Compute rotation on x-axis\n        glMatrix.vec3.cross(xAxis, up, zAxis);\n        glMatrix.vec3.normalize(xAxis, xAxis);\n\n        // Compute rotation on y-axis\n        glMatrix.vec3.cross(yAxis, zAxis, xAxis);\n\n        // Compute rotation matrix\n        let matrix = glMatrix.mat4.create();\n        matrix[0]  = xAxis[0];\n        matrix[1]  = xAxis[1];\n        matrix[2]  = xAxis[2];\n        matrix[3]  = 0;\n\n        matrix[4]  = yAxis[0];\n        matrix[5]  = yAxis[1];\n        matrix[6]  = yAxis[2];\n        matrix[7]  = 0;\n\n        matrix[8]  = zAxis[0];\n        matrix[9]  = zAxis[1];\n        matrix[10] = zAxis[2];\n        matrix[11] = 0;\n\n        matrix[12] = 0;\n        matrix[13] = 0;\n        matrix[14] = 0;\n        matrix[15] = 1;\n\n        // Send result\n        this.setRotationFromMatrix(matrix);\n    }\n\n    /**\n     * Set origin\n     *\n     * @param {number} x Origin on X\n     * @param {number} y Origin on Y\n     * @param {number} z Origin on Z\n     */\n    setOrigin(x, y, z)\n    {\n        glMatrix.vec3.set(this.origin, x, y, z);\n        this.needTransformUpdate = true;\n    }\n\n    /**\n     * Set position\n     *\n     * @param {number} x Position on X\n     * @param {number} y Position on Y\n     * @param {number} z Position on Z\n     */\n    setPosition(x, y, z)\n    {\n        glMatrix.vec3.set(this.position, x, y, z);\n        this.needTransformUpdate = true;\n    }\n\n    /**\n     * Set rotation using values in degrees\n     *\n     * @param {number} x Rotation on X in degrees\n     * @param {number} y Rotation on Y in degrees\n     * @param {number} z Rotation on Z in degrees\n     */\n    setRotation(x, y, z)\n    {\n        // Compute rotation matrix\n        glMatrix.mat4.identity(this.rotationMatrix);\n        glMatrix.mat4.rotateX(this.rotationMatrix, this.rotationMatrix, glMatrix.glMatrix.toRadian(x));\n        glMatrix.mat4.rotateY(this.rotationMatrix, this.rotationMatrix, glMatrix.glMatrix.toRadian(y));\n        glMatrix.mat4.rotateZ(this.rotationMatrix, this.rotationMatrix, glMatrix.glMatrix.toRadian(z));\n\n        // Compute quaterion\n        let m3 = glMatrix.mat3.create();\n        glMatrix.mat3.fromMat4(m3, this.rotationMatrix);\n        glMatrix.quat.fromMat3(this.rotation, m3);\n\n        this.needTransformUpdate = true;\n    }\n\n    /**\n     * Set rotation from a quaternion\n     *\n     * @param {glMatrix.quat} quaternion A quaternion\n     */\n    setRotationFromQuaternion(quaternion)\n    {\n        glMatrix.mat4.fromQuat(this.rotationMatrix, quaternion);\n\n        this.rotation               = quaternion;\n        this.needTransformUpdate    = true;\n    }\n\n    /**\n     * Set rotation from a rotation matrix\n     *\n     * @param {glMatrix.mat4} matrix A Matrix\n     */\n    setRotationFromMatrix(matrix)\n    {\n        glMatrix.quat.fromMat3(this.rotation, matrix);\n\n        this.rotationMatrix         = matrix;\n        this.needTransformUpdate    = true;\n    }\n\n    /**\n     * Set scale\n     *\n     * @param {number} x Position on X\n     * @param {number} y Position on Y\n     * @param {number} z Position on Z\n     */\n    setScale(x, y, z)\n    {\n        glMatrix.vec3.set(this.scale, x, y, z);\n        this.needTransformUpdate = true;\n    }\n\n    /**\n     * Update matrix\n     *\n     * @param {?glMatrix.mat4} parentMatrix Parent transformable's matrix\n     * @param {boolean} forceUpdate True to force an update\n     * @return {boolean} True if the matrix have been updated, otherwise false\n     */\n    computeTransformationMatrix(parentMatrix, forceUpdate)\n    {\n        // Avoid useless updates\n        if (!forceUpdate && !this.needTransformUpdate)\n            return false;\n\n        // Compute matrix\n        glMatrix.mat4.identity(this.matrix);\n        glMatrix.mat4.translate(this.matrix, this.matrix, this.position);\n        glMatrix.mat4.multiply(this.matrix, this.matrix, this.rotationMatrix);\n        glMatrix.mat4.scale(this.matrix, this.matrix, this.scale);\n\n        // Apply parent's transformations\n        if (parentMatrix)\n            glMatrix.mat4.multiply(this.matrix, parentMatrix, this.matrix);\n\n        // Compute inverse matrix\n        glMatrix.mat4.invert(this.normalMatrix, this.matrix);\n        glMatrix.mat4.transpose(this.normalMatrix, this.normalMatrix);\n\n        this.needTransformUpdate = false;\n\n        return true;\n    }\n\n    /**\n     * Return computed matrix\n     *\n     * @return {glMatrix.mat4} A reference to the object's matrix\n     */\n    getTransformationMatrix()\n    {\n        return this.matrix;\n    }\n\n    /**\n     * Return computed normal matrix\n     *\n     * @return {glMatrix.mat4} A matrix\n     */\n    getNormalMatrix()\n    {\n        return this.normalMatrix;\n    }\n\n    /**\n     * Return the origin\n     *\n     * @return {glMatrix.vec3} A vector with the value for each axis\n     */\n    getOrigin()\n    {\n        return this.origin;\n    }\n\n    /**\n     * Return relative position\n     *\n     * @return {glMatrix.vec3} A vector with the value for each axis\n     */\n    getPosition()\n    {\n        return this.position;\n    }\n\n    /**\n     * Return the rotation in degrees\n     *\n     * @return {Array.<number>} A vector with the value for each axis in degrees\n     * @todo Implement this function\n     */\n    getRotation()\n    {\n        throw '\\'getRotation\\' is not implemented for now …';\n    }\n\n    /**\n     * Return the scale\n     *\n     * @return {glMatrix.vec3} A vector with the value for each axis\n     */\n    getScale()\n    {\n        return this.scale;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Transformable.js\n **/","import {BlendMode} from './BlendMode.js';\n\n/**\n * A rendering state\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class StateBlock\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n         * Blend mode\n         *\n         * @type {BlendMode}\n         * @public\n         */\n        this.blendMode = new BlendMode();\n\n        /**\n         * Depth function to use\n         *\n         * @type {DepthFunction}\n         * @default {DepthFunction.Less}\n         * @public\n         */\n        this.depthFunction = DepthFunction.Less;\n\n        /**\n         * Indicate if we want to write in the depth buffer\n         *\n         * @type {boolean}\n         * @default {true}\n         * @public\n         */\n        this.depthWrite = true;\n\n        /**\n         * Indicate if we want to test pixels with values in the depth buffer\n         *\n         * @type {boolean}\n         * @default {true}\n         * @public\n         */\n        this.depthTest = true;\n\n        /**\n         * Drawing mode\n         *\n         * @type {DrawingMode}\n         * @default {DrawingMode.Triangles}\n         * @public\n         */\n        this.drawingMode = DrawingMode.Triangles;\n\n        /**\n         * Face culling\n         *\n         * @type {FaceCulling}\n         * @default {FaceCulling.Back}\n         * @public\n         */\n        this.faceCulling = FaceCulling.Back;\n\n        /**\n         * Stencil function to use\n         *\n         * @type {StencilFunction}\n         * @default {StencilFunction.Less}\n         * @public\n         */\n        this.stencilFunction = StencilFunction.Less;\n\n        /**\n         * Stencil reference value\n         *\n         * @type {number}\n         * @default {0}\n         * @public\n         */\n        this.stencilReference = 0;\n\n        /**\n         * Stencil mask value\n         *\n         * @type {number}\n         * @default {255}\n         * @public\n         */\n        this.stencilMask = 255;\n\n        /**\n         * Indicate if stencil test is active\n         *\n         * @type {boolean}\n         * @default {false}\n         * @public\n         */\n        this.stencilTest = false;\n\n        /**\n         * Value to write in the stencil buffer when stencil is active\n         *\n         * @type {number}\n         * @default {0xFF}\n         * @public\n         */\n        this.stencilWrite = 0xFF;\n\n        /**\n         * Operation to execute when stencil test failed\n         *\n         * @type {StencilOperation}\n         * @default {StencilOperation.Keep}\n         * @public\n         */\n        this.stencilTestFail = StencilOperation.Keep;\n\n        /**\n         * Operation to execute when stencil test failed using depth buffer\n         *\n         * @type {StencilOperation}\n         * @default {StencilOperation.Keep}\n         * @public\n         */\n        this.stencilDepthTestFail = StencilOperation.Keep;\n\n        /**\n         * Operation to execute when stencil test is a success\n         *\n         * @type {StencilOperation}\n         * @default {StencilOperation.Keep}\n         * @public\n         */\n        this.stencilSuccess = StencilOperation.Keep;\n    }\n\n    /**\n     * Check if the given StateBlock instance is equal to this one\n     *\n     * @param {StateBlock} state A StateBlock instance\n     * @return {boolean} True if the two states are equals, otherwise false\n     */\n    isEqual(state)\n    {\n        return (this.blendMode.isEqual(state.blendMode)                     &&\n                this.depthFunction          == state.depthFunction          &&\n                this.depthWrite             == state.depthWrite             &&\n                this.depthTest              == state.depthTest              &&\n                this.stencilFunction        == state.stencilFunction        &&\n                this.stencilReference       == state.stencilReference       &&\n                this.stencilMask            == state.stencilMask            &&\n                this.stencilTest            == state.stencilTest            &&\n                this.stencilWrite           == state.stencilWrite           &&\n                this.stencilTestFail        == state.stencilTestFail        &&\n                this.stencilDepthTestFail   == state.stencilDepthTestFail   &&\n                this.stencilSuccess         == state.stencilSuccess );\n    }\n}\n\n/**\n * Depth function to use\n */\nexport class DepthFunction {}\n\n/**\n * Never\n *\n * @type {number}\n */\nDepthFunction.Never = 0;\n\n/**\n * Less\n *\n * @type {number}\n */\nDepthFunction.Less = 1;\n\n/**\n * Equal\n *\n * @type {number}\n */\nDepthFunction.Equal = 2;\n\n/**\n * LessEqual\n *\n * @type {number}\n */\nDepthFunction.LessEqual = 3;\n\n/**\n * Greater\n *\n * @type {number}\n */\nDepthFunction.Greater = 4;\n\n/**\n * NotEqual\n *\n * @type {number}\n */\nDepthFunction.NotEqual = 5;\n\n/**\n * GreaterEqual\n *\n * @type {number}\n */\nDepthFunction.GreaterEqual = 6;\n\n/**\n * Always\n *\n * @type {number}\n */\nDepthFunction.Always = 7;\n\n/**\n* Drawing modes\n*/\nexport class DrawingMode {}\n\n/**\n * Draw as points\n *\n * @type {number}\n */\nDrawingMode.Points = 0;\n\n/**\n * Draw as lines\n *\n * @type {number}\n */\nDrawingMode.Lines = 1;\n\n/**\n * Draw as lines strip\n *\n * @type {number}\n */\nDrawingMode.LinesStrip = 2;\n\n/**\n * Draw as lines loop\n *\n * @type {number}\n */\nDrawingMode.LinesLoop = 3;\n\n/**\n * Draw as triangles\n *\n * @type {number}\n */\nDrawingMode.Triangles = 4;\n\n/**\n * Draw as triangles strip\n *\n * @type {number}\n */\nDrawingMode.TrianglesStrip = 5;\n\n/**\n * Draw as triangles fan\n *\n * @type {number}\n */\nDrawingMode.TrianglesFan = 6;\n\n/**\n * Face culling\n */\nexport class FaceCulling {}\n\n/**\n * Don't draw back face\n *\n * @type {number}\n */\nFaceCulling.Back = 0;\n\n/**\n * Don't draw front face\n *\n * @type {number}\n */\nFaceCulling.Front = 1;\n\n/**\n * Draw both faces, disable face culling\n *\n * @type {number}\n */\nFaceCulling.None = 2;\n\n/**\n * Stencil functions\n */\nexport class StencilFunction {}\n\n/**\n * Never\n *\n * @type {number}\n */\nStencilFunction.Never = 0;\n\n/**\n * Less\n *\n * @type {number}\n */\nStencilFunction.Less = 1;\n\n/**\n * Equal\n *\n * @type {number}\n */\nStencilFunction.Equal = 2;\n\n/**\n * LessEqual\n *\n * @type {number}\n */\nStencilFunction.LessEqual = 3;\n\n/**\n * Greater\n *\n * @type {number}\n */\nStencilFunction.Greater = 4;\n\n/**\n * NotEqual\n *\n * @type {number}\n */\nStencilFunction.NotEqual = 5;\n\n/**\n * GreaterEqual\n *\n * @type {number}\n */\nStencilFunction.GreaterEqual = 6;\n\n/**\n * Always\n *\n * @type {number}\n */\nStencilFunction.Always = 7;\n\n/**\n * Stencil operations\n */\nexport class StencilOperation {}\n\n/**\n * Keep\n *\n * @type {number}\n */\nStencilOperation.Keep = 0;\n\n/**\n * Zero\n *\n * @type {number}\n */\nStencilOperation.Zero = 1;\n\n/**\n * Replace\n *\n * @type {number}\n */\nStencilOperation.Replace = 2;\n\n/**\n * Increment\n *\n * @type {number}\n */\nStencilOperation.Increment = 3;\n\n/**\n * Decrement\n *\n * @type {number}\n */\nStencilOperation.Decrement = 4;\n\n/**\n * Invert\n *\n * @type {number}\n */\nStencilOperation.Invert = 5;\n\n/**\n * IncrementWrap\n *\n * @type {number}\n */\nStencilOperation.IncrementWrap = 6;\n\n/**\n * DecrementWrap\n *\n * @type {number}\n */\nStencilOperation.DecrementWrap = 7;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/StateBlock.js\n **/","/**\n * A class to load file using Ajax\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class FileLoader\n{\n    /**\n     * Load a file\n     *\n     * @param {string} filePath Path to the file to load\n     * @param {function(boolean, string, Object=)} callback Callback\n     * @param {Object=} userData User data\n     */\n    static load(filePath, callback, userData)\n    {\n        let reader = new XMLHttpRequest();\n        reader.onreadystatechange = () =>\n        {\n            if (reader.readyState === 4 && (reader.status === 200 || reader.status === 0))\n                callback(true, reader.responseText, userData);\n        };\n        reader.open('GET', filePath, true);\n        reader.send();\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Loaders/FileLoader.js\n **/","import {ContextResource} from './ContextResource.js';\nimport {VertexFormat, VertexElement} from './VertexFormat.js';\n\n/**\n * A geometry\n *\n * @extends {ContextResource}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Geometry extends ContextResource\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        super();\n\n        /**\n         * Colors\n         *\n         * @type {Float32Array}\n         * @private\n         */\n        this.colors = null;\n\n        /**\n         * Indices\n         *\n         * @type {Uint16Array}\n         * @private\n         */\n        this.indices = null;\n\n        /**\n         * Normals\n         *\n         * @type {Float32Array}\n         * @private\n         */\n        this.normals = null;\n\n        /**\n         * Positions\n         *\n         * @type {Float32Array}\n         * @private\n         */\n        this.positions = null;\n\n        /**\n         * Uvs\n         *\n         * @type {Float32Array}\n         * @private\n         */\n        this.uvs = null;\n\n        /**\n         * Format\n         *\n         * @type {VertexFormat}\n         * @private\n         */\n        this.vertexFormat = null;\n    }\n\n    /**\n     * Set vertices colors\n     *\n     * @param {Float32Array} colors An array of float values representing colors (r, g, b, a, r, g, b, a, …)\n     */\n    setColors(colors)\n    {\n        this.colors = new Float32Array(colors);\n\n        // Indicate that an attribute of the geometry need an update.\n        if (this.vertexFormat)\n            this.vertexFormat.setStreamAsWaitingUpdate(VertexElement.Usage.Color, true);\n    }\n\n    /**\n     * Set indices\n     *\n     * @param {Uint16Array} indices An array of unsigned integer values representing indices order\n     */\n    setIndices(indices)\n    {\n        this.indices = new Uint16Array(indices);\n\n        // Indicate that indices need an update.\n        if (this.vertexFormat)\n            this.vertexFormat.setIndicesAsWaitingUpdate(true);\n    }\n\n    /**\n     * Set vertices normals\n     *\n     * @param {Float32Array} normals An array of float values representing normals (x, y, z, x, y, z, …)\n     */\n    setNormals(normals)\n    {\n        this.normals = new Float32Array(normals);\n\n        // Indicate that an attribut of the geometry need an update.\n        if (this.vertexFormat)\n            this.vertexFormat.setStreamAsWaitingUpdate(VertexElement.Usage.Normal, true);\n    }\n\n    /**\n     * Set vertices positions\n     *\n     * @param {Float32Array} positions An array of float values representing positions (x, y, z, x, y, z, …)\n     */\n    setPositions(positions)\n    {\n        this.positions = new Float32Array(positions);\n\n        // Indicate that an attribute of the geometry need an update.\n        if (this.vertexFormat)\n            this.vertexFormat.setStreamAsWaitingUpdate(VertexElement.Usage.Position, true);\n    }\n\n    /**\n     * Set texture coordinates (uvs) for each vertex\n     *\n     * @param {Float32Array} uvs An array of float values representing texture coordinates (u, v, u, v, …)\n     */\n    setTextureUVs(uvs)\n    {\n        this.uvs = new Float32Array(uvs);\n\n        // Indicate that an attribute of the geometry need an update\n        if (this.vertexFormat)\n            this.vertexFormat.setStreamAsWaitingUpdate(VertexElement.Usage.UVS, true);\n    };\n\n    /**\n     * Set geometry's format\n     *\n     * @param {VertexFormat} vertexFormat A VertexFormat instance\n     */\n    setVertexFormat(vertexFormat)\n    {\n        this.vertexFormat = vertexFormat;\n    }\n\n    /**\n     * Get format\n     *\n     * @return {VertexFormat} A VertexFormat instance\n     */\n    getVertexFormat()\n    {\n        return this.vertexFormat;\n    }\n\n    /**\n     * Return index count\n     *\n     * @return {number} Indices array's length\n     */\n    getIndexCount()\n    {\n        return this.indices.length;\n    }\n\n    /**\n     * Return the indices\n     *\n     * @return {Uint16Array} Indices array\n     */\n    getIndices()\n    {\n        return this.indices;\n    }\n\n    /**\n     * Return an array with the color for each vertex\n     *\n     * @return {Float32Array} An array with the format [r, g, b, a, r, g, b, a, …]\n     */\n   getVerticesColors()\n    {\n        return this.colors;\n    }\n\n    /**\n     * Return an array with the position for each vertex\n     *\n     * @return {Float32Array} An array with the format [x, y, z, x, y, z, …]\n     */\n    getVerticesPositions()\n    {\n        return this.positions;\n    }\n\n    /**\n     * Return an array with the normal for each vertex\n     *\n     * @return {Float32Array} An array with the format [x, y, z, x, y, z, …]\n     */\n    getVerticesNormals()\n    {\n        return this.normals;\n    }\n\n    /**\n     * Return an array with the texture coordinates for each vertex\n     *\n     * @return {Float32Array} An array with the format [u, v, u, v, …]\n     */\n    getVerticesUVs()\n    {\n        return this.uvs;\n    }\n\n    /**\n     * Create a cube\n     *\n     * @param {number} width Width\n     * @param {number} height Height\n     * @param {number} depth Depth\n     * @return {Geometry} A Geometry instance\n     */\n    static createCube(width, height, depth)\n    {\n        let geometry = new Geometry();\n\n        // Set format\n        let format = new VertexFormat();\n        format.add(new VertexElement(VertexElement.Usage.Position, 0, VertexElement.Type.Float, 3, false));\n        format.add(new VertexElement(VertexElement.Usage.Color, 2, VertexElement.Type.Float, 4, false));\n        format.add(new VertexElement(VertexElement.Usage.UVS, 1, VertexElement.Type.Float, 2, false));\n        format.add(new VertexElement(VertexElement.Usage.Normal, 3, VertexElement.Type.Float, 3, false));\n        geometry.setVertexFormat(format);\n\n        // Set positions\n        let positions = new Float32Array([\n            -width, -height,  depth,\n            width, -height,  depth,\n            width,  height,  depth,\n            -width,  height,  depth,\n\n            -width, -height, -depth,\n            -width,  height, -depth,\n            width,  height, -depth,\n            width, -height, -depth,\n\n            -width,  height, -depth,\n            -width,  height,  depth,\n            width,  height,  depth,\n            width,  height, -depth,\n\n            -width, -height, -depth,\n            width, -height, -depth,\n            width, -height,  depth,\n            -width, -height,  depth,\n\n            width, -height, -depth,\n            width,  height, -depth,\n            width,  height,  depth,\n            width, -height,  depth,\n\n            -width, -height, -depth,\n            -width, -height,  depth,\n            -width,  height,  depth,\n            -width,  height, -depth\n        ]);\n        geometry.setPositions(positions);\n\n        // Set colors\n        let colors = new Float32Array([\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1\n        ]);\n        geometry.setColors(colors);\n\n        // Texture uvs\n        let uvs = new Float32Array([\n            0, 0,\n            1, 0,\n            1, 1,\n            0, 1,\n\n            0, 0,\n            1, 0,\n            1, 1,\n            0, 1,\n\n            0, 0,\n            1, 0,\n            1, 1,\n            0, 1,\n\n            0, 0,\n            1, 0,\n            1, 1,\n            0, 1,\n\n            0, 0,\n            1, 0,\n            1, 1,\n            0, 1,\n\n            0, 0,\n            1, 0,\n            1, 1,\n            0, 1\n        ]);\n        geometry.setTextureUVs(uvs);\n\n        // Normals\n        let normals = new Float32Array([\n            0.0, 0.0, 1.0,\n            0.0, 0.0, 1.0,\n            0.0, 0.0, 1.0,\n            0.0, 0.0, 1.0,\n\n            0.0, 0.0, -1.0,\n            0.0, 0.0, -1.0,\n            0.0, 0.0, -1.0,\n            0.0, 0.0, -1.0,\n\n            0.0, 1.0, 0.0,\n            0.0, 1.0, 0.0,\n            0.0, 1.0, 0.0,\n            0.0, 1.0, 0.0,\n\n            0.0, -1.0, 0.0,\n            0.0, -1.0, 0.0,\n            0.0, -1.0, 0.0,\n            0.0, -1.0, 0.0,\n\n            1.0, 0.0, 0.0,\n            1.0, 0.0, 0.0,\n            1.0, 0.0, 0.0,\n            1.0, 0.0, 0.0,\n\n            -1.0, 0.0, 0.0,\n            -1.0, 0.0, 0.0,\n            -1.0, 0.0, 0.0,\n            -1.0, 0.0, 0.0\n        ]);\n        geometry.setNormals(normals);\n\n        // Indices.\n        let indices = new Uint16Array([     0,  1,  2,  0,  2,  3,  4,  5,  6,  4,  6,  7,\n                                            8,  9, 10,  8, 10, 11, 12, 13, 14, 12, 14, 15,\n                                            16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23 ]);\n        geometry.setIndices(indices);\n\n        return geometry;\n    }\n\n    /**\n     * Create a rectangle\n     *\n     * @param {number} width Width\n     * @param {number} height Height\n     * @return {Geometry} A Geometry instance\n     */\n    static createRectangle(width, height)\n    {\n        let geometry = new Geometry();\n\n        // Set format\n        let format = new VertexFormat();\n        format.add(new VertexElement(VertexElement.Usage.Position, 0, VertexElement.Type.Float, 3, false));\n        format.add(new VertexElement(VertexElement.Usage.Color, 1, VertexElement.Type.Float, 4, false));\n        format.add(new VertexElement(VertexElement.Usage.UVS, 2, VertexElement.Type.Float, 2, false));\n        format.add(new VertexElement(VertexElement.Usage.Normal, 3, VertexElement.Type.Float, 3, false));\n        geometry.setVertexFormat(format);\n\n        // Set positions\n        let positions = new Float32Array([\n            -width, -height,  0,\n            -width,  height,  0,\n            width, -height,  0,\n            width,  height,  0\n        ]);\n        geometry.setPositions(positions);\n\n        // Set colors\n        let colors = new Float32Array([\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1,\n            1, 1, 1, 1\n        ]);\n        geometry.setColors(colors);\n\n        // Texture uvs\n        let uvs = new Float32Array([\n            0, 1,\n            0, 0,\n            1, 1,\n            1, 0\n        ]);\n        geometry.setTextureUVs(uvs);\n\n        // Normals\n        let normals = new Float32Array([\n            0.0, 0.0, 1.0,\n            0.0, 0.0, 1.0,\n            0.0, 0.0, 1.0,\n            0.0, 0.0, 1.0,\n        ]);\n        geometry.setNormals(normals);\n\n        // Indices\n        geometry.setIndices(new Uint16Array([0, 2, 1, 3]));\n\n        return geometry;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Geometry.js\n **/","/**\n * A context resource:\n * - Indicate that the object have a refence to the graphic API.\n * - The object have a unique ID.\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class ContextResource\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n         * Unique identifier\n         *\n         * @type {number}\n         * @public\n         */\n        this.UID = ++ContextResource.globalID;\n    }\n\n    /**\n     * Get unique ID\n     *\n     * @return {number} An unsigned integer\n     */\n    getUID()\n    {\n        return this.UID;\n    }\n}\n\n/**\n* Global ID\n *\n* @type {number}\n*/\nContextResource.globalID = -1;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ContextResource.js\n **/","/**\n * Represent one of the element of a vertex.\n * It can be a position, a normal, a color, ….\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class VertexElement\n{\n    /**\n     * Constructor\n     *\n     * @param {VertexElement.Usage} usage Element usage\n     * @param {number} stream Stream index\n     * @param {VertexElement.Type} type Type of element\n     * @param {number?} count Value count, ex: A \"vec2\" will have \"2\" for this parameter\n     * @param {boolean?} normalize True to ask rendering API to normalize values\n     */\n    constructor(usage, stream, type, count = 0, normalize = false)\n    {\n        /**\n         * Value count for this element\n         *\n         * @type {number}\n         * @public\n         */\n        this.count = count\n\n        /**\n         * Indicate if the value need to be normalized by the graphic API\n         *\n         * @type {boolean}\n         * @public\n         */\n        this.normalize = normalize;\n\n        /**\n         * Offset in the vertex data\n         *\n         * @type {number}\n         * @public\n         */\n        this.offset = 0;\n\n        /**\n         * Stream index\n         *\n         * @type {number}\n         * @public\n         */\n        this.stream = stream;\n\n        /**\n         * Stream stride.\n         * @type {number}\n         * @public\n         */\n        this.stride = 0;\n\n        /**\n         * Type of value\n         *\n         * @type {VertexElement.Type}\n         * @public\n         */\n        this.type = type;\n\n        /**\n         * Type of element\n         *\n         * @type {VertexElement.Usage}\n         * @public\n         */\n        this.usage = usage;\n    }\n}\n\n/**\n * Type of stream available\n *\n * @enum {number}\n */\nVertexElement.StreamType = { Static: 0, Dynamic: 1, Stream: 2 };\n\n/**\n * VertexElement's types\n *\n * @enum {number}\n */\nVertexElement.Type = { Byte: 0, Float: 1, Int: 2, Short: 3 };\n\n/**\n * VertexElement's usage\n *\n * @enum {number}\n */\nVertexElement.Usage = { Position: 0, Color: 1, UVS: 2, Normal: 3, Tangent: 4 };\n\n/**\n * Indicate the format of a vertex\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class VertexFormat\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n         * Elements inside this format\n         *\n         * @type {Array.<VertexElement>}\n         * @private\n         */\n        this.elements = [];\n\n        /**\n         * Stream's strides\n         *\n         * @type {Array.<VertexElement.StreamType>}\n         * @private\n         */\n        this.streamType = [];\n\n        /**\n         * Stream's strides\n         *\n         * @type {Array.<number>}\n         * @private\n         */\n        this.streamStride = [];\n\n        /**\n         * Stream's state\n         *\n         * @type {Array.<boolean>}\n         * @private\n         */\n        this.streamNeedUpdate = [];\n\n        /**\n         * Indicate if the indices have changed\n         *\n         * @type {boolean}\n         * @private\n         */\n        this.indicesNeedUpdate = true;\n    }\n\n    /**\n     * Add an element to the format\n     *\n     * @param {VertexElement} element A VertexElement instance\n     */\n    add(element)\n    {\n        this.elements.push(element);\n        this.compute();\n    };\n\n    /**\n     * Set elements\n     *\n     * @param {Array.<VertexElement>} elements An array of VertexElement instance\n     */\n    set(elements)\n    {\n        this.elements = elements;\n        this.compute();\n    }\n\n    /**\n     * Get stream's type\n     *\n     * @param {number} index Stream index\n     * @param {VertexElement.StreamType} type A type\n     */\n    setStreamType(index, type)\n    {\n        this.streamType[index] = type;\n    }\n\n    /**\n     * Compute offset and vertex format's data\n     *\n     * @private\n     */\n    compute()\n    {\n        let offset          = 0;\n        let size            = 0;\n        let previousStream  = 0;\n\n        // Sort elements by stream (ascending)\n        this.elements.sort(function(a, b)\n        {\n            if (a.stream < b.stream)\n                return -1;\n            else if (a.stream > b.stream)\n                return 1;\n\n            return 0;\n        })\n\n        // Compute values\n        for (let i = 0; i < this.elements.length; i++)\n        {\n            // Reset offset and stride when we change stream\n            if (previousStream != this.elements[i].stream)\n            {\n                this.streamStride[previousStream]   = offset;\n                offset                              = 0;\n            }\n\n            switch (this.elements[i].type)\n            {\n                case VertexElement.Type.Float:\n                case VertexElement.Type.Int:\n                    size = 4;\n                    break;\n                case VertexElement.Type.Short:\n                    size = 2;\n                    break;\n                case VertexElement.Type.Byte:\n                    size = 1;\n                    break;\n                default:\n                    size = 1;\n                    break;\n            }\n\n            this.elements[i].offset  = offset;\n            size                    *= this.elements[i].count;\n            offset                  += size;\n            previousStream           = this.elements[i].stream;\n        }\n\n        this.streamStride[previousStream] = offset;\n    }\n\n    /**\n     * Indicate if the indices need an update\n     *\n     * @param {boolean} state True to ask an update\n     */\n    setIndicesAsWaitingUpdate(state)\n    {\n        this.indicesNeedUpdate = state;\n    }\n\n    /**\n     * Indicate if the stream need an update.\n     * @param {VertexElement.Usage } usage Stream usage.\n     * @param {boolean} state True to ask an update.\n     */\n    setStreamAsWaitingUpdate(usage, state)\n    {\n        for (let i = 0; i < this.elements.length; i++)\n            if (this.elements[i].usage == usage)\n                this.streamNeedUpdate[this.elements[i].stream] = state;\n    }\n\n    /**\n     * Get elements\n     *\n     * @return {Array.<VertexElement>} An array of VertexElement\n     */\n    getElements()\n    {\n        return this.elements;\n    }\n\n    /**\n     * Get stride of the asked stream\n     *\n     * @param {number} index Stream index\n     * @return {number} A stride value, 0 if the stream don't exist\n     */\n    getStreamStride(index)\n    {\n        return this.streamStride[index] || 0;\n    }\n\n    /**\n     * Get stream's type\n     *\n     * @param {number} index Stream index\n     * @return {VertexElement.StreamType} A type, default: stream\n     */\n    getStreamType(index)\n    {\n        return this.streamType[index] || VertexElement.StreamType.Stream;\n    }\n\n    /**\n     * Check if indices need an update\n     *\n     * @return {boolean} True if the indices need an update, otherwise false\n     */\n    isIndicesWaitingUpdate()\n    {\n        return this.indicesNeedUpdate;\n    }\n\n    /**\n     * Check if the asked stream need an update\n     *\n     * @param {number} index Stream index\n     * @return {boolean} True if the stream need an update, otherwise false\n     */\n    isStreamWaitingUpdate(index)\n    {\n        return this.streamNeedUpdate[index];\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/VertexFormat.js\n **/","import {Pass} from './Pass.js';\nimport {Type} from '../Types.js';\n\n/**\n * A material\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Material\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n         * Index of the technique to use\n         *\n         * @type {number}\n         * @private\n         */\n        this.activeTechnique = 0;\n\n        /**\n         * An array of passes per technique\n         * By default, we have at least one technique available\n         *\n         * @type {Array.<Array.<Pass>>}\n         * @private\n         */\n        this.techniques = [];\n\n        // Add a default technique\n        this.createTechnique();\n    }\n\n    /**\n     * Shortcut to create common materials\n     *\n     * @return {Material} A Material instance\n     */\n    static create(name) \n    {\n        let material = new Material();\n        let pass = material.createPass();\n\n        if (name == 'default')\n        {\n            pass.add(\"material.ambient\", Type.Float, [0.0, 0.0, 0.0]);\n            pass.add(\"material.diffuse\", Type.Float, [0.55, 0.55, 0.55]);\n            pass.add(\"material.specular\", Type.Float, [0.7, 0.7, 0.7]);\n            pass.add(\"material.shininess\", Type.Float, 38.4);\n        }\n\n        return material;\n    }\n\n    /**\n     * Add a pass to a technique\n     *\n     * @param {number=} techniqueIndex Targeted technique's index (default: 0)\n     * @return {Pass} A Pass instance.\n     */\n    createPass(techniqueIndex = 0)\n    {\n        let pass = new Pass();\n        this.techniques[techniqueIndex].push(pass);\n\n        return pass;\n    }\n\n    /**\n     * Create a new technique\n     *\n     * @return {number} The technique index.\n     */\n    createTechnique() \n    {\n        this.techniques.push([]);\n        return this.techniques.length - 1;\n    }\n\n    /**\n     * Set technique to use\n     *\n     * @param {number} techniqueIndex Targeted technique's index\n     */\n    setActiveTechnique(techniqueIndex) \n    {\n        this.activeTechnique = techniqueIndex;\n    }\n\n    /**\n     * Get active technique's index\n     *\n     * @return {number} A positive integer\n     */\n    getActiveTechnique() \n    {\n        return this.activeTechnique;\n    }\n\n    /**\n     * Get a pass\n     *\n     * @param {number} techniqueIndex Targeted technique's index\n     * @param {number} passIndex Pass's index\n     * @return {?Pass} A Pass instance or null if the technique or the pass don't exist\n     */\n    getPass(techniqueIndex, passIndex) \n    {\n        if (techniqueIndex >= this.techniques.length)\n            return null;\n\n        return this.techniques[techniqueIndex][passIndex] || null;\n    }\n\n    /**\n     * Get pass count\n     *\n     * @param {number} techniqueIndex Targeted technique's index\n     * @return {number} A signed integer\n     */\n    getPassCount(techniqueIndex = 0) \n    {\n        if (techniqueIndex >= this.techniques.length)\n            return 0;\n\n        return this.techniques[techniqueIndex].length;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Material/Material.js\n **/","import {StateBlock} from '../StateBlock.js';\n\n/**\n * A pass parameter\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class PassParameter\n{\n    /**\n     * Constructor\n     *\n     * @param {string} name Name to assign\n     * @param {Type} type Element's type\n     * @param {Array.<number>|number|boolean|Texture|Float32Array} value Element's value\n     */\n    constructor(name, type, value)\n    {\n        /**\n         * Name\n         *\n         * @type {string}\n         * @public\n         */\n        this.name = name;\n\n        /**\n         * Type\n         *\n         * @type {Type}\n         * @public\n         */\n        this.type = type;\n\n        /**\n         * Value\n         *\n         * @type {Array.<number>|number|boolean|Texture|Float32Array}\n         * @public\n         */\n        this.value = value;\n    }\n}\n\n/**\n * A pass\n *\n * @extends {StateBlock}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Pass extends StateBlock\n{\n    /**\n     * Constructor\n     *\n     * @param {string} name Name to assign\n     * @param {Type} type Element's type\n     * @param {Array.<number>|number|boolean|Texture|Float32Array} value Element's value\n     */\n    constructor(name, type, value)\n    {\n        super();\n\n        /**\n        * Parameters: elements to send to the GPU\n        *\n        * @type {Array.<PassParameter>}\n        * @private\n        */\n        this.parameters = [];\n    }\n\n    /**\n     * Add a parameter to the material\n     *\n     * @param {string} name Parameter's name\n     * @param {Type} type Parameter's type\n     * @param {Array.<number>|number|boolean|Texture|Float32Array} value Parameter's value\n     */\n    add(name, type, value) \n    {\n        // A value with this name already exist? We erase previous data …\n        for (let i = 0; i < this.parameters.length; i++)\n        {\n            if (this.parameters[i].name == name)\n            {\n                this.parameters[i].value = value; \n                this.parameters[i].type  = type; \n                return;\n            }\n        }\n\n        // … otherwise we create a new one\n        this.parameters.push(new PassParameter(name, type, value));\n    }\n\n    /**\n     * Set parameter's value\n     *\n     * @param {string} name Parameter's name\n     * @param {Array.<number>|number|boolean|Texture|Float32Array} value Parameter's value\n     */\n    set(name, value) \n    {\n        for (let i = 0; i < this.parameters.length; i++)\n        {\n            if (this.parameters[i].name == name)\n            {\n                this.parameters[i].value = value; \n                break;\n            }\n        }\n    }\n\n    /**\n     * Return an array with all material's parameters\n     *\n     * @return {Array.<PassParameter>} An array of PassParameter\n     */\n    getParameters() \n    {\n        return this.parameters;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Material/Pass.js\n **/","/**\n * Types available\n */\nexport class Type {}\n\n/**\n * Float\n *\n * @type {number}\n */\nType.Float = 0;\n\n/**\n * Integer\n *\n * @type {number}\n */\nType.Int = 1;\n\n/**\n * Bool\n *\n * @type {number}\n */\nType.Bool = 2;\n\n/**\n * Matrix\n *\n * @type {number}\n */\nType.Matrix  = 3;\n\n/**\n * 2D Texture\n *\n * @type {number}\n */\nType.Texture2D = 4;\n\n/**\n * 3D Texture\n *\n * @type {number}\n */\nType.TextureCube = 5;\n\n/**\n * Byte\n *\n * @type {number}\n */\nType.Byte = 6;\n\n/**\n * u_Byte\n *\n * @type {number}\n */\nType.u_Byte = 7;\n\n/**\n * Short\n *\n * @type {number}\n */\nType.Short = 8;\n\n/**\n * u_Short\n *\n * @type {number}\n */\nType.u_Short = 9;\n\n/**\n * u_Int\n * \n * @type {number}\n */\nType.u_Int = 10;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Types.js\n **/","import {Drawable} from './Drawable.js';\nimport {MeshCommand} from '../Renderers/Commands/MeshCommand.js';\n\n/**\n * A mesh\n *\n * @extends {Drawable}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Mesh extends Drawable\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        super();\n\n        /**\n         * Geometry\n         *\n         * @type {Geometry}\n         * @private\n         */\n        this.geometry = null;\n\n        /**\n         * Material\n         *\n         * @type {Material}\n         * @private\n         */\n        this.material = null;\n\n        /**\n         * Program\n         *\n         * @type {Program}\n         * @private\n         */\n        this.program = null;\n    }\n\n    /**\n     * Draw the element\n     *\n     * @param {RenderTarget} renderTarget Renderer who called this method\n     */\n    draw(renderTarget)\n    {\n        if (!this.geometry || !this.material || !this.program)\n            return;\n\n        let task            = renderTarget.getActiveTask();\n        let activeTechnique = this.material.getActiveTechnique();\n        let passCount       = this.material.getPassCount(activeTechnique);\n\n        for (let i = 0; i < passCount; i++)\n            task.addCommand(new MeshCommand(this.geometry, this.material.getPass(activeTechnique, i), this.program, this.getTransformationMatrix(), this.getNormalMatrix(), 0, this.geometry.getIndexCount()));\n    };\n\n    /**\n     * Set geometry\n     *\n     * @param {Geometry} geometry A Geometry instance\n     */\n    setGeometry(geometry)\n    {\n        this.geometry = geometry;\n    }\n\n    /**\n     * Set material\n     *\n     * @param {Material} material A Material instance\n     */\n    setMaterial(material)\n    {\n        this.material = material;\n    };\n\n    /**\n     * Set program\n     *\n     * @param {Program} program A Program instance\n     */\n    setProgram(program)\n    {\n        this.program = program;\n    }\n\n    /**\n     * Return a reference to the program use by this mesh\n     *\n     * @return {Program} A Program instance\n     */\n    getProgram()\n    {\n        return this.program;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Objects/Mesh.js\n **/","import {Node} from '../Scene/Node.js';\n\n/**\n * A drawable element\n *\n * @extends {Node}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Drawable extends Node\n{\n    /**\n     * Draw the element\n     *\n     * @param {RenderTarget} renderTarget Renderer who called this method\n     */\n    draw(renderTarget) { };\n\n    /**\n     * Visit the node and his children\n     *\n     * @param {RenderTarget} renderTarget Renderer who called this method\n     */\n    visit(renderTarget)\n    {\n        this.draw(renderTarget);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Objects/Drawable.js\n **/","import {Program} from '../../Program.js';\nimport {RenderCommand} from './RenderCommand.js';\nimport {Type} from '../../Types.js';\n\n/**\n * Draw meshes\n *\n * @extends {RenderCommand}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class MeshCommand extends RenderCommand\n{\n    /**\n     * Constructor\n     *\n     * @param {Geometry} geometry A Geometry instance\n     * @param {Pass} pass A Pass instance\n     * @param {Program} program A Program instance\n     * @param {mat4} modelMatrix A Matrix with model's transformations (scale, rotate, translate)\n     * @param {mat4} normalMatrix A Matrix with model's normals transformed\n     * @param {number} startVertex First vertex to draw\n     * @param {number} endVertex Last vertex to draw\n     */\n    constructor(geometry, pass, program, modelMatrix, normalMatrix, startVertex, endVertex)\n    {\n        super();\n\n        /**\n         * Last vertex to draw\n         *\n         * @type {number}\n         * @private\n         */\n        this.endVertex = endVertex;\n\n        /**\n         * Geometry\n         *\n         * @type {Geometry}\n         * @private\n         */\n        this.geometry = geometry;\n\n        /**\n         * Model's matrix\n         *\n         * @type {mat4}\n         * @private\n         */\n        this.modelMatrix = modelMatrix;\n\n        /**\n         * Model's normal matrix\n         *\n         * @type {mat4}\n         * @private\n         */\n        this.normalMatrix = normalMatrix;\n\n        /**\n         * Pass\n         *\n         * @type {Pass}\n         * @private\n         */\n        this.pass = pass;\n\n        /**\n         * Program\n         *\n         * @type {Program}\n         * @private\n         */\n        this.program = program;\n\n        /**\n         * First vertex to draw\n         *\n         * @type {number}\n         * @private\n         */\n        this.startVertex = startVertex;\n    }\n\n    /**\n     * Execute the command\n     *\n     * @param {RenderAPI} renderAPI RenderAPI instance used to process the commands\n     */\n    execute(renderAPI) \n    {\n        // Program\n        let programCode = renderAPI.setProgram(this.program);\n        if (programCode == -1)\n            return;\n\n        // Must send/update shared uniforms\n        if (programCode == 1)\n            renderAPI.setUniform(this.program, 'uCamera', Type.Matrix, renderAPI.getActiveCamera().getViewProjectionMatrix());\n\n        // Send uniforms.\n        renderAPI.setUniform(this.program, 'uModel', Type.Matrix, this.modelMatrix);\n        renderAPI.setUniform(this.program, 'uModelNormal', Type.Matrix, this.normalMatrix);\n\n        // State.\n        renderAPI.applyStateBlock(this.pass);\n\n        // Material.\n        let parameters = this.pass.getParameters();\n        let slot = 0;\n        for (let i = 0; i < parameters.length; i++)\n        {\n            let parameter = parameters[i];\n            switch(parameter.type)\n            {\n                case Type.Texture2D:\n                {\n                    renderAPI.setUniform(this.program, parameter.name, Type.Int, slot);\n                    renderAPI.bindTexture(slot, /** @type {TextureInterface} */ (parameter.value));\n                    slot++;\n                    break;\n                }\n                default:\n                {\n                    renderAPI.setUniform(this.program, parameter.name, parameter.type, parameter.value);\n                    break;\n                }\n            }\n        }\n\n        // Bind geometry\n        renderAPI.setGeometry(this.geometry);\n\n        // Draw object\n        renderAPI.drawIndexedPrimitives(this.pass.drawingMode, this.startVertex, this.endVertex);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/Commands/MeshCommand.js\n **/","import {ContextResource} from './ContextResource.js';\nimport {FileLoader} from './Loaders/FileLoader.js';\n\n/**\n * A program\n *\n * @extends {ContextResource}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Program extends ContextResource\n{\n    /**\n     * Constructor\n     *\n     * @constructor\n     */\n    constructor()\n    {\n        super();\n\n        /**\n         * Attributes\n         *\n         * @type {Array.<ProgramElement>}\n         * @private\n         */\n        this.attributes = [];\n\n        /**\n         * Shader sources\n         *\n         * - First index is for the vertex shader\n         * - Second index is for the fragment shader\n         *\n         * @type {Array.<string>}\n         * @private\n         */\n        this.sources = [null, null];\n\n        /**\n         * Uniforms\n         *\n         * @type {Array.<Program.Element>}\n         * @private\n         */\n        this.uniforms = [];\n    }\n\n    /**\n     * Load program from shader files\n     *\n     * @param {string} vertexFile Path to the vertex shader file\n     * @param {string} fragmentFile Path to the fragment shader file\n     */\n    loadFromFiles(vertexFile, fragmentFile)\n    {\n        // Vertex file.\n        FileLoader.load(vertexFile, (status, data) =>\n        {\n            this.sources[0] = data;\n        });\n\n        // Fragment file.\n        FileLoader.load(fragmentFile, (status, data) =>\n        {\n            this.sources[1] = data;\n        });\n    };\n\n    /**\n     * Load program from data\n     *\n     * @param {string} vertexSource Vertex shader code\n     * @param {string} fragmentSource Fragment shader code\n     */\n    loadFromData(vertexSource, fragmentSource)\n    {\n        this.sources[0] = vertexSource;\n        this.sources[1] = fragmentSource;\n    }\n\n    /**\n     * Get attributes\n     *\n     * @return {Array.<ProgramElement>} An array of attribute\n     */\n    getAttributes()\n    {\n        return this.attributes;\n    }\n\n    /**\n     * Get program's sources\n     *\n     * @return {Array.<string>} Index 0: Vertex shader, Index 1: Fragment shader\n     */\n    getSources()\n    {\n        return this.sources;\n    }\n\n    /**\n     * Get uniform\n     *\n     * @param {string} name Name of the uniform\n     * @return {?ProgramElement} A program Element or null if uniform doesn't exist\n     */\n    getUniform(name)\n    {\n        return this.uniforms[name] || null;\n    }\n\n    /**\n     * Get uniforms\n     *\n     * @return {Array.<ProgramElement>} An array of uniforms\n     */\n    getUniforms()\n    {\n        return this.uniforms;\n    }\n\n    /**\n     * Say if program is ready to be use\n     *\n     * Source array must have two elements: the fragment and the vertex shaders\n     * @return {boolean} True if program is ready, otherwise false\n     */\n    isReady()\n    {\n        return (this.sources.length === 2 && this.sources[0] !== null && this.sources[1] !== null);\n    }\n}\n\n/**\n * An element from the shader\n *\n * @constructor\n */\nexport class ProgramElement\n{\n    /**\n     * Constructor\n     *\n     * @param {number} location Location in the shader\n     * @param {string} name His name\n     * @param {Type} type Element's type (float, vec, …)\n     * @param {number} size Element's size\n     */\n    constructor(location, name, type, size)\n    {\n        /**\n         * Location in the shader\n         *\n         * @type {number}\n         * @public\n         */\n        this.location = location;\n\n        /**\n         * Name\n         *\n         * @type {string}\n         * @public\n         */\n        this.name = name;\n\n        /**\n         * Type\n         *\n         * @type {Type}\n         * @public\n         */\n        this.type = type;\n\n        /**\n         * Size/Count\n         *\n         * @type {number}\n         * @public\n         */\n        this.size = size;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Program.js\n **/","/**\n * An abstract rendering command\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class RenderCommand\n{ \n    /**\n     * Indicate if the command concern an opaque element\n     *\n     * @return {boolean} True if command must be in the opaque queue\n     */\n    isOpaque() { return true; };\n\n    /**\n     * Execute the command\n     *\n     * @param {RenderAPI} renderAPI RenderAPI instance used to process the commands\n     */\n    execute(renderAPI) { };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/Commands/RenderCommand.js\n **/","import {Drawable} from './Drawable.js';\nimport {ModelLoader} from '../Loaders/ModelLoader.js';\n\n/**\n * A model\n *\n * @extends {Drawable}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Model extends Drawable\n{\n    /**\n     * Constructor\n     *\n     * @param {string} filePath Path to the file with model's data\n     */\n    constructor(filePath = '')\n    {\n        super();\n\n        /**\n         * Meshes\n         *\n         * @type {Array.<Mesh>}\n         * @public\n         */\n        this.meshes = [];\n\n        if (filePath.length)\n            this.loadFromFile(filePath);\n    }\n\n    /**\n     * Update the node and his children\n     *\n     * @param {number} deltaTime A floating value representing time elapsed between two frames\n     * @param {boolean} parentUpdated Indicate if the parent element have been updated\n     * @return {boolean} True if the node have been updated\n     */\n    update(deltaTime, parentUpdated)\n    {\n        // Call parent method\n        let updated = super.update.call(this, deltaTime, parentUpdated);\n\n        // Update meshes.\n        for (let i = 0; i < this.meshes.length; i++)\n            this.meshes[i].computeTransformationMatrix(this.getTransformationMatrix(), updated);\n\n        return updated;\n    }\n\n    /**\n     * Draw the element\n     *\n     * @param {RenderTarget} renderTarget Renderer who called this method\n     */\n    draw(renderTarget)\n    {\n        for (let i = 0; i < this.meshes.length; i++)\n            this.meshes[i].draw(renderTarget);\n    }\n\n    /**\n     * Load model from a file\n     *\n     * @param {string} filePath Path to the file with model's data\n     */\n    loadFromFile(filePath)\n    {\n        ModelLoader.loadFromFile(filePath, this);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Objects/Model.js\n **/","import {DrawingMode} from '../StateBlock.js';\nimport {FileLoader} from './FileLoader.js';\nimport {Geometry} from '../Geometry.js';\nimport {Material} from '../Material/Material.js';\nimport {Mesh} from '../Objects/Mesh.js';\nimport {ProgramLibrary} from '../Extra/ProgramLibrary.js';\nimport {Texture} from '../Textures/Texture.js';\nimport {Type} from '../Types.js';\nimport {VertexFormat, VertexElement} from '../VertexFormat.js';\n\n/**\n * A class to load 3D models\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class ModelLoader\n{\n    /**\n     * Load a 3D model from a JSON file\n     *\n     * @see https://github.com/acgessler/assimp2json\n     * @param {string} filePath Path to the file with the 3D model\n     * @param {Model} model Model to fill with data\n     */\n    static loadFromFile(filePath, model)\n    {\n        FileLoader.load(filePath, (status, data, userData) =>\n        {\n            // Compute path to the parent folder\n            let folder = userData.filePath.replace(/[^\\/]*$/, '');\n\n            // Parse file.\n            ModelLoader.parseJSON(data, userData.model, folder);\n        }, { model: model, filePath: filePath });\n    }\n\n    /**\n     * Parse given data and fill model with it\n     *\n     * @param {string} data JSON data\n     * @param {Model} model Model to fill with data\n     * @param {string?} relativePath Relative path to the externals assets\n     * @see https://github.com/acgessler/assimp2json\n     * @private\n     */\n    static parseJSON(data, model, relativePath = '')\n    {\n        // Get JSON data\n        let obj = /** @type {{materials:Array<{properties: Array<{index: number, key:string, semantic: number, type:number, value: (Array|number)}>}>, meshes: Array<{vertices: Array, normals: Array, faces: Array, texturecoords: Array, numuvcomponents: Array, materialindex: number}>}} */(JSON.parse(data));\n\n        // Materials.\n        let materials = [];\n        let i, j, k, l;\n\n        for (i = 0; i < obj.materials.length; i++)\n        {\n            let material = new Material();\n            let pass = material.createPass();\n\n            // Default data\n            pass.drawingMode = DrawingMode.Triangles;\n\n            let properties = obj.materials[i].properties;\n            for (j = 0; j < properties.length; j++)\n            {\n                let property = properties[j];\n\n                // Colors.\n                if( property.type == 1 )\n                {\n                    if (property.key == '$mat.twosided' && property.value == 1)\n                        pass.faceCulling = FaceCulling.None;\n                    else if (property.key == '$mat.shininess')\n                        pass.add('material.shininess', Type.Float, /** @type {number} */(property.value));\n                    else if (property.key == '$clr.ambient')\n                        pass.add('material.ambient', Type.Float, [property.value[0], property.value[1], property.value[2]]);\n                    else if (property.key == '$clr.diffuse')\n                        pass.add('material.diffuse', Type.Float, [property.value[0], property.value[1], property.value[2]]);\n                    else if (property.key == '$clr.specular')\n                        pass.add('material.specular', Type.Float, [property.value[0], property.value[1], property.value[2]]);\n                    else if (property.key == '$clr.emissive')\n                        pass.add('material.emissive', Type.Float, [property.value[0], property.value[1], property.value[2]]);\n                }\n                // Textures.\n                else if (property.type == 3 && property.key != '?mat.name')\n                {\n                    let texture = new Texture();\n                    texture.loadFromFile(relativePath + property.value);\n\n                    let name = 'material.diffuseTexture';\n                    switch(property.semantic)\n                    {\n                        default:\n                        case 1:\n                            name = 'material.diffuseTexture';\n                            break;\n                        case 2:\n                            name = 'material.specularTexture';\n                            break;\n                        case 3:\n                            name = 'material.ambientTexture';\n                            break;\n                        case 4:\n                            name = 'material.emissiveTexture';\n                            break;\n                        case 5:\n                            name = 'material.heightTexture';\n                            break;\n                        case 6:\n                            name = 'material.normalsTexture';\n                            break;\n                        case 7:\n                            name = 'material.shininessTexture';\n                            break;\n                        case 8:\n                            name = 'material.opacityTexture';\n                            break;\n                        case 9:\n                            name = 'material.displacementTexture';\n                            break;\n                    }\n\n                    pass.add(name, Type.Texture2D, texture);\n                }\n            }\n\n            materials.push(material);\n        }\n\n        // Geometries\n        for (i = 0; i < obj.meshes.length; i++)\n        {\n            // Create a new mesh\n            let mesh = new Mesh();\n            model.meshes.push(mesh);\n\n            // Add data\n            let meshData = obj.meshes[i];\n\n            // Geometry\n            {\n                let geometry = new Geometry();\n\n                // Format\n                let format = new VertexFormat();\n                geometry.setVertexFormat(format);\n\n                // Positions\n                let positions = new Float32Array(meshData.vertices);\n                format.add(new VertexElement(VertexElement.Usage.Position, 0, VertexElement.Type.Float, 3, false));\n                geometry.setPositions(positions);\n\n                // Normals\n                let normals = new Float32Array(meshData.normals);\n                format.add(new VertexElement(VertexElement.Usage.Normal, 1, VertexElement.Type.Float, 3, false));\n                geometry.setNormals(normals);\n\n                // UVs\n                if (meshData.texturecoords)\n                {\n                    let uvs = new Float32Array(meshData.texturecoords[0]);\n                    format.add(new VertexElement(VertexElement.Usage.UVS, 2, VertexElement.Type.Float, meshData.numuvcomponents[0], false));\n                    geometry.setTextureUVs(uvs);\n                }\n\n                // Indices\n                let indices = new Uint16Array(meshData.faces.length * 3);\n                for (k = 0, l = 0; k < meshData.faces.length; k++, l += 3)\n                {\n                    indices[l+0] = meshData.faces[k][0];\n                    indices[l+1] = meshData.faces[k][1];\n                    indices[l+2] = meshData.faces[k][2];\n                }\n                geometry.setIndices(indices);\n\n                mesh.setGeometry(geometry);\n            }\n\n            // Material.\n            if (meshData.materialindex !== undefined && materials[meshData.materialindex])\n                mesh.setMaterial(materials[meshData.materialindex]);\n            else\n            {\n                let material = new Material();\n                let pass     = material.createPass();\n                pass.drawingMode = DrawingMode.Triangles;\n                pass.add('material.ambient', Type.Float, [0.0, 0.0, 0.0]);\n                pass.add('material.diffuse', Type.Float, [0.55, 0.55, 0.55]);\n                pass.add('material.specular', Type.Float, [0.7, 0.7, 0.7]);\n                pass.add('material.shininess', Type.Float, 38.4);\n                mesh.setMaterial(material);\n            }\n\n            // Program\n            mesh.setProgram(ProgramLibrary.get('PhongShader'));\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Loaders/ModelLoader.js\n **/","import {FileLoader} from '../Loaders/FileLoader.js';\nimport {Program} from '../Program.js';\n\n/**\n * A class to manage programs/shaders\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class ProgramLibrary \n{\n    /**\n     * Get the program with the given name\n     *\n     * @param {string} name Program's name\n     * @return {Program} A Program instance, otherwise null is the program doesn't exist\n     */\n    static get(name) \n    {\n        let program = ProgramLibrary.programs[name];\n        if (!program)\n        {\n            program = new Program();\n            ProgramLibrary.programs[name] = program;\n        }\n\n        return program;\n    }\n\n    /**\n     * Load a new program\n     *\n     * @param {string} name Program's name\n     * @param {string} vertexShaderFile Path to the vertex shader file\n     * @param {string} fragmentShaderFile Path to the fragment shader file\n     * @param {Array.<string>=} defines An array with defines data\n     * @return {?Program} A Program instance\n     */\n    static load(name, vertexShaderFile, fragmentShaderFile, defines) \n    {\n        // Get/Create program\n        let program = ProgramLibrary.get(name);\n\n        // Chunck variables\n        let chunkPatterns = /include\\[([^\\]]*)\\]/g;\n\n        // Prepare cache\n        ProgramLibrary.cache[name] = { data: null, ready: false, sources: [] };\n\n        /**\n        * Callback for chunks\n        *\n        * @param {boolean} status Load status\n        * @param {string} chunkData Chunk data\n        * @param {Object=} userData Additional data\n        */ \n        let chunkCallback = function( status, chunkData, userData )\n        {\n            // Put chunk data in cache\n            ProgramLibrary.chunks[userData].data  = chunkData;\n            ProgramLibrary.chunks[userData].ready = true;\n\n            // Try to update\n            ProgramLibrary.tryUpdateWaitingPrograms();                        \n        };\n\n        // Callback processing chunk\n        let callback = function(type, programName, data)\n        {\n            let program = ProgramLibrary.programs[name];\n            let sources = program.getSources();\n            let chunks  = data.match(chunkPatterns);\n\n            // Analyse if the file ask external chunks\n            if (chunks)\n            {\n                let missingChunkCount = chunks.length;\n\n                for (let i = 0; i < chunks.length; i++)\n                {\n                    let chunk       = chunks[i];\n                    let chunkPath   = chunk.substring(chunk.lastIndexOf('[') + 1, chunk.lastIndexOf(']'));\n\n                    if (ProgramLibrary.chunks[chunkPath] && ProgramLibrary.chunks[chunkPath].ready)\n                        missingChunkCount--;\n                    else if( !ProgramLibrary.chunks[chunkPath] )\n                    {\n                        ProgramLibrary.chunks[chunkPath] = { data: '', ready: false };\n                        FileLoader.load(ProgramLibrary.folderPath + chunkPath + '?' + new Date().getTime(), chunkCallback, chunkPath);\n                    }\n                }\n\n                // Everything is in memory? We can fill the program directly\n                let result = ProgramLibrary.replaceChunks(data);\n                if (missingChunkCount === 0)\n                    ProgramLibrary.fillProgram(sources, program, name, type, result || '');\n            }\n            else \n                ProgramLibrary.fillProgram(sources, program, name, type, data);\n        };\n\n        // Load vertex file\n        FileLoader.load(ProgramLibrary.folderPath + vertexShaderFile + '?' + new Date().getTime(), (status, data) =>\n        {\n            data = ProgramLibrary.addDefines(data, defines || []);\n            ProgramLibrary.cache[name].sources[0] = data;\n            callback(ProgramLibrary.Target.Vertex, name, data);        \n        });\n\n        // Load fragment file\n        FileLoader.load(ProgramLibrary.folderPath + fragmentShaderFile + '?' + new Date().getTime(), (status, data) =>\n        {\n            data = ProgramLibrary.addDefines(data, defines || []);\n            \n            ProgramLibrary.cache[name].sources[1] = data;\n            callback(ProgramLibrary.Target.Fragment, name, data);\n        });   \n\n        return program;\n    }\n\n    /**\n     * Shortcut to fill program with sources and clear the cache.\n     * @private\n     * @param {Array.<string>} sources Vertex and fragment sources.\n     * @param {Program} program A Program instance.\n     * @param {string} name Program's name.\n     * @param {ProgramLibrary.Target} type Type of data.\n     * @param {string} data Data to add to the program.\n     */\n    static fillProgram(sources, program, name, type, data)\n    {\n        if (type == ProgramLibrary.Target.Vertex)\n            program.loadFromData(data, sources[1]);\n        else\n            program.loadFromData(sources[0], data);\n\n        if (program.isReady())\n            delete ProgramLibrary.cache[name];\n    };\n\n    /**\n     * Update waiting programs\n     *\n     * @private\n     */\n    static tryUpdateWaitingPrograms() \n    {\n        for (let i in ProgramLibrary.programs)\n        {\n            if (!ProgramLibrary.programs[i].isReady())\n            {\n                let sources = ProgramLibrary.programs[i].getSources();\n                for (let j = 0; j < 2; j++)\n                {\n                    if (!sources[j])\n                    {\n                        let source = ProgramLibrary.replaceChunks(ProgramLibrary.cache[i].sources[j]);\n                        if (source)\n                            ProgramLibrary.fillProgram(sources, ProgramLibrary.programs[i], i, (j === 0) ? ProgramLibrary.Target.Vertex : ProgramLibrary.Target.Fragment, source);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Fill programs with chunks data\n     *\n     * @private\n     * @param {string} data Data to process\n     * @return {?string} A string if everything is ok, otherwise null\n     */\n    static replaceChunks(data) \n    {\n        let chunkPattern = /include\\[([^\\]]*)\\]/;\n        let result       = data;\n\n        while (chunkPattern.test(result))\n        {\n            let chunk       = result.match(chunkPattern);\n            let chunkName   = chunk[0].substring(chunk[0].lastIndexOf('[') + 1, chunk[0].lastIndexOf(']'));\n\n            // We need to wait all chunks to continue.\n            if (!ProgramLibrary.chunks[chunkName] || !ProgramLibrary.chunks[chunkName].ready)\n                return null;\n\n            result = result.replace(chunk[0], ProgramLibrary.chunks[chunkName].data || '');\n        }\n\n        return result;\n    }\n\n    /**\n     * Add defines to the program\n     *\n     * @private\n     * @param {string} source Source data\n     * @param {Array.<string>} defines An array with defines to add to the source parameter\n     * @return {string} The new string\n     */\n    static addDefines(source, defines) \n    {\n        if (!defines)\n            return source;\n\n        let defineString = '';\n        for (let i = 0; i < defines.length; i++)\n            defineString += '#define ' + defines[i] + '\\n'; \n\n        return defineString + source;\n    }\n}\n\n/**\n * Put data in cache due to asynchrone loading\n *\n * @type {Array.<{data: null, ready: boolean, sources: Array<string>}>}\n */\nProgramLibrary.cache = [];\n\n/**\n * Chunks in cache\n *\n * @type {Array.<{data: string, ready: boolean}>}\n */\nProgramLibrary.chunks = [];\n\n/**\n * Path to the folder with shaders\n *\n * @type {string}\n */\nProgramLibrary.folderPath = '../shaders/';\n\n/**\n * Shaders\n *\n * @type {Array.<Program>}\n */\nProgramLibrary.programs = [];\n\n/**\n * Target\n *\n * @enum {number}\n */\nProgramLibrary.Target = { Vertex: 0, Fragment: 1 };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Extra/ProgramLibrary.js\n **/","import {TextureInterface} from './TextureInterface.js';\nimport {Img as Image} from '../Image.js';\n\n/**\n * A texture\n *\n * @extends {TextureInterface}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Texture extends TextureInterface\n{\n    /**\n     * Constructor\n     *\n     * @param {string} path Path to the texture file\n     */\n    constructor(path = '')\n    {\n        super()\n\n        /**\n         * Image instance\n         *\n         * @type {Image}\n         * @private\n         */\n        this.image = null;\n\n        /**\n         * Repeat the texture\n         *\n         * @type {boolean}\n         * @private\n         */\n        this.repeat = true;\n\n        /**\n         * Smooth the texture\n         *\n         * @type {boolean}\n         * @private\n         */\n        this.smooth = true;\n\n        if (path.length)\n            this.loadFromFile(path);\n    }\n\n    /**\n     * Load texture from a file\n     *\n     * @param {string} path Path to the texture file\n     */\n    loadFromFile(path)\n    {\n        this.image = new Image();\n        this.image.loadFromFile(path);\n    }\n\n    /**\n     * Load texture from an Image\n     *\n     * @param {Image} image An Image instance\n     */\n    loadFromImage(image)\n    {\n        this.image = image;\n    }\n\n    /**\n     * Repeat the texture\n     *\n     * @param {boolean} value True to repeat, otherwise false\n     */\n    setRepeated(value)\n    {\n        this.repeat = value;\n    }\n\n    /**\n     * Smooth the texture\n     *\n     * @param {boolean} value True to smooth, otherwise false\n     */\n    setSmooth(value)\n    {\n        this.smooth = value;\n    }\n\n    /**\n     * Get image instance\n     *\n     * @return {?Image} An Image instance\n     */\n    getImage()\n    {\n        return this.image;\n    }\n\n    /**\n     * Indicate if texture is ready\n     *\n     * @return {boolean} True if the texture is ready to be use\n     */\n    isReady()\n    {\n        if (!this.image)\n            return false;\n\n        let textureSize = this.image.getSize();\n        if (textureSize[0] === 0 || textureSize[1] === 0)\n            return false;\n\n        return true;\n    }\n\n    /**\n     * Indicate if the texture is repeated\n     *\n     * @return {boolean} True if the texture is repeated\n     * @override\n     */\n    isRepeated()\n    {\n        return this.repeat;\n    }\n\n    /**\n     * Indicate if the texture is smoothed\n     *\n     * @return {boolean} True if the texture is smoothed\n     * @override\n     */\n    isSmoothed()\n    {\n        return this.smooth;\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Textures/Texture.js\n **/","import {ContextResource} from '../ContextResource.js';\n\n/**\n * A texture\n *\n * @extends {ContextResource}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class TextureInterface extends ContextResource\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        super();\n\n        /**\n         * State\n         *\n         * @type {boolean}\n         * @protected\n         */\n        this.ready = false;\n\n        /**\n         * Mipmap state\n         *\n         * @type {boolean}\n         * @protected\n         */\n        this.mipmap = true;\n    }\n\n    /**\n     * Indicate if texture is ready\n     *\n     * @return {boolean} True if the texture is ready to be use\n     */\n    isReady()\n    {\n        return this.ready;\n    }\n\n    /**\n     * Indicate if the texture use mip-mapping\n     *\n     * @return {boolean} True if the texture is mip-mapped\n     */\n    isMipmaped()\n    {\n        return this.mipmap;\n    }\n\n    /**\n     * Indicate if the texture is repeated\n     *\n     * @return {boolean} True if the texture is repeated\n     */\n    isRepeated()\n    {\n        return false;\n    }\n\n    /**\n     * Indicate if the texture is smoothed\n     *\n     * @return {boolean} True if the texture is smoothed\n     */\n    isSmoothed()\n    {\n        return false;\n    }\n\n    /**\n     * Indicate if the texture must use mip-mapping\n     *\n     * @param {boolean} value True to use mip-mapping\n     */\n    useMipmap(value)\n    {\n        this.mipmap = value;\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Textures/TextureInterface.js\n **/","/**\n * An image\n * Use a weird name due to the lack of namespace in Javascript :(\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Img\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n         * Native instance\n         *\n         * @type {Image}\n         * @private\n         */\n        this.data = new Image();\n\n        /**\n         * Height\n         *\n         * @type {number}\n         * @private\n         */\n        this.height = 0;\n\n        /**\n         * Pixels\n         *\n         * @type {Uint8Array}\n         * @private\n         */\n        this.pixels = null;\n\n        /**\n         * Status\n         *\n         * @type {Img.Status}\n         * @private\n         */\n        this.status = Img.Status.Unload;\n\n        /**\n         * Width\n         *\n         * @type {number}\n         * @private\n         */\n        this.width = 0;\n    }\n\n    /**\n     * Load image from a file\n     *\n     * @param {string} path Path to the image file\n     */\n    loadFromFile(path)\n    {\n        this.data.onload = () =>\n        {\n            this.status = Img.Status.Loaded;\n            this.width  = this.data.width;\n            this.height = this.data.height;\n            this.pixels = null;\n        };\n\n        this.data.src = path;\n    }\n\n    /**\n     * Create a new image\n     *\n     * @param {number} width Image's width\n     * @param {number} height Image's height\n     * @param {Uint8Array?} data An array with pixels (r, g, b, a)\n     */\n    create(width, height, data = null)\n    {\n        this.pixels = data ? data : new Uint8Array(width * height * 4);\n        this.data   = null;\n        this.width  = width;\n        this.height = height;\n        this.status = Img.Status.Loaded;\n    }\n\n    /**\n     * Get image's dimensions\n     *\n     * @return {Array.<number>} Image's width and height in pixel\n     */\n    getSize()\n    {\n        return [this.width, this.height];\n    }\n\n    /**\n     * Get Image's data\n     *\n     * @return {Image|Uint8Array} A native Image object or an array depending method use to load the image\n     */\n    getData()\n    {\n        return this.data || this.pixels;\n    }\n\n    /**\n     * Indicate if the image is ready to be use\n     *\n     * @return {boolean} True if image is ready, otherwise false\n     */\n    isReady()\n    {\n        return (this.status == Img.Status.Loaded);\n    }\n}\n\n/**\n * Status\n *\n * @enum {number}\n */\nImg.Status = { Unload: 0, Loading: 1, Loaded: 2 };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Image.js\n **/","import {Light} from './Light.js';\n\n/**\n * A point light\n *\n * @extends {Light}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class PointLight extends Light\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        super();\n\n        /**\n         * Constant value\n         *\n         * @type {number}\n         * @private\n         */\n        this.constant = 1.0;\n\n        /**\n         * Lieanr value\n         *\n         * @type {number}\n         * @private\n         */\n        this.linear = 0.09;\n\n        /**\n         * Quadratic value\n         *\n         * @type {number}\n         * @private\n         */\n        this.quadratic = 0.032;\n    }\n\n    /**\n     * Set point light's values\n     *\n     * @param {number} constant The constant value\n     * @param {number} linear The linear value\n     * @param {number} quadratic The quadratic value\n     */\n    setValues(constant, linear, quadratic) \n    {\n        this.constant   = constant;\n        this.linear     = linear;\n        this.quadratic  = quadratic;\n    }\n\n    /**\n     * Get values\n     *\n     * @return {Array.<number>} An array with constant, linear and quadratic values\n     */\n    getValues() \n    {\n        return [this.constant, this.linear, this.quadratic];\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Lights/PointLight.js\n **/","import {Color} from '../Color.js';\nimport {RenderTexture} from '../Renderers/RenderTexture.js';\nimport {Sprite} from '../Objects/Sprite.js';\nimport {SpriteCommand} from '../Renderers/Commands/SpriteCommand.js';\nimport {WebGL} from '../Renderers/WebGL/RenderWebGL.js';\n\n/**\n * A class to create post-effects\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class PostEffect\n{\n    /**\n     * Constructor\n     *\n     * @param {Program} program A Program instance.\n     */\n    constructor(program)\n    {\n        /**\n        * The render API to use\n        *\n        * @type {RenderAPI}\n        * @protected\n        */\n        this.renderApi = WebGL.getInstance();\n\n        /**\n        * Textures where we will apply effects\n        *\n        * @type {RenderTexture}\n        * @private\n        */\n        this.renderTexture = null;\n\n        /**\n        * Full screen sprite with the resulting effects\n        *\n        * @type {Sprite}\n        * @private\n        */\n        this.sprite = new Sprite();\n        this.sprite.setCustomProgram(program);\n    }\n\n    /**\n     * Init the post effect composer\n     *\n     * @param {number} width Resulting effect width\n     * @param {number} height Resulting effect height\n     * @param {boolean=} useDepthBuffer True to use depth buffer (useful in 3D)\n     * @param {boolean=} userStencilBuffer True to use stencil buffer\n     */\n    init(width, height, useDepthBuffer = true, userStencilBuffer = false) \n    {\n        // Init texture\n        this.renderTexture = new RenderTexture(width, height, 1, useDepthBuffer, userStencilBuffer);\n\n        // Link resulting texture to the sprite\n        this.sprite.setSize(1, 1);\n        this.sprite.setTexture(this.renderTexture.getTextures()[0]);\n        this.sprite.setTextureRect(0, 0, width, height);\n    }\n\n    /**\n     * Begin\n     *\n     * @param {Color=} color A Color instance\n     */\n    begin(color = new Color(30, 30, 30)) \n    {\n        if (!this.renderTexture)\n            return;\n\n        this.renderTexture.clear(color);\n    }\n\n    /**\n     * End\n     */\n    end() \n    {\n        if (!this.renderTexture)\n            return;\n\n        // Display result\n        this.renderTexture.display();\n\n        // Draw the full screen quad\n        SpriteCommand.draw(this.renderApi, this.sprite);\n    };\n\n    /**\n     * Render the given scene\n     *\n     * @param {Scene} scene A Scene instance\n     * @param {Camera} camera A Camera instance\n     */\n    render(scene, camera) \n    {\n        this.renderTexture.render(scene, camera);\n    }\n\n    /**\n     * Set program to use\n     *\n     * @param {Program} program A Program instance\n     */\n    setProgram(program) \n    {\n        this.sprite.setCustomProgram(program);\n    }\n\n    /**\n     * Set value of an element from the program\n     *\n     * @param {string} name Element's name in the shader\n     * @param {Type} type Type of value to send\n     * @param {Array.<number>|number|boolean|Texture|Float32Array} value A value\n     */\n    setEffectValue(name, type, value, groupCount) \n    { \n        this.renderApi.setUniform(this.sprite.getCustomProgram(), name, type, value, groupCount);\n    }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Extra/PostEffect.js\n **/","import {Img as Image} from '../Image.js';\nimport {RenderTarget} from './RenderTarget.js';\nimport {Texture} from '../Textures/Texture.js';\nimport {WebGL} from './WebGL/RenderWebGL.js';\n\n/**\n * A rendering texture: Supported by WebGL only.\n *\n * @extends {RenderTarget}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class RenderTexture extends RenderTarget\n{\n    /**\n     * Constructor\n     *\n     * @param {number} width Texture's width\n     * @param {number} height Texture's height\n     * @param {number} textureCount Texture count\n     * @param {boolean=} useDepthBuffer True to use a depth buffer\n     * @param {boolean=} useStencilBuffer True to use a stencil buffer\n     */\n    constructor(width, height, textureCount, useDepthBuffer = true, useStencilBuffer = false)\n    {\n        super();\n\n        /**\n        * The render API to use\n        *\n        * @type {RenderAPI}\n        * @protected\n        */\n        this.renderApi = WebGL.getInstance();\n\n        /**\n        * Frame buffer identifier\n        *\n        * @type {number}\n        * @private\n        */\n        this.framebuffer = this.renderApi.createFrameBuffer();\n\n        /**\n        * An array with the textures to draw in\n        *\n        * @type {Array.<Texture>}\n        * @private\n        */\n        this.textures = [];\n\n        // Init the render texture\n        this.init(width, height, textureCount, useDepthBuffer, useStencilBuffer);\n    }\n\n    /**\n     * Init\n     *\n     * @param {number} width Texture's width\n     * @param {number} height Texture's height\n     * @param {number} textureCount Texture count\n     * @param {boolean=} useDepthBuffer True to use a depth buffer\n     * @param {boolean=} useStencilBuffer True to use a depth buffer\n     * @private\n     */\n    init( width, height, textureCount, useDepthBuffer = true, useStencilBuffer = false) \n    {\n        // Create textures.\n        for (let i = 0; i < textureCount; i++)\n        {\n            let image = new Image();\n            image.create(width, height, null);\n\n            let texture = new Texture();\n            texture.setRepeated(false);\n            texture.setSmooth(true);\n            texture.useMipmap(false);\n            texture.loadFromImage(image);\n            this.textures.push(texture);\n        }\n\n        // Attach the texture to the frame buffer\n        this.renderApi.initFrameBuffer(this.framebuffer, this.textures, useDepthBuffer, useStencilBuffer);\n    }\n\n    /**\n     * Clear the texture\n     *\n     * @param {Color} color A Color instance\n     */\n    clear(color) \n    {\n        // Remove previous tasks.\n        this.removeTasks();\n\n        // Bind frame buffer.\n        this.begin();\n\n        // Clear screen.\n        this.renderApi.clear(color);\n    }\n\n    /**\n     * Begin rendering to texture\n     */\n    begin() \n    {\n        this.renderApi.bindFrameBuffer(this.framebuffer);    \n    }\n\n    /**\n     * Display\n     */\n    display() \n    {\n        super.display();\n\n        // Go back to the default buffer\n        this.renderApi.bindFrameBuffer(-1);\n    }\n\n    /**\n     * Output Textures\n     *\n     * @return {Array.<Texture>} An array of Texture\n     */\n    getTextures() \n    {\n        return this.textures;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/RenderTexture.js\n **/","import {Context} from '../Context.js';\nimport {RenderTask} from './RenderTask.js';\n\n/**\n * A rendering target\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class RenderTarget\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {   \n        /**\n        * A reference to the active task\n        *\n        * @type {null|RenderTask} \n        * @protected\n        */\n        this.activeTask = null;\n\n        /**\n        * Context instance\n        *\n        * @type {Context} \n        * @protected\n        */\n        this.context = new Context();\n\n        /**\n        * Tasks to execute\n        *\n        * @type {Array.<RenderTask>} \n        * @protected\n        */\n        this.tasks = [];\n\n        /**\n        * The render API to use\n        *\n        * @type {RenderAPI}\n        * @protected\n        */\n        this.renderApi = null;\n    }\n\n    /**\n     * Clear the rendering target\n     *\n     * @param {Color} color A Color instance\n     */\n    clear(color) { };\n\n    /**\n     * Display\n     */\n    display() \n    {\n        for (let i = 0; i < this.tasks.length; i++)\n            this.tasks[i].execute(this.renderApi);\n    }\n\n    /**\n     * Create a new task\n     *\n     * @return {number} RenderTask's index\n     */\n    createTask() \n    { \n        this.tasks.push(new RenderTask());\n        return (this.tasks.length - 1);\n    }\n\n    /**\n     * Render the given scene\n     *\n     * @param {Scene} scene A Scene instance\n     * @param {Camera} camera A Camera instance\n     */\n    render(scene, camera) \n    {\n        // Clear render API cache\n        this.renderApi.clearCache();\n\n        // Set default camera\n        this.renderApi.setActiveCamera(camera);\n\n        // Ensure at least one task is alive\n        if (!this.getActiveTask())\n            this.setActiveTask(this.createTask());\n\n        // Manage the scene\n        scene.visit(this);\n    }\n\n    /**\n     * Set the task with the given index active\n     *\n     * @param {number} index An integer representing task's index\n     */\n    setActiveTask(index) \n    {\n        if (index >= 0 && index < this.tasks.length)\n            this.activeTask = this.tasks[index];\n    }\n\n    /**\n     * Get the active task\n     *\n     * @return {?RenderTask} A RenderTask or null\n     */\n    getActiveTask() \n    {\n        return this.activeTask;\n    }\n\n    /**\n     * Remove all the tasks in memory\n     */\n    removeTasks() \n    {\n        this.tasks.length = 0;\n        this.activeTask = null;\n    }\n\n    /**\n     * Get the render API\n     *\n     * @return {RenderAPI} A Render API instance\n     */\n    getRenderAPI() \n    {\n        return this.renderApi;\n    }\n\n    /**\n     * Get size\n     *\n     * @return {Array.<number>} A array with size on x and y\n     */\n    getSize() \n    {\n        return this.context.getSize();\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/RenderTarget.js\n **/","/**\n * A context\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Context\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n         * The DOM element\n         *\n         * @type {Element}\n         */\n        this.domElement = null;\n\n        /**\n         * Context instance\n         *\n         * @type {WebGLRenderingContext|Object}\n         * @public\n         */\n        this.instance = null;\n    }\n\n    /**\n     * Shortcut to the active context's instance\n     *\n     * @enum {Object}\n     */\n    static getActive()\n    {\n        return Context.current.instance;\n    }\n\n    /**\n     * Init\n     *\n     * @param {Context.Type} type Type of context\n     * @param {{antialiasing: boolean, width: (number|undefined), height: (number|undefined)}} options Options\n     * @param {string} targetID Targeted DOM element\n     */\n    init(type, options, targetID)\n    {\n        // Get DOM element.\n        let target = document.getElementById(targetID);\n        if (!target)\n            throw '404 - Canvas with the name ' + targetID + ' not found.';\n\n        // Init webgl context.\n        if (type == Context.Type.WebGL)\n        {\n            // Create canvas.\n            this.domElement         = document.createElement('canvas');\n            this.domElement.width   = target.offsetWidth;\n            this.domElement.height  = target.offsetHeight;\n            target.appendChild(this.domElement);\n\n            // Init WebGL.\n            this.instance                   = this.domElement.getContext('webgl', { antialias: options.antialiasing || true });\n            this.instance.viewportWidth     = this.domElement.width;\n            this.instance.viewportHeight    = this.domElement.height;\n        }\n\n        // Set as active context.\n        if (!Context.current)\n            Context.current = this;\n    }\n\n    /**\n     * Resize context\n     *\n     * @param {number} width Width to assign in pixel\n     * @param {number} height Height to assign in pixel\n     */\n    resize(width, height)\n    {\n        if (!this.domElement || !this.instance)\n            return;\n\n        // DOM\n        this.domElement.width = width;\n        this.domElement.height = height;\n\n        // WebGL\n        this.instance.viewportWidth = width;\n        this.instance.viewportHeight = height;\n    }\n\n    /**\n     * Activate the context\n     *\n     * The context become the one used by the renderer\n     */\n    activate()\n    {\n        Context.current = this;\n    }\n\n    /**\n     * Get size\n     *\n     * @return {Array.<number>} A array with size on x and y\n     */\n    getSize()\n    {\n        return [this.domElement.width, this.domElement.height];\n    }\n}\n\n/**\n * Type of context\n *\n * @enum {number}\n */\nContext.Type = { WebGL: 0 };\n\n/**\n * Active context\n *\n * @type {Context}\n */\nContext.current = null;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Context.js\n **/","/**\n * A rendering task\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class RenderTask\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n        * Queue with opaques commands to process\n        *\n        * @type {Array.<Array.<RenderCommand>>}\n        * @private\n        */\n        this.opaqueQueue = [];\n\n        /**\n        * Queue with transparents commands to process\n        *\n        * @type {Array.<Array.<RenderCommand>>}\n        * @private\n        */\n        this.transparentQueue = [];\n    }\n\n    /**\n     * Add a command to the task\n     *\n     * @param {RenderCommand} command A RenderCommand instance\n     * @param {number=} queue ID of the queue\n     */\n    addCommand(command, queue = 0) \n    {\n        if (command.isOpaque())\n        {\n            this.opaqueQueue[queue] = this.opaqueQueue[queue] || [];\n            this.opaqueQueue[queue].push(command);\n        }\n        else\n        {\n            this.transparentQueue[queue] = this.transparentQueue[queue] || [];\n            this.transparentQueue[queue].push(command);\n        }\n    }\n\n    /**\n     * Execute the task\n     *\n     * @param {RenderAPI} renderAPI RenderAPI instance used to process the commands\n     */\n    execute(renderAPI) \n    { \n        let i = 0, j = 0;\n\n        // First we execute opaque commands\n        for (i = 0; i < this.opaqueQueue.length; i++)\n        {\n            for (j = 0; j < this.opaqueQueue[i].length; j++)\n                this.opaqueQueue[i][j].execute(renderAPI);\n        }\n\n        // Secondly, we execute non-opaque ones\n        for (i = 0; i < this.transparentQueue.length; i++)\n        {\n            for (j = 0; j < this.transparentQueue[i].length; j++)\n                this.transparentQueue[i][j].execute(renderAPI);\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/RenderTask.js\n **/","import {Cache} from './Cache.js';\nimport {Context} from '../../Context.js';\nimport {DirectionalLight} from '../../Lights/DirectionalLight.js';\nimport {Instances, BufferData} from './Instances.js';\nimport {PointLight} from '../../Lights/PointLight.js';\nimport {Program, ProgramElement} from '../../Program.js';\nimport {RenderAPI} from '../RenderAPI.js';\nimport {StateBlock, DrawingMode} from '../../StateBlock.js';\nimport {TextureCube} from '../../Textures/TextureCube.js';\nimport {TextureVideo} from '../../Textures/TextureVideo.js';\nimport {Type} from '../../Types.js';\nimport {VertexElement} from '../../VertexFormat.js';\nimport * as WebGLConst from './WebGL.js';\n\n// Unique instance\nlet instance = null;\n\n/**\n * WebGL renderer\n *\n * @extends {RenderAPI}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class WebGL extends RenderAPI\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        super();\n\n        // Singleton\n        if (!instance)\n            instance = this;\n\n        /**\n         * Cache\n         *\n         * @type {WebGL.Cache}\n         * @private\n         */\n        this.cache = new Cache();\n\n        /**\n         * Array with enabled attribut\n         *\n         * @type {Array.<boolean>}\n         * @private\n         */\n        this.enabledVertexAttribArray = [];\n\n        /**\n         * WebGL instances\n         *\n         * @type {Instances}\n         * @private\n         */\n        this.instances = new Instances();\n\n        /**\n         * Active states\n         *\n         * @type {StateBlock}\n         * @private\n         */\n        this.state = new StateBlock();\n\n        // Init state block\n        this.initStateBlockWithDefaultValues(this.state);\n\n        return instance;\n    }\n\n    /**\n     * Get unique instance\n     */\n    static getInstance()\n    {\n        if (!instance)\n            instance = new WebGL();\n\n        return instance;\n    }\n\n    /**\n     * Bind light\n     *\n     * @param {Light} light A Light instance\n     */\n    bindLight(light) \n    { \n        this.cache.lights.push(light);\n    }\n\n    /**\n     * Bind the given framebuffer\n     *\n     * @param {number} framebufferID An identifier, -1 to bind default the frame buffer\n     */\n    bindFrameBuffer(framebufferID) \n    {\n        let gl = Context.getActive();\n\n        if (framebufferID == -1)\n            gl.bindFramebuffer(WebGLConst.FRAMEBUFFER, null);\n        else \n        {\n            let webGLBuffer = this.instances.frameBuffers[framebufferID];\n            if (!webGLBuffer)\n                return;\n\n            gl.bindFramebuffer(WebGLConst.FRAMEBUFFER, webGLBuffer);\n        }\n    }\n\n    /**\n     * Bind texture to the the given slot\n     *\n     * @param {number} slot Targeted slot's index\n     * @param {Private.TextureInterface} texture A Texture instance\n     */\n    bindTexture(slot, texture) \n    {\n        if (!texture.isReady())\n            return;\n\n        let isTextureVideo  = (texture instanceof TextureVideo);\n        let needUpdate      = false;\n\n        // Retrieve context\n        let gl = Context.getActive();\n\n        // Create WebGL instance\n        let webGLTexture = this.instances.textures[texture.getUID()];\n        if (!webGLTexture)\n        {\n            webGLTexture = gl.createTexture();\n            this.instances.textures[texture.getUID()] = webGLTexture;\n            needUpdate = true;\n        }\n\n        // Bind it!\n        if (this.cache.texture != texture)\n        {\n            gl.activeTexture(WebGLConst.TEXTURE0 + slot);\n            gl.bindTexture(WebGLConst.TEXTURE_2D, webGLTexture);\n        }\n\n        // Need to update the texture?\n        if (needUpdate)\n        {\n            let imageSize = [0, 0];\n        \n            gl.pixelStorei(WebGLConst.UNPACK_FLIP_Y_WEBGL, true);\n\n            // Upload to the GPU\n            if (isTextureVideo)\n                gl.texImage2D(WebGLConst.TEXTURE_2D, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, texture.getVideoData());\n            else\n            {\n                // WebGL support image loading from HTMLImage instance and from array of pixels\n                let image   = texture.getImage();\n                let data    = image.getData();\n                imageSize   = image.getSize();\n\n                if (data instanceof Image)\n                    gl.texImage2D(WebGLConst.TEXTURE_2D, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, data);\n                else\n                    gl.texImage2D(WebGLConst.TEXTURE_2D, 0, WebGLConst.RGBA, imageSize[0], imageSize[1], 0, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, data);\n            }\n\n            let isPOT = ((imageSize[0] & (imageSize[0] - 1)) === 0) && ((imageSize[1] & (imageSize[1] - 1)) === 0);\n\n            // Apply filters.\n            gl.texParameteri(WebGLConst.TEXTURE_2D, WebGLConst.TEXTURE_WRAP_S, (texture.isRepeated() ? WebGLConst.REPEAT : WebGLConst.CLAMP_TO_EDGE) );\n            gl.texParameteri(WebGLConst.TEXTURE_2D, WebGLConst.TEXTURE_WRAP_T, (texture.isRepeated() ? WebGLConst.REPEAT : WebGLConst.CLAMP_TO_EDGE) );\n\n            gl.texParameteri(WebGLConst.TEXTURE_2D, WebGLConst.TEXTURE_MAG_FILTER, (texture.isSmoothed() ? WebGLConst.LINEAR : WebGLConst.NEAREST));\n\n            let min_filter = (isPOT && texture.isMipmaped()) ? WebGLConst.LINEAR_MIPMAP_NEAREST : WebGLConst.LINEAR;\n            gl.texParameteri(WebGLConst.TEXTURE_2D, WebGLConst.TEXTURE_MIN_FILTER, (texture.isSmoothed() ? min_filter : WebGLConst.NEAREST));\n\n            if (!isTextureVideo && isPOT && texture.isMipmaped())\n                gl.generateMipmap(WebGLConst.TEXTURE_2D);\n        }\n        // Video need to be updated continuously\n        else if (isTextureVideo)\n            gl.texImage2D(WebGLConst.TEXTURE_2D, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, texture.getVideoData());\n\n        this.cache.texture = texture;\n    }\n\n    /**\n     * Bind texture cube to the the given slot\n     *\n     * @param {number} slot Targeted slot's index\n     * @param {TextureCube} texture A TextureCube instance\n     */\n    bindTextureCube(slot, texture) \n    {\n        // Cache\n        if (!texture.isReady())\n            return;\n\n        // Retrieve context\n        let gl = Context.getActive();\n\n        // Create geometry's data\n        let needUpdate = false;\n        let webGLTexture = this.instances.textures[texture.getUID()];\n        if (!webGLTexture)\n        {\n            webGLTexture = gl.createTexture();\n            this.instances.textures[texture.getUID()] = webGLTexture;\n            needUpdate = true;\n        }\n\n        if (this.cache.texture != texture)\n        {\n            gl.activeTexture(WebGLConst.TEXTURE0 + slot);\n            gl.bindTexture(WebGLConst.TEXTURE_CUBE_MAP, webGLTexture);\n        }\n\n        // Need to update the texture?\n        if (needUpdate)\n        {\n            let images = texture.getImages();\n\n            // Upload to the GPU\n            gl.texImage2D(WebGLConst.TEXTURE_CUBE_MAP_POSITIVE_X, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, images[TextureCube.Face.Left].getData());\n            gl.texImage2D(WebGLConst.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, images[TextureCube.Face.Right].getData());\n            gl.texImage2D(WebGLConst.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, images[TextureCube.Face.Up].getData());\n            gl.texImage2D(WebGLConst.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, images[TextureCube.Face.Down].getData());\n            gl.texImage2D(WebGLConst.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, images[TextureCube.Face.Front].getData());\n            gl.texImage2D(WebGLConst.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, WebGLConst.RGBA, WebGLConst.RGBA, WebGLConst.UNSIGNED_BYTE, images[TextureCube.Face.Back].getData());\n\n            // Apply filters\n            gl.texParameteri(WebGLConst.TEXTURE_CUBE_MAP, WebGLConst.TEXTURE_MAG_FILTER, WebGLConst.NEAREST);\n            gl.texParameteri(WebGLConst.TEXTURE_CUBE_MAP, WebGLConst.TEXTURE_MIN_FILTER, WebGLConst.NEAREST);\n        }\n\n        this.cache.texture = texture;\n    }\n\n    /**\n     * Clear the rendering target\n     *\n     * @param {Color} color A Color instance\n     */\n    clear(color) \n    {\n        // Apply color.\n        if (!color.isEqual(this.cache.clearColor))\n        {\n            Context.getActive().clearColor(color.r, color.g, color.b, color.a); \n            this.cache.clearColor = color;\n        }\n\n        // Clear buffers\n        Context.getActive().clear(WebGLConst.COLOR_BUFFER_BIT | WebGLConst.DEPTH_BUFFER_BIT | WebGLConst.DEPTH_BUFFER_BIT);\n    }\n\n    /**\n     * Clear cache.\n     */\n    clearCache() \n    {\n        this.cache.program = null;\n        this.cache.lights.length = 0;\n    }\n\n    /**\n     * Create a new frame buffer\n     *\n     * @return {number} An identifier to work with it later\n     */\n    createFrameBuffer() \n    { \n        let identifier  = this.instances.frameBuffers.length;\n\n        let frameBuffer = Context.getActive().createFramebuffer();\n        this.instances.frameBuffers.push(frameBuffer);\n\n        return identifier;\n    }\n\n    /**\n    * Draw indexed primitives\n    *\n    * @param {DrawingMode} drawingMode Drawing mode to use\n    * @param {number} firstVertexIndex Index of the first vertex to draw, useful to draw some parts\n    * @param {number} vertexCount Vertex count to draw\n    */\n    drawIndexedPrimitives(drawingMode, firstVertexIndex, vertexCount) \n    {\n        Context.getActive().drawElements(this.convertDrawingModeToConstant(drawingMode), vertexCount, WebGLConst.UNSIGNED_SHORT, firstVertexIndex);\n        this.disableVertexAttribArray();\n    }\n\n    /**\n    * Draw primitives\n    *\n    * @param {DrawingMode} drawingMode Drawing mode to use\n    * @param {number} firstVertexIndex Index of the first vertex to draw, useful to draw some parts\n    * @param {number} vertexCount Vertex count to draw\n    */\n    drawPrimitives(drawingMode, firstVertexIndex, vertexCount) \n    {\n        Context.getActive().drawArrays(this.convertDrawingModeToConstant(drawingMode), firstVertexIndex, vertexCount);\n        this.disableVertexAttribArray();\n    }\n\n    /**\n    * Disable enabled vertex attributs array\n    *\n    * @private\n    */\n    disableVertexAttribArray() \n    {\n        // Retrieve context.\n        let gl = Context.getActive();\n\n        // Disable attributs\n        for (let i in this.enabledVertexAttribArray)\n            gl.disableVertexAttribArray(i);\n    }\n\n    /**\n     * Init frame buffer: attach it to textures, depth buffer and/or a stencil buffer\n     *\n     * @param {number} framebufferID Targeted slot's index\n     * @param {Array.<Texture>} textures An array of Texture instances\n     * @param {boolean=} useDepthBuffer True to use a depth buffer\n     * @param {boolean=} useStencilBuffer True to use a stencil buffer\n     */\n    initFrameBuffer(framebufferID, textures, useDepthBuffer = true, useStencilBuffer = false)\n    {\n        // Ensure FBO is ready\n        let webGLBuffer = this.instances.frameBuffers[framebufferID];\n        if (!webGLBuffer)\n            return;\n\n        // Retrieve context\n        let gl   = Context.getActive();\n        let size = [0, 0]; // We will retrieve FBO's size from his textures\n\n        // Bind frame buffer\n        this.bindFrameBuffer(framebufferID);\n\n        // Attach textures.\n        for (let i = 0; i < textures.length; i++)\n        {\n            // Force texture creation\n            this.bindTexture(i, textures[i]);\n\n            // Retrieve size\n            size = textures[i].getImage().getSize();\n\n            // Attach texture\n            let webGLTexture = this.instances.textures[textures[i].getUID()];\n\n            // Multiple attachements are not supported by WebGL\n            gl.framebufferTexture2D(WebGLConst.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, WebGLConst.TEXTURE_2D, webGLTexture, 0);\n        }\n\n        // Attach depth and/or stencil buffers.\n        if (useDepthBuffer || useStencilBuffer)\n        {\n            let renderBuffer = gl.createRenderbuffer();\n            gl.bindRenderbuffer(WebGLConst.RENDERBUFFER, renderBuffer);\n\n            if (!useStencilBuffer)\n            {\n                gl.renderbufferStorage(WebGLConst.RENDERBUFFER, WebGLConst.DEPTH_COMPONENT16, size[0], size[1]);\n                gl.framebufferRenderbuffer(WebGLConst.FRAMEBUFFER, WebGLConst.DEPTH_ATTACHMENT, WebGLConst.RENDERBUFFER, renderBuffer);                \n            }\n            else \n            {\n                gl.renderbufferStorage(WebGLConst.RENDERBUFFER, WebGLConst.DEPTH_STENCIL, size[0], size[1]);\n                gl.framebufferRenderbuffer(WebGLConst.FRAMEBUFFER, WebGLConst.DEPTH_STENCIL_ATTACHMENT, WebGLConst.RENDERBUFFER, renderBuffer);\n            }\n\n            gl.bindRenderbuffer(WebGLConst.RENDERBUFFER, null);\n        }\n\n        // Unbind FBO safely\n        this.bindFrameBuffer(-1);\n    }\n\n    /**\n    * Set default values on the state block instance\n    *\n    * @private\n    */\n    initStateBlockWithDefaultValues(stateBlock) \n    {\n        this.state.depthTest    = false;\n        this.state.depthWrite   = false;\n        this.state.stencilTest  = false;\n    }\n\n    /**\n     * Send lights to the given program\n     *\n     * @param {Program} program A Program instance\n     * @private\n     */\n    sendLights(program) \n    {\n        let webGLProgram = this.instances.programs[program.getUID()];\n        if (!webGLProgram)\n            return;\n\n        let lightCount = this.cache.lights.length;\n\n        // Fill arrays.\n        let light           = this.cache.lights[0];\n        let needData        = false;\n        let needDirection   = false;\n        for (let i = 0, j = 0; i < this.cache.lights.length; i++, j += 3)\n        {\n            light = this.cache.lights[i];\n\n            // Type of light\n            if (light instanceof PointLight) \n                this.cache.lightsType[i]            = 0;\n            else if (light instanceof DirectionalLight) \n                this.cache.lightsType[i]            = 1;\n            else\n                this.cache.lightsType[i]            = 2;\n\n            // Ambient\n            let ambient                             = light.getAmbientColor();\n            this.cache.lightsAmbient[j]             = ambient.r;\n            this.cache.lightsAmbient[j+1]           = ambient.g;\n            this.cache.lightsAmbient[j+2]           = ambient.b;\n\n            // Data (linear, quadratic and constant data)\n            if (this.cache.lightsType[i] != 1)\n            {\n                let values                          = light.getValues();\n                this.cache.lightsData[j]            = values[0];\n                this.cache.lightsData[j+1]          = values[1];\n                this.cache.lightsData[j+2]          = values[2];\n                needData                            = true;\n            }\n            else\n            {            \n                this.cache.lightsData[j]            = 0;\n                this.cache.lightsData[j+1]          = 0;\n                this.cache.lightsData[j+2]          = 0;   \n            }\n\n            // Diffuse.\n            let diffuse                             = light.getDiffuseColor();\n            this.cache.lightsDiffuse[j]             = diffuse.r;\n            this.cache.lightsDiffuse[j+1]           = diffuse.g;\n            this.cache.lightsDiffuse[j+2]           = diffuse.b;\n\n            // Direction.\n            if (this.cache.lightsType[i] !== 0)\n            {\n                let direction                       = light.getDirection();\n                this.cache.lightsDirection[j]       = direction[0];\n                this.cache.lightsDirection[j+1]     = direction[1];\n                this.cache.lightsDirection[j+2]     = direction[2];\n                needDirection                       = true;\n            }\n            else \n            {\n                this.cache.lightsDirection[j]       = 0;\n                this.cache.lightsDirection[j+1]     = 0;\n                this.cache.lightsDirection[j+2]     = 0;            \n            }\n\n            let position                            = light.getPosition();\n            this.cache.lightsPosition[j]            = position[0];\n            this.cache.lightsPosition[j+1]          = position[1];\n            this.cache.lightsPosition[j+2]          = position[2];\n\n            // Specular.\n            let specular                            = light.getSpecularColor();\n            this.cache.lightsSpecular[j]            = specular.r;\n            this.cache.lightsSpecular[j+1]          = specular.g;\n            this.cache.lightsSpecular[j+2]          = specular.b;\n        }\n\n        // Send data.\n        if (this.cache.lights.length)\n        {        \n            this.setUniform(program, 'uCameraPosition', Type.Float, this.activeCamera.getPosition());\n            this.setUniform(program, 'lights.count', Type.Int, lightCount);\n            this.setUniform(program, 'lights.ambient', Type.Float, this.cache.lightsAmbient, 3);\n\n            if (needData)\n                this.setUniform(program, 'lights.data', Type.Float, this.cache.lightsData, 3);\n\n            this.setUniform(program, 'lights.diffuse', Type.Float, this.cache.lightsDiffuse, 3);\n\n            if (needDirection)\n                this.setUniform(program, 'lights.direction', Type.Float, this.cache.lightsDirection, 3);\n\n            this.setUniform(program, 'lights.position', Type.Float, this.cache.lightsPosition, 3);\n            this.setUniform(program, 'lights.specular', Type.Float, this.cache.lightsSpecular, 3);\n            this.setUniform(program, 'lights.type', Type.Int, this.cache.lightsType, 1);\n        }\n    }\n\n    /**\n     * Set camera to use\n     *\n     * @param {Camera} camera A Camera instance\n     */\n    setActiveCamera(camera) \n    {\n        super.setActiveCamera(camera);\n\n        let viewport = camera.getViewport();\n        Context.getActive().viewport(viewport[0], viewport[1], viewport[2], viewport[3]);\n    }\n\n    /**\n     * Set blend mode to apply\n     *\n     * @param {BlendMode} blendMode A BlendMode instance\n     */\n    setBlendMode(blendMode) \n    {\n        // Avoid useless operations\n        if (blendMode.isEqual(this.state.blendMode))\n            return;\n\n        // Retrieve context\n        let gl = Context.getActive();\n\n        // Disable blending.\n        if (blendMode.colorSourceFactor == BlendMode.Factor.One && blendMode.colorDestinationFactor == BlendMode.Factor.Zero)\n            gl.disable(WebGLConst.BLEND);\n        else\n        {\n            // Enable it\n            gl.enable(WebGLConst.BLEND);\n\n            // Apply functions and equations\n            gl.blendEquationSeparate( this.convertBlendingEquationToConstant(blendMode.colorEquation), this.convertBlendingEquationToConstant(blendMode.alphaEquation) );\n\n            gl.blendFuncSeparate(   this.convertBlendingFactorToConstant(blendMode.colorSourceFactor), \n                                    this.convertBlendingFactorToConstant(blendMode.colorDestinationFactor), \n                                    this.convertBlendingFactorToConstant(blendMode.alphaSourceFactor), \n                                    this.convertBlendingFactorToConstant(blendMode.alphaDestinationFactor) );\n        }\n\n        this.state.blendMode = blendMode;\n    }\n\n    /**\n     * Set depth state\n     *\n     * @param {boolean} depthTest True to activate depth testing, otherwise false\n     * @param {boolean} writeTest True to activate depth writing otherwise false\n     * @param {DepthFunction} depthFunction Depth function to apply\n     */\n    setDepthState(depthTest, writeTest, depthFunction) \n    {\n        let gl = Context.getActive();\n\n        if (!depthTest && this.state.depthTest)\n            gl.disable(WebGLConst.DEPTH_TEST);\n        else if (depthTest)\n        {\n            if (!this.state.depthTest)\n                gl.enable(WebGLConst.DEPTH_TEST);\n\n            if (this.state.writeTest != writeTest)\n            {\n                gl.depthMask(writeTest);\n                this.state.writeTest = writeTest;\n            }\n\n            if (this.state.depthFunction != depthFunction)\n            {\n                gl.depthFunc(this.convertDepthFunctionToConstant(depthFunction));\n                this.state.depthFunction = depthFunction;\n            }\n        }\n\n        this.state.depthTest = depthTest;\n    }\n\n    /**\n     * Set face culling state\n     *\n     * @param {FaceCulling} mode Face culling mode to set\n     */\n    setFaceCulling(mode) \n    {\n        // Avoid useless operations\n        if (this.state.faceCulling == mode)\n            return;\n\n        // Retrieve context\n        let gl = Context.getActive();\n\n        // Apply state\n        if (mode == FaceCulling.None)\n            gl.disable(WebGLConst.CULL_FACE);\n        else\n        {\n            if (this.state.faceCulling == FaceCulling.None)\n                gl.enable(WebGLConst.CULL_FACE);\n\n            if (mode == FaceCulling.Front)\n                gl.cullFace(WebGLConst.FRONT);\n            else\n                gl.cullFace(WebGLConst.BACK);\n        }\n\n        this.state.faceCulling = mode;\n    } \n\n    /**\n     * Set index buffer to use\n     *\n     * @param {number|WebGLBuffer} buffer A buffer instance\n     */\n    setIndexBuffer(buffer) \n    {\n        Context.getActive().bindBuffer(WebGLConst.ELEMENT_ARRAY_BUFFER, buffer);\n    }\n\n    /**\n     * Set geometry to use\n     *\n     * @param {Geometry} geometry A Geometry instance\n     */\n    setGeometry(geometry) \n    {\n        // Ensure valid format is present\n        if (!geometry.getVertexFormat())\n            return;\n\n        // Set vertex format to use\n        this.setVertexFormat(geometry.getVertexFormat());\n\n        // Retrieve context\n        let gl = Context.getActive();\n\n        // Create geometry's data\n        let geometryInstances = this.instances.buffers[geometry.getUID()];\n        if( !geometryInstances )\n        {\n            geometryInstances = new BufferData();\n            this.instances.buffers[geometry.getUID()] = geometryInstances;\n        }\n\n        // Prepare/Set index buffer\n        {\n            if (!geometryInstances.indexBuffer)\n                geometryInstances.indexBuffer = gl.createBuffer();\n\n            this.setIndexBuffer(geometryInstances.indexBuffer);\n\n            // Update buffer data\n            if (this.cache.vertexFormat.isIndicesWaitingUpdate())\n            {\n                gl.bufferData( WebGLConst.ELEMENT_ARRAY_BUFFER, geometry.getIndices(), WebGLConst.STATIC_DRAW );\n                this.cache.vertexFormat.setIndicesAsWaitingUpdate(false);\n            }\n        }\n\n        // Prepare/Set vertex buffer\n        let vertexElements = this.cache.vertexFormat.getElements();\n        for (let i = 0; i < vertexElements.length; i++)\n        {\n            if (!geometryInstances.vertexBuffers[i])\n                geometryInstances.vertexBuffers[i] = gl.createBuffer();\n\n            // Apply buffer\n            this.setVertexBuffer(i, geometryInstances.vertexBuffers[i]);\n\n            // Fill it\n            if (this.cache.vertexFormat.isStreamWaitingUpdate(vertexElements[i].stream))\n            { \n                let streamType = this.convertStreamTypeToConstant(this.cache.vertexFormat.getStreamType(vertexElements[i].stream));\n\n                switch( vertexElements[i].usage )\n                {\n                    case VertexElement.Usage.Position:\n                        gl.bufferData( WebGLConst.ARRAY_BUFFER, geometry.getVerticesPositions(), streamType );\n                        break;\n                    case VertexElement.Usage.Color:\n                        gl.bufferData( WebGLConst.ARRAY_BUFFER, geometry.getVerticesColors(), streamType );\n                        break;\n                    case VertexElement.Usage.UVS:\n                        gl.bufferData( WebGLConst.ARRAY_BUFFER, geometry.getVerticesUVs(), streamType );\n                        break;\n                    case VertexElement.Usage.Normal:\n                        gl.bufferData( WebGLConst.ARRAY_BUFFER, geometry.getVerticesNormals(), streamType );\n                        break;\n                    default:\n                    case VertexElement.Usage.Tangent:\n                        console.log('Given vertex element is not supported for now.');\n                        break;\n                }\n\n                this.cache.vertexFormat.setStreamAsWaitingUpdate(vertexElements[i].usage, false);\n            }\n        }\n    }\n\n    /**\n     * Set program to use\n     *\n     * @param {Program} program A Program instance to use\n     * @return {number} -1: an error occured, 0: everything is ok, 1 : program have been changed\n     */\n    setProgram(program) \n    {\n        let webGLProgram = this.instances.programs[program.getUID()];\n\n        // Retrieve context.\n        let gl = Context.getActive();\n\n        // Create program.\n        if (!webGLProgram)\n        {\n            if (!program.isReady())\n                return -1;\n\n            let sources     = program.getSources();\n            let programID   = gl.createProgram();\n\n            // Load vertex and fragment shaders\n            let vertexShader = gl.createShader(WebGLConst.VERTEX_SHADER);\n            gl.shaderSource(vertexShader, sources[0]);\n            gl.compileShader(vertexShader);\n\n            let fragmentShader = gl.createShader(WebGLConst.FRAGMENT_SHADER);\n            gl.shaderSource(fragmentShader, sources[1]);\n            gl.compileShader(fragmentShader);\n\n            // Link to the program\n            gl.attachShader(programID, vertexShader);\n            gl.attachShader(programID, fragmentShader);\n\n            // Bind default locations\n            gl.bindAttribLocation(programID, VertexElement.Usage.Position,   'aPosition');\n            gl.bindAttribLocation(programID, VertexElement.Usage.UVS,        'aTexCoord');\n            gl.bindAttribLocation(programID, VertexElement.Usage.Color,      'aColor');\n            gl.bindAttribLocation(programID, VertexElement.Usage.Normal,     'aNormal');\n            gl.bindAttribLocation(programID, VertexElement.Usage.Tangent,    'aTangent');\n\n            // Link program\n            gl.linkProgram(programID);\n\n            // Remove vertex and fragment from memory\n            gl.deleteShader(vertexShader);\n            gl.deleteShader(fragmentShader);\n\n            // Save it\n            this.instances.programs[program.getUID()] = programID;\n            webGLProgram = programID;\n\n            // Get uniforms and attributs informations\n            {\n                let i;\n                let activeUniforms  = gl.getProgramParameter(programID, WebGLConst.ACTIVE_UNIFORMS);\n                let uniforms        = program.getUniforms();\n                for ( i = 0; i < activeUniforms; i++) \n                {\n                    let uniform   = gl.getActiveUniform(programID, i);\n\n                    let finalName = uniform.name;\n                    let arrayPos  = uniform.name.indexOf('[', uniform.name.length - 3);\n                    if (arrayPos >= 0)\n                        finalName = uniform.name.substring(0, arrayPos);\n\n                    uniforms[finalName] = new ProgramElement(gl.getUniformLocation(programID, uniform.name), \n                                                                    finalName,\n                                                                    this.convertConstantToShaderTypes(uniform.type),\n                                                                    uniform.size);\n                }\n\n                let activeAttributes    = gl.getProgramParameter(programID, WebGLConst.ACTIVE_ATTRIBUTES);\n                let attributes          = program.getAttributes();\n                for (i = 0; i < activeAttributes; i++) \n                {\n                    let attribute = gl.getActiveAttrib(programID, i);\n                    attributes[attribute.name] = new ProgramElement(gl.getAttribLocation(programID, attribute.name), \n                                                                    attribute.name,\n                                                                    this.convertConstantToShaderTypes(attribute.type),\n                                                                    attribute.size);\n                }\n            }\n        }\n\n        // Bind program.\n        if (this.cache.program != webGLProgram)\n        {\n            // Use Program\n            gl.useProgram(webGLProgram);\n            this.cache.program = webGLProgram;\n\n            // Send lights's informations\n            this.sendLights(program);\n\n            return 1;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Set uniform value\n     *\n     * @param {Program} program A Program instance to use\n     * @param {string} name Uniform's name\n     * @param {Type} type Type of value to send\n     * @param {?Array<number>|Texture|boolean|number|Float32Array} value A value\n     * @param {number=} groupCount When an element is an array, you can create group (like sub-array)\n     * @return {boolean} True if uniform has been set successfully, otherwise false\n     */\n    setUniform(program, name, type, value, groupCount = 0) \n    {\n        // Check if program need to be set\n        this.setProgram(program);\n\n        let uniform = program.getUniform(name);\n        if (!uniform || !value)\n            return false;\n\n        // Retrieve context\n        let gl = Context.getActive();\n\n        // Send value to the program/shaders\n        switch(type)\n        {\n            case Type.Float:\n            {\n                if (value instanceof Array)\n                {\n                    if (groupCount && groupCount >= 1)\n                    {\n                        if (groupCount == 2)\n                            gl.uniform2fv(uniform.location, value);\n                        else if (groupCount == 3)\n                            gl.uniform3fv(uniform.location, value);\n                        else if (groupCount == 4)\n                            gl.uniform4fv(uniform.location, value);\n                        else if (groupCount == 1)\n                            gl.uniform1fv(uniform.location, value);\n                    }\n                    else\n                    {\n                        if (value.length == 3)\n                            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n                        else if (value.length == 4)\n                            gl.uniform4f(uniform.location, value[0], value[1], value[2], value[3]);\n                        else if (value.length == 3)\n                            gl.uniform2f(uniform.location, value[0], value[1]);                    \n                    }    \n                }\n                else\n                    gl.uniform1f(uniform.location, value);\n\n                break;\n            }\n            case Type.Int:\n            {\n                if (value instanceof Array)\n                {\n                    if (groupCount && groupCount >= 1)\n                    {\n                        if( groupCount == 2 )\n                            gl.uniform2iv(uniform.location, value);\n                        else if( groupCount == 3 )\n                            gl.uniform3iv(uniform.location, value);\n                        else if( groupCount == 4 )\n                            gl.uniform4iv(uniform.location, value);\n                        else if( groupCount == 1 )\n                            gl.uniform1iv(uniform.location, value);\n                    }\n                    else\n                    {\n                        if (value.length == 3)\n                            gl.uniform3i(uniform.location, value[0], value[1], value[2]);\n                        else if (value.length == 4)\n                            gl.uniform4i(uniform.location, value[0], value[1], value[2], value[3]);\n                        else if (value.length == 2)\n                            gl.uniform2i(uniform.location, value[0], value[1]); \n                    }               \n                }\n                else\n                    gl.uniform1i(uniform.location, value);\n\n                break;\n            }\n            case Type.Matrix:\n            {\n                if (value.length == 16)\n                    gl.uniformMatrix4fv(uniform.location, false, value);\n                else if (value.length == 4)\n                    gl.uniformMatrix2fv(uniform.location, false, value);\n                else if (value.length == 9)\n                    gl.uniformMatrix3fv(uniform.location, false, value);\n\n                break;\n            }\n            default:\n                break;\n        }\n\n        return true;\n    }\n\n    /**\n     * Set scissor test state\n     *\n     * @param {boolean} state True to activate scissor testing, otherwise false\n     * @param {number} x Position on x from the left of the screen\n     * @param {number} y Position on y from the bottom of the screen\n     * @param {number} w Width of the rectangle\n     * @param {number} h Height of the rectangle\n     */\n    setScissorTest(state, x, y, w, h) \n    {\n        // Retrieve context\n        let gl = Context.getActive();\n\n        if (!state)\n            gl.disable(WebGLConst.SCISSOR_TEST);\n        else\n        {\n            gl.enable(WebGLConst.SCISSOR_TEST);\n            gl.scissor(x, y, w, h);\n        }\n    }\n\n    /**\n     * Set stencil test state\n     *\n     * @param {boolean} activate True to activate stencil test, otherwise false\n     * @param {number} writeMask Stencil writing value\n     */\n    setStencilState(activate, writeMask) \n    {\n        // Retrieve context\n        let gl = Context.getActive();\n\n        if (!activate && this.state.stencilTest)\n            gl.disable(WebGLConst.STENCIL_TEST);\n        else if (activate)\n        {\n            if (!this.state.stencilTest)\n                gl.enable(WebGLConst.STENCIL_TEST);\n\n            if (this.state.stencilWrite != writeMask)\n            {\n                gl.stencilMask(writeMask);\n                this.state.stencilWrite = writeMask;\n            }\n        }\n\n        this.state.stencilTest = activate;\n    }\n\n    /**\n     * Set stencil function to use\n     *\n     * @param {StencilFunction} stencilFunction Function to use\n     * @param {number} reference Reference value\n     * @param {number} mask Mask to use\n     */\n    setStencilFunction(stencilFunction, reference, mask) \n    {\n        if( this.state.stencilFunction != stencilFunction || this.state.stencilReference != reference || this.state.stencilMask != mask )\n        {\n            Context.getActive().stencilFunc(this.convertStencilFunctionToConstant(stencilFunction), reference, mask);\n            this.state.stencilFunction  = stencilFunction;\n            this.state.stencilReference = reference;\n            this.state.stencilMask      = mask;\n        }\n    }\n\n    /**\n     * Set stencil operations to use\n     *\n     * @param {StencilOperation} sFail Function to use\n     * @param {StencilOperation} dpFail Reference value\n     * @param {StencilOperation} dppPass Mask to use\n     */\n    setStencilOperations(sFail, dpFail, dppPass) \n    {\n        if (this.state.stencilTestFail != sFail || this.state.stencilDepthTestFail != dpFail || this.state.stencilSuccess != dppPass)\n        {\n            Context.getActive().stencilOp(this.convertStencilOperationToConstant(sFail), \n                                   this.convertStencilOperationToConstant(dpFail), \n                                   this.convertStencilOperationToConstant(dppPass));\n\n            this.state.stencilTestFail      = sFail;\n            this.state.stencilDepthTestFail = dpFail;\n            this.state.stencilSuccess       = dppPass;\n        }\n    }\n\n    /**\n     * Set vertex buffer to use\n     *\n     * Warning: You must call \"setVertexFormat\" before!\n     * @param {number} stream An integer representing stream to use\n     * @param {number|WebGLBuffer} buffer A buffer instance\n     */\n    setVertexBuffer(stream, buffer) \n    {\n        // Retrieve context\n        let gl = Context.getActive();\n\n        // Bind buffer\n        gl.bindBuffer(WebGLConst.ARRAY_BUFFER, buffer);\n\n        // Enable vertex data\n        let vertexElements = this.cache.vertexFormat.getElements();\n        for (let i = 0; i < vertexElements.length; i++)\n        {\n            if (vertexElements[i].stream == stream)\n            {\n                // Enable\n                gl.enableVertexAttribArray(vertexElements[i].usage);\n                gl.vertexAttribPointer( vertexElements[i].usage, \n                                        vertexElements[i].count, \n                                        this.convertVertexTypeToConstant(vertexElements[i].type), \n                                        vertexElements[i].normalize, \n                                        this.cache.vertexFormat.getStreamStride(vertexElements[i].stream),\n                                        vertexElements[i].offset);\n\n                // Save attribut's state\n                this.enabledVertexAttribArray[vertexElements[i].usage] = true;\n            }\n        } \n    }\n\n    /**\n     * Set vertex format to use\n     *\n     * @param {VertexFormat} format A VertexFormat instance\n     */\n    setVertexFormat(format) \n    {\n        this.cache.vertexFormat = format;\n    }\n\n    /* ------------------------------------------------------------------------------------------ */\n    ///\n    /// Conversions functions\n    ///\n    /* ------------------------------------------------------------------------------------------ */\n    /**\n     * Convert the given factor to a WebGL factor equivalent\n     *\n     * @param {BlendMode.Factor} factor A blending Factor instance\n     * @return {number} A WebGL value.\n     * @private\n     */\n    convertBlendingFactorToConstant(factor) \n    {\n        switch(factor)\n        {\n            default:\n            case BlendMode.Factor.Zero:                           return WebGLConst.ZERO;\n            case BlendMode.Factor.One:                            return WebGLConst.ONE;\n            case BlendMode.Factor.SourceColor:                    return WebGLConst.SRC_COLOR;\n            case BlendMode.Factor.OneMinusSourceColor:            return WebGLConst.ONE_MINUS_SRC_COLOR;\n            case BlendMode.Factor.DestinationColor:               return WebGLConst.DST_COLOR;\n            case BlendMode.Factor.OneMinusDestinationColor:       return WebGLConst.ONE_MINUS_DST_COLOR;\n            case BlendMode.Factor.SourceAlpha:                    return WebGLConst.SRC_ALPHA;\n            case BlendMode.Factor.OneMinusSourceAlpha:            return WebGLConst.ONE_MINUS_SRC_ALPHA;\n            case BlendMode.Factor.DestinationAlpha:               return WebGLConst.DST_ALPHA;\n            case BlendMode.Factor.OneMinusDestinationAlpha:       return WebGLConst.ONE_MINUS_DST_ALPHA;\n        }\n    }\n\n    /**\n     * Convert the given equation to an equivalent WebGL equation\n     *\n     * @param {BlendMode.Equation} equation A blending Equation value\n     * @return {number} A WebGL value.\n     * @private\n     */\n    convertBlendingEquationToConstant(equation) \n    {\n        switch(equation)\n        {\n            default:\n            case BlendMode.Equation.Add:                          return WebGLConst.FUNC_ADD;\n            case BlendMode.Equation.Subtract:                     return WebGLConst.FUNC_SUBTRACT;\n        }\n    }\n\n    /**\n     * Convert the given depth function to an equivalent WebGL function\n     *\n     * @param {DepthFunction} depthFunction A DepthFunction value\n     * @return {number} A WebGL value.\n     * @private\n     */\n    convertDepthFunctionToConstant(depthFunction) \n    {\n        switch(depthFunction)\n        {\n            case DepthFunction.Never:                             return WebGLConst.NEVER;\n            case DepthFunction.Less:                              return WebGLConst.LESS;\n            case DepthFunction.Equal:                             return WebGLConst.EQUAL;\n            case DepthFunction.LessEqual:                         return WebGLConst.LEQUAL;\n            case DepthFunction.Greater:                           return WebGLConst.GREATER;\n            case DepthFunction.NotEqual:                          return WebGLConst.NOTEQUAL;\n            case DepthFunction.GreaterEqual:                      return WebGLConst.GEQUAL;\n            case DepthFunction.Always:                            return WebGLConst.ALWAYS;\n            default:                                              return WebGLConst.LEQUAL;\n        }\n    }\n\n    /**\n     * Convert the given drawing mode to an equivalent WebGL value\n     *\n     * @param {DrawingMode} drawingMode A drawing mode\n     * @return {number} A WebGL value.\n     * @private\n     */\n    convertDrawingModeToConstant(drawingMode) \n    {\n        switch(drawingMode)\n        {\n            default:\n            case DrawingMode.Points:                              return WebGLConst.POINTS;\n            case DrawingMode.Lines:                               return WebGLConst.LINES;\n            case DrawingMode.LinesStrip:                          return WebGLConst.LINE_STRIP;\n            case DrawingMode.LinesLoop:                           return WebGLConst.LINE_LOOP;\n            case DrawingMode.Triangles:                           return WebGLConst.TRIANGLES;\n            case DrawingMode.TrianglesStrip:                      return WebGLConst.TRIANGLE_STRIP;\n            case DrawingMode.TrianglesFan:                        return WebGLConst.TRIANGLE_FAN;\n        }\n    }\n\n    /**\n     * Convert the given stencil function to an equivalent WebGL function\n     *\n     * @param {StencilFunction} stencilFunction A StencilFunction value\n     * @return {number} A WebGL value\n     * @private\n     */\n    convertStencilFunctionToConstant(stencilFunction) \n    {\n        switch(stencilFunction)\n        {\n            case StencilFunction.Never:                         return WebGLConst.NEVER;\n            case StencilFunction.Less:                          return WebGLConst.LESS;\n            case StencilFunction.Equal:                         return WebGLConst.EQUAL;\n            case StencilFunction.LessEqual:                     return WebGLConst.LEQUAL;\n            case StencilFunction.Greater:                       return WebGLConst.GREATER;\n            case StencilFunction.NotEqual:                      return WebGLConst.NOTEQUAL;\n            case StencilFunction.GreaterEqual:                  return WebGLConst.GEQUAL;\n            case StencilFunction.Always:                        return WebGLConst.ALWAYS;\n            default:                                            return WebGLConst.LEQUAL;\n        }\n    }\n\n    /**\n     * Convert the given stencil operation to an equivalent WebGL function\n     *\n     * @param {StencilOperation} operation A StencilOperation value\n     * @return {number} A WebGL value\n     * @private\n     */\n    convertStencilOperationToConstant(operation) \n    {\n        switch(operation)\n        {\n            default:\n            case StencilOperation.Keep:                            return WebGLConst.KEEP;\n            case StencilOperation.Zero:                            return WebGLConst.ZERO;\n            case StencilOperation.Replace:                         return WebGLConst.REPLACE;\n            case StencilOperation.Increment:                       return WebGLConst.INCR;\n            case StencilOperation.Decrement:                       return WebGLConst.DECR;\n            case StencilOperation.Invert:                          return WebGLConst.INVERT;\n            case StencilOperation.IncrementWrap:                   return WebGLConst.INCR_WRAP;\n            case StencilOperation.DecrementWrap:                   return WebGLConst.DECR_WRAP;\n        }\n    }\n\n    /**\n     * Convert the given vertex type to an equivalent WebGL type\n     *\n     * @param {VertexElement.Type} type A VertexElement type\n     * @return {number} A WebGL value\n     * @private\n     */\n    convertVertexTypeToConstant(type) \n    {\n        switch(type)\n        {\n            default:\n            case VertexElement.Type.Byte:            return WebGLConst.BYTE;\n            case VertexElement.Type.Float:           return WebGLConst.FLOAT;\n            case VertexElement.Type.Int:             return WebGLConst.INT;\n            case VertexElement.Type.Short:           return WebGLConst.SHORT;\n        }\n    }\n\n    /**\n     * Convert the given type of stream to an equivalent WebGL type\n     *\n     * @param {VertexElement.StreamType} type A StreamType\n     * @return {number} A WebGL value\n     * @private\n     */\n    convertStreamTypeToConstant(type) \n    {\n        switch(type)\n        {\n            default:\n            case VertexElement.StreamType.Static:    return WebGLConst.STATIC_DRAW;\n            case VertexElement.StreamType.Dynamic:   return WebGLConst.DYNAMIC_DRAW;\n            case VertexElement.StreamType.Stream:    return WebGLConst.STREAM_DRAW;\n        }\n    }\n\n    /**\n     * Convert the given type to a Lemon equivalent\n     *\n     * @param {number} type A WebGL value\n     * @return {Type} A custom type value\n     * @private\n     */\n    convertConstantToShaderTypes(type) \n    {\n        switch(type)\n        {\n            default:\n            case WebGLConst.FLOAT:\n            case WebGLConst.FLOAT_VEC2:\n            case WebGLConst.FLOAT_VEC3:\n            case WebGLConst.FLOAT_VEC4:\n                return Type.Float;\n            case WebGLConst.INT:\n            case WebGLConst.INT_VEC2:\n            case WebGLConst.INT_VEC3:\n            case WebGLConst.INT_VEC4:\n                return Type.Int;\n            case WebGLConst.BOOL:\n            case WebGLConst.BOOL_VEC2:\n            case WebGLConst.BOOL_VEC3:\n            case WebGLConst.BOOL_VEC4:\n                return Type.Bool;\n            case WebGLConst.FLOAT_MAT2:\n            case WebGLConst.FLOAT_MAT3:\n            case WebGLConst.FLOAT_MAT4:\n                return Type.Matrix;\n            case WebGLConst.SAMPLER_2D:\n                return Type.Texture2D;\n            case WebGLConst.SAMPLER_CUBE:\n                return Type.TextureCube;\n            case WebGLConst.BYTE:\n                return Type.Byte;\n            case WebGLConst.UNSIGNED_BYTE:\n                return Type.u_Byte;\n            case WebGLConst.SHORT:\n                return Type.Short;\n            case WebGLConst.UNSIGNED_SHORT:\n                return Type.u_Short;\n            case WebGLConst.UNSIGNED_INT:\n                return Type.u_Int;\n        }\n    }\n\n    /**\n     * Convert the given webgl shader's type to an equivalent Lemon value\n     *\n     * @param {number} type A WebGL value\n     * @return {number} A number representing element count for the given type\n     * @private\n     */\n    convertConstantToShaderCount(type) \n    {\n        switch(type)\n        {\n            default:\n            case WebGLConst.FLOAT:\n            case WebGLConst.INT:\n            case WebGLConst.BOOL:\n            case WebGLConst.SAMPLER_2D:\n            case WebGLConst.SAMPLER_CUBE:\n            case WebGLConst.BYTE:\n            case WebGLConst.UNSIGNED_BYTE:\n            case WebGLConst.SHORT:\n            case WebGLConst.UNSIGNED_SHORT:\n            case WebGLConst.UNSIGNED_INT:\n                return 1;\n            case WebGLConst.FLOAT_VEC2:\n            case WebGLConst.INT_VEC2:\n            case WebGLConst.BOOL_VEC2:\n            case WebGLConst.FLOAT_MAT2:\n                return 2;\n            case WebGLConst.FLOAT_VEC3:\n            case WebGLConst.INT_VEC3:\n            case WebGLConst.BOOL_VEC3:\n            case WebGLConst.FLOAT_MAT3:\n                return 3;\n            case WebGLConst.FLOAT_VEC4:\n            case WebGLConst.INT_VEC4:\n            case WebGLConst.BOOL_VEC4:\n            case WebGLConst.FLOAT_MAT4:\n                return 4;\n        }\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/WebGL/RenderWebGL.js\n **/","import {Color} from '../../Color.js';\n\n/**\n * Cache for WebGL API\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Cache\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n         * Active vertex format\n         *\n         * @type {Color}\n         * @public\n         */\n        this.clearColor = new Color(1, 1, 1, 255);\n\n        /**\n         * Active program\n         *\n         * @type {Program}\n         * @public\n         */\n        this.program = null;\n\n        /**\n         * Active texture\n         *\n         * @type {TextureInterface|TextureCube}\n         * @public\n         */\n        this.texture = null;\n\n        /**\n         * Active vertex format\n         *\n         * @type {VertexFormat}\n         * @public\n         */\n        this.vertexFormat = null;\n\n        /**\n         * Array with lights to send to the programs\n         *\n         * @type {Array.<Light>}\n         * @public\n         */\n        this.lights = [];\n\n        /**\n         * Lights positions\n         *\n         * @type {Array.<number>}\n         * @public\n         */\n        this.lightsAmbient = [];\n\n        /**\n         * Lights positions\n         *\n         * @type {Array.<number>}\n         * @public\n         */\n        this.lightsDiffuse = [];\n\n        /**\n         * Lights data: constant, linear and quadratic data\n         *\n         * @type {Array.<number>}\n         * @public\n         */\n        this.lightsData = [];\n\n        /**\n         * Lights directions\n         *\n         * @type {Array.<number>}\n         * @public\n         */\n        this.lightsDirection = [];\n\n        /**\n         * Lights positions\n         *\n         * @type {Array.<number>}\n         * @public\n         */\n        this.lightsPosition = [];\n\n        /**\n         * Lights positions\n         *\n         * @type {Array.<number>}\n         * @public\n         */\n        this.lightsSpecular = [];\n\n        /**\n         * Lights type\n         *\n         * @type {Array.<number>}\n         * @public\n         */\n        this.lightsType = [];\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/WebGL/Cache.js\n **/","/**\n * A WebGL buffer\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class BufferData\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n         * Index buffer\n         *\n         * @type {WebGLBuffer}\n         * @public\n         */\n        this.indexBuffer = null;\n\n        /**\n         * Vertex buffers\n         *\n         * @type {Array.<WebGLBuffer>}\n         * @public\n         */\n        this.vertexBuffers = [];\n\n        /**\n         * Vertex array object\n         *\n         * @type {WebGLBuffer}\n         * @public\n         */\n        this.vao = null;\n    }\n}\n\n/**\n * WebGL instances\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Instances\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n         * WebGL buffers\n         *\n         * @type {Array.<BufferData>}\n         * @public\n         */\n        this.buffers = [];\n\n        /**\n         * WebGL frame buffers\n         *\n         * @type {Array.<WebGLFramebuffer>}\n         * @public\n         */\n        this.frameBuffers = [];\n\n        /**\n         * Programs/Shaders data\n         *\n         * @type {Array.<WebGLProgram>}\n         * @public\n         */\n        this.programs = [];\n\n        /**\n         * Textures data\n         *\n         * @type {Array.<WebGLTexture>}\n         * @public\n         */\n        this.textures = [];\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/WebGL/Instances.js\n **/","/**\n * A rendering API\n *\n * Web technologies allow Canvas and WebGL rendering\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class RenderAPI \n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n         * Camera to use for next draw calls and graphics calculs\n         *\n         * @type {Camera} \n         * @protected\n         */\n        this.activeCamera = null;\n    }\n\n    /**\n     * Bind light\n     *\n     * @param {Light} light A Light instance\n     */\n    bindLight(light) { };\n\n    /**\n     * Apply the given state block\n     *\n     * @param {StateBlock} stateBlock A StateBlock instance\n     */\n    applyStateBlock(stateBlock)\n    {\n        this.setBlendMode(stateBlock.blendMode);\n        this.setDepthState(stateBlock.depthTest, stateBlock.depthWrite, stateBlock.depthFunction);\n        this.setFaceCulling(stateBlock.faceCulling);\n        this.setStencilState(stateBlock.stencilTest, stateBlock.stencilWrite);\n        this.setStencilFunction(stateBlock.stencilFunction, stateBlock.stencilReference, stateBlock.stencilMask);\n        this.setStencilOperations(stateBlock.stencilTestFail, stateBlock.stencilDepthTestFail, stateBlock.stencilSuccess);\n    }\n\n    /**\n     * Bind the given framebuffer\n     *\n     * @param {number} framebufferID An identifier, -1 to bind the default frame buffer\n     */\n    bindFrameBuffer(framebufferID = -1) { };\n\n    /**\n     * Bind texture to the the given slot\n     *\n     * @param {number} slot Targeted slot's index\n     * @param {TextureInterface} texture A Texture instance\n     */\n    bindTexture(slot, texture) { };\n\n    /**\n     * Bind texture cube to the the given slot\n     *\n     * @param {number} slot Targeted slot's index\n     * @param {TextureCube} texture A TextureCube instance\n     */\n    bindTextureCube(slot, texture) { };\n\n    /**\n     * Clear the rendering target\n     *\n     * @param {Color} color A Color instance\n     */\n    clear(color) { };\n\n    /**\n     * Clear cache\n     */\n    clearCache() { };\n\n    /**\n     * Create a new frame buffer\n     *\n     * @return {number} An identifier to work with it later\n     */\n    createFrameBuffer() { return 0; };\n\n    /**\n    * Draw indexed primitives\n    *\n    * @param {DrawingMode} drawingMode Drawing mode to use\n    * @param {number} firstVertexIndex Index of the first vertex to draw, useful to draw some parts\n    * @param {number} vertexCount Vertex count to draw\n    */\n    drawIndexedPrimitives(drawingMode, firstVertexIndex, vertexCount) { }; \n\n    /**\n    * Draw primitives\n    *\n    * @param {DrawingMode} drawingMode Drawing mode to use\n    * @param {number} firstVertexIndex Index of the first vertex to draw, useful to draw some parts\n    * @param {number} vertexCount Vertex count to draw\n    */\n    drawPrimitives(drawingMode, firstVertexIndex, vertexCount) { };\n\n    /**\n     * Init frame buffer: attach it to textures, depth buffer and/or a stencil buffer\n     *\n     * @param {number} framebufferID Targeted slot's index\n     * @param {Array.<Texture>} textures An array of Texture instances\n     * @param {boolean=} useDepthBuffer True to use a depth buffer\n     * @param {boolean=} useStencilBuffer True to use a depth buffer\n     */\n    initFrameBuffer(framebufferID, textures, useDepthBuffer = true, useStencilBuffer = false) { };\n\n    /**\n     * Set camera to use\n     *\n     * @param {Camera} camera A Camera instance\n     */\n    setActiveCamera(camera) \n    { \n        this.activeCamera = camera; \n    }\n\n    /**\n     * Set blend mode to apply\n     *\n     * @param {BlendMode} blendMode A BlendMode instance\n     */\n    setBlendMode(blendMode) { };\n\n    /**\n     * Set depth state\n     *\n     * @param {boolean} depthTest True to activate depth testing, otherwise false\n     * @param {boolean} writeTest True to activate depth writing otherwise false\n     * @param {DepthFunction} depthFunction Depth function to apply\n     */\n    setDepthState(depthTest, writeTest, depthFunction) { };\n\n    /**\n     * Set face culling state.\n     * @param {FaceCulling} mode Face culling mode to set.\n     */\n    setFaceCulling(mode) { };\n\n    /**\n     * Set geometry to use\n     *\n     * @param {Geometry} geometry A Geometry instance\n     */\n    setGeometry(geometry) { };\n\n    /**\n     * Set index buffer to use\n     *\n     * @param {number|WebGLBuffer} buffer A buffer instance\n     */\n    setIndexBuffer(buffer) { };\n\n    /**\n     * Set program to use\n     *\n     * @param {Program} program A Program instance to use\n     * @return {number} -1: an error occured, 0: everything is ok, 2 : program have been changed\n     */\n    setProgram(program) { return -1; };\n\n    /**\n     * Set uniform value\n     *\n     * @param {Program} program A Program instance to use\n     * @param {string} name Uniform's name\n     * @param {Type} type Type of value to send\n     * @param {?Array<number>|Texture|boolean|number|Float32Array} value A value\n     * @param {number=} groupCount When an element is an array, you can create group (like sub-array)\n     * @return {boolean} True if uniform has been set successfully, otherwise false\n     */\n    setUniform(program, name, type, value, groupCount) { return false; };\n\n    /**\n     * Set scissor test state\n     *\n     * @param {boolean} state True to activate scissor testing, otherwise false\n     * @param {number} x Position on x from the left of the screen\n     * @param {number} y Position on y from the bottom of the screen\n     * @param {number} w Width of the rectangle\n     * @param {number} h Height of the rectangle\n     */\n    setScissorTest(state, x, y, w, h) { };\n\n    /**\n     * Set stencil test state\n     *\n     * @param {boolean} activate True to active stencil testing, otherwise false\n     * @param {number} writeMask Stencil writing value\n     */\n    setStencilState(activate, writeMask) { };\n\n    /**\n     * Set stencil function to use\n     *\n     * @param {StencilFunction} stencilFunction Function to use\n     * @param {number} reference Reference value\n     * @param {number} mask Mask to use\n     */\n    setStencilFunction(stencilFunction, reference, mask) { };\n\n    /**\n     * Set stencil operations to use\n     *\n     * @param {StencilOperation} sFail Function to use\n     * @param {StencilOperation} dpFail Reference value\n     * @param {StencilOperation} dppPass Mask to use\n     */\n    setStencilOperations(sFail, dpFail, dppPass) { };\n\n    /**\n     * Set vertex buffer to use\n     *\n     * Warning: You must call \"setVertexFormat\" before!\n     * @param {number} stream An integer representing stream to use\n     * @param {number|WebGLBuffer} buffer A buffer instance\n     */\n    setVertexBuffer(stream, buffer) { };\n\n    /**\n     * Set vertex format to use\n     *\n     * @param {VertexFormat} format A VertexFormat instance\n     */\n    setVertexFormat(format) { };\n\n    /**\n     * Get the active camera\n     *\n     * @return {Camera} A Camera instance or null\n     */\n    getActiveCamera() \n    { \n        return this.activeCamera; \n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/RenderAPI.js\n **/","import {ContextResource} from '../ContextResource.js';\nimport {Img as Image} from '../Image.js';\n\n/**\n * A texture cube to use with Sky-boxes\n *\n * @extends {ContextResource}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class TextureCube extends ContextResource\n{\n    /**\n     * Constructor\n     *\n     * @param {Array.<string>} paths An array with the image's path for the right cube's face,\n     * Paths must be provided in the given order: up, down, left, right, back, front\n     */\n    constructor(paths = [])\n    {\n        super();\n\n        /**\n         * Images (one per face)\n         *\n         * @type {Array.<Image>}\n         * @private\n         */\n        this.images = [];\n\n        if (paths.length)\n            this.loadFromFiles(paths);\n    }\n\n    /**\n     * Load images from the given paths\n     *\n     * @param {Array.<string>} paths An array with the image's path for the right cube's face,\n     * Paths must be provided in the given order: up, down, left, right, back, front\n     */\n    loadFromFiles(paths)\n    {\n        for (let i in paths)\n        {\n            let image = new Image();\n            image.loadFromFile(paths[i]);\n            this.images[i] = image;\n        }\n    }\n\n    /**\n     * Get images\n     *\n     * @return {Array.<Image>} An array with images instances\n     */\n    getImages()\n    {\n        return this.images;\n    }\n\n    /**\n     * Check if texture cube is ready to be use\n     *\n     * @return {boolean} True if everything is ready\n     */\n    isReady()\n    {\n        if (this.images.length === 0)\n            return false;\n\n        for (let i = 0; i < this.images.length; i++)\n            if (!this.images[i].isReady())\n                return false;\n\n        return true;\n    }\n}\n\n/**\n* Faces\n *\n* @enum {number}\n*/\nTextureCube.Face = { Up: 0, Down: 1, Left: 2, Right: 3, Back: 4, Front: 5 };\n\n\n/** WEBPACK FOOTER **\n ** ./src/Textures/TextureCube.js\n **/","import {TextureInterface} from './TextureInterface.js';\n\n/**\n * A texture to display video\n *\n * @extends {TextureInterface}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class TextureVideo extends TextureInterface\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        super();\n\n        /**\n         * Video.\n         * @type {HTMLVideoElement}\n         * @private\n         */\n        this.data = document.createElement('video');\n    }\n\n    /**\n     * Load the video from a file\n     *\n     * @param {string} path Path to the video file\n     */\n    loadFromFile(path)\n    {\n        // Detect when video is ready\n        this.data.addEventListener('canplaythrough', () =>\n        {\n            this.ready = true;\n        }, true);\n\n        // Load\n        this.data.preload = 'auto';\n        this.data.src = path;\n    };\n\n    /**\n     * Pause the video\n     */\n    pause()\n    {\n        this.data.pause();\n    }\n\n    /**\n     * Play the video\n     */\n    play()\n    {\n        this.data.play();\n    }\n\n    /**\n     * Get video's duration\n     *\n     * @return {number} The duration property returns the length of the current audio/video, in seconds\n     */\n    getDuration()\n    {\n        return this.data.duration;\n    }\n\n    /**\n     * Get video's data\n     *\n     * @return {HTMLVideoElement} The HTML video element\n     */\n    getVideoData()\n    {\n        return this.data;\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Textures/TextureVideo.js\n **/","/**\n * @const\n * @type {number}\n */\nexport let DEPTH_BUFFER_BIT = 0x00000100;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_BUFFER_BIT = 0x00000400;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let POINTS = 0x0000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LINES = 0x0001;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LINE_LOOP = 0x0002;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LINE_STRIP = 0x0003;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TRIANGLE_FAN = 0x0006;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ZERO = 0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SRC_COLOR = 0x0300;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ONE_MINUS_SRC_COLOR = 0x0301;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DST_ALPHA = 0x0304;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ONE_MINUS_DST_ALPHA = 0x0305;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DST_COLOR = 0x0306;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ONE_MINUS_DST_COLOR = 0x0307;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SRC_ALPHA_SATURATE = 0x0308;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FUNC_ADD = 0x8006;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BLEND_EQUATION = 0x8009;\n\n\n/**\n * Same as BLEND_EQUATION\n * @const\n * @type {number}\n */\nexport let BLEND_EQUATION_RGB = 0x8009;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BLEND_EQUATION_ALPHA = 0x883D;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FUNC_SUBTRACT = 0x800A;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FUNC_REVERSE_SUBTRACT = 0x800B;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BLEND_DST_RGB = 0x80C8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BLEND_SRC_RGB = 0x80C9;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BLEND_DST_ALPHA = 0x80CA;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BLEND_SRC_ALPHA = 0x80CB;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let CONSTANT_COLOR = 0x8001;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ONE_MINUS_CONSTANT_COLOR = 0x8002;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let CONSTANT_ALPHA = 0x8003;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ONE_MINUS_CONSTANT_ALPHA = 0x8004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BLEND_COLOR = 0x8005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ARRAY_BUFFER_BINDING = 0x8894;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ELEMENT_ARRAY_BUFFER_BINDING = 0x8895;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BUFFER_SIZE = 0x8764;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BUFFER_USAGE = 0x8765;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let CURRENT_VERTEX_ATTRIB = 0x8626;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRONT = 0x0404;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BACK = 0x0405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRONT_AND_BACK = 0x0408;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DITHER = 0x0BD0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let POLYGON_OFFSET_FILL = 0x8037;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SAMPLE_ALPHA_TO_COVERAGE = 0x809E;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SAMPLE_COVERAGE = 0x80A0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let NO_ERROR = 0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let INVALID_ENUM = 0x0500;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let INVALID_VALUE = 0x0501;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let INVALID_OPERATION = 0x0502;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let OUT_OF_MEMORY = 0x0505;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let CW = 0x0900;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let CCW = 0x0901;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LINE_WIDTH = 0x0B21;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ALIASED_POINT_SIZE_RANGE = 0x846D;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ALIASED_LINE_WIDTH_RANGE = 0x846E;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let CULL_FACE_MODE = 0x0B45;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRONT_FACE = 0x0B46;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DEPTH_RANGE = 0x0B70;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DEPTH_WRITEMASK = 0x0B72;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DEPTH_CLEAR_VALUE = 0x0B73;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DEPTH_FUNC = 0x0B74;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_CLEAR_VALUE = 0x0B91;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_FUNC = 0x0B92;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_FAIL = 0x0B94;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_PASS_DEPTH_FAIL = 0x0B95;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_PASS_DEPTH_PASS = 0x0B96;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_REF = 0x0B97;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_VALUE_MASK = 0x0B93;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_WRITEMASK = 0x0B98;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_BACK_FUNC = 0x8800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_BACK_FAIL = 0x8801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_BACK_PASS_DEPTH_PASS = 0x8803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_BACK_REF = 0x8CA3;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_BACK_VALUE_MASK = 0x8CA4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_BACK_WRITEMASK = 0x8CA5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let VIEWPORT = 0x0BA2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SCISSOR_BOX = 0x0C10;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let COLOR_CLEAR_VALUE = 0x0C22;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let COLOR_WRITEMASK = 0x0C23;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let UNPACK_ALIGNMENT = 0x0CF5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let PACK_ALIGNMENT = 0x0D05;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MAX_TEXTURE_SIZE = 0x0D33;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MAX_VIEWPORT_DIMS = 0x0D3A;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SUBPIXEL_BITS = 0x0D50;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RED_BITS = 0x0D52;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let GREEN_BITS = 0x0D53;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BLUE_BITS = 0x0D54;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ALPHA_BITS = 0x0D55;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DEPTH_BITS = 0x0D56;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_BITS = 0x0D57;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let POLYGON_OFFSET_UNITS = 0x2A00;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let POLYGON_OFFSET_FACTOR = 0x8038;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_BINDING_2D = 0x8069;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SAMPLE_BUFFERS = 0x80A8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SAMPLES = 0x80A9;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SAMPLE_COVERAGE_VALUE = 0x80AA;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SAMPLE_COVERAGE_INVERT = 0x80AB;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let COMPRESSED_TEXTURE_FORMATS = 0x86A3;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DONT_CARE = 0x1100;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FASTEST = 0x1101;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let NICEST = 0x1102;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let GENERATE_MIPMAP_HINT = 0x8192;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BYTE = 0x1400;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SHORT = 0x1402;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let INT = 0x1404;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DEPTH_COMPONENT = 0x1902;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ALPHA = 0x1906;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RGB = 0x1907;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LUMINANCE = 0x1909;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LUMINANCE_ALPHA = 0x190A;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let UNSIGNED_SHORT_4_4_4_4 = 0x8033;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let UNSIGNED_SHORT_5_5_5_1 = 0x8034;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let UNSIGNED_SHORT_5_6_5 = 0x8363;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MAX_VERTEX_ATTRIBS = 0x8869;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MAX_VARYING_VECTORS = 0x8DFC;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MAX_TEXTURE_IMAGE_UNITS = 0x8872;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SHADER_TYPE = 0x8B4F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DELETE_STATUS = 0x8B80;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let VALIDATE_STATUS = 0x8B83;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ATTACHED_SHADERS = 0x8B85;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ACTIVE_UNIFORMS = 0x8B86;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ACTIVE_ATTRIBUTES = 0x8B89;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SHADING_LANGUAGE_VERSION = 0x8B8C;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let CURRENT_PROGRAM = 0x8B8D;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let NEVER = 0x0200;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LESS = 0x0201;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let EQUAL = 0x0202;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LEQUAL = 0x0203;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let GREATER = 0x0204;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let NOTEQUAL = 0x0205;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let GEQUAL = 0x0206;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ALWAYS = 0x0207;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let KEEP = 0x1E00;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let REPLACE = 0x1E01;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let INCR = 0x1E02;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DECR = 0x1E03;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let INVERT = 0x150A;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let INCR_WRAP = 0x8507;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DECR_WRAP = 0x8508;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let VENDOR = 0x1F00;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RENDERER = 0x1F01;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let VERSION = 0x1F02;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let NEAREST = 0x2600;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let NEAREST_MIPMAP_NEAREST = 0x2700;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LINEAR_MIPMAP_NEAREST = 0x2701;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let NEAREST_MIPMAP_LINEAR = 0x2702;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LINEAR_MIPMAP_LINEAR = 0x2703;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE = 0x1702;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_CUBE_MAP = 0x8513;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_BINDING_CUBE_MAP = 0x8514;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE1 = 0x84C1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE2 = 0x84C2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE3 = 0x84C3;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE4 = 0x84C4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE5 = 0x84C5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE6 = 0x84C6;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE7 = 0x84C7;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE8 = 0x84C8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE9 = 0x84C9;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE10 = 0x84CA;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE11 = 0x84CB;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE12 = 0x84CC;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE13 = 0x84CD;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE14 = 0x84CE;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE15 = 0x84CF;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE16 = 0x84D0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE17 = 0x84D1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE18 = 0x84D2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE19 = 0x84D3;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE20 = 0x84D4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE21 = 0x84D5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE22 = 0x84D6;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE23 = 0x84D7;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE24 = 0x84D8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE25 = 0x84D9;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE26 = 0x84DA;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE27 = 0x84DB;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE28 = 0x84DC;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE29 = 0x84DD;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE30 = 0x84DE;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let TEXTURE31 = 0x84DF;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let ACTIVE_TEXTURE = 0x84E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let REPEAT = 0x2901;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MIRRORED_REPEAT = 0x8370;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FLOAT_VEC2 = 0x8B50;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FLOAT_VEC3 = 0x8B51;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FLOAT_VEC4 = 0x8B52;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let INT_VEC2 = 0x8B53;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let INT_VEC3 = 0x8B54;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let INT_VEC4 = 0x8B55;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BOOL = 0x8B56;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BOOL_VEC2 = 0x8B57;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BOOL_VEC3 = 0x8B58;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BOOL_VEC4 = 0x8B59;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FLOAT_MAT2 = 0x8B5A;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FLOAT_MAT3 = 0x8B5B;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FLOAT_MAT4 = 0x8B5C;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SAMPLER_2D = 0x8B5E;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let SAMPLER_CUBE = 0x8B60;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let VERTEX_ATTRIB_ARRAY_SIZE = 0x8623;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let VERTEX_ATTRIB_ARRAY_TYPE = 0x8625;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let VERTEX_ATTRIB_ARRAY_POINTER = 0x8645;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LOW_FLOAT = 0x8DF0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MEDIUM_FLOAT = 0x8DF1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let HIGH_FLOAT = 0x8DF2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let LOW_INT = 0x8DF3;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MEDIUM_INT = 0x8DF4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let HIGH_INT = 0x8DF5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRAMEBUFFER = 0x8D40;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RENDERBUFFER = 0x8D41;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RGBA4 = 0x8056;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RGB5_A1 = 0x8057;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RGB565 = 0x8D62;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DEPTH_COMPONENT16 = 0x81A5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_INDEX = 0x1901;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_INDEX8 = 0x8D48;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DEPTH_STENCIL = 0x84F9;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RENDERBUFFER_WIDTH = 0x8D42;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RENDERBUFFER_HEIGHT = 0x8D43;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RENDERBUFFER_INTERNAL_FORMAT = 0x8D44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RENDERBUFFER_RED_SIZE = 0x8D50;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RENDERBUFFER_GREEN_SIZE = 0x8D51;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RENDERBUFFER_BLUE_SIZE = 0x8D52;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RENDERBUFFER_ALPHA_SIZE = 0x8D53;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RENDERBUFFER_DEPTH_SIZE = 0x8D54;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RENDERBUFFER_STENCIL_SIZE = 0x8D55;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DEPTH_ATTACHMENT = 0x8D00;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let STENCIL_ATTACHMENT = 0x8D20;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let DEPTH_STENCIL_ATTACHMENT = 0x821A;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let NONE = 0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRAMEBUFFER_COMPLETE = 0x8CD5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRAMEBUFFER_UNSUPPORTED = 0x8CDD;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let FRAMEBUFFER_BINDING = 0x8CA6;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let RENDERBUFFER_BINDING = 0x8CA7;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let MAX_RENDERBUFFER_SIZE = 0x84E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let INVALID_FRAMEBUFFER_OPERATION = 0x0506;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let UNPACK_FLIP_Y_WEBGL = 0x9240;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let CONTEXT_LOST_WEBGL = 0x9242;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;\n\n\n/**\n * @const\n * @type {number}\n */\nexport let BROWSER_DEFAULT_WEBGL = 0x9244;\n\n\n/**\n * From the OES_texture_half_float extension.\n * http://www.khronos.org/registry/webgl/extensions/OES_texture_half_float/\n * @const\n * @type {number}\n */\nexport let HALF_FLOAT_OES = 0x8D61;\n\n\n/**\n * From the OES_standard_derivatives extension.\n * http://www.khronos.org/registry/webgl/extensions/OES_standard_derivatives/\n * @const\n * @type {number}\n */\nexport let FRAGMENT_SHADER_DERIVATIVE_HINT_OES = 0x8B8B;\n\n\n/**\n * From the OES_vertex_array_object extension.\n * http://www.khronos.org/registry/webgl/extensions/OES_vertex_array_object/\n * @const\n * @type {number}\n */\nexport let VERTEX_ARRAY_BINDING_OES = 0x85B5;\n\n\n/**\n * From the WEBGL_debug_renderer_info extension.\n * http://www.khronos.org/registry/webgl/extensions/WEBGL_debug_renderer_info/\n * @const\n * @type {number}\n */\nexport let UNMASKED_VENDOR_WEBGL = 0x9245;\n\n\n/**\n * From the WEBGL_debug_renderer_info extension.\n * http://www.khronos.org/registry/webgl/extensions/WEBGL_debug_renderer_info/\n * @const\n * @type {number}\n */\nexport let UNMASKED_RENDERER_WEBGL = 0x9246;\n\n\n/**\n * From the WEBGL_compressed_texture_s3tc extension.\n * http://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\n * @const\n * @type {number}\n */\nexport let COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0;\n\n\n/**\n * From the WEBGL_compressed_texture_s3tc extension.\n * http://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\n * @const\n * @type {number}\n */\nexport let COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1;\n\n\n/**\n * From the WEBGL_compressed_texture_s3tc extension.\n * http://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\n * @const\n * @type {number}\n */\nexport let COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2;\n\n\n/**\n * From the WEBGL_compressed_texture_s3tc extension.\n * http://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\n * @const\n * @type {number}\n */\nexport let COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3;\n\n\n/**\n * From the EXT_texture_filter_anisotropic extension.\n * http://www.khronos.org/registry/webgl/extensions/EXT_texture_filter_anisotropic/\n * @const\n * @type {number}\n */\nexport let TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE;\n\n\n/**\n * From the EXT_texture_filter_anisotropic extension.\n * http://www.khronos.org/registry/webgl/extensions/EXT_texture_filter_anisotropic/\n * @const\n * @type {number}\n */\nexport let MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF;\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/WebGL/WebGL.js\n **/","import {BlendMode} from '../BlendMode.js';\nimport {Color} from '../Color.js';\nimport {Drawable} from './Drawable.js';\nimport {SpriteCommand} from '../Renderers/Commands/SpriteCommand.js';\n\n/**\n * A sprite\n *\n * @description Draw 2D textured element efficiently.\n * @extends {Drawable}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Sprite extends Drawable\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        super();\n\n        /**\n         * Blend mode\n         *\n         * @type {BlendMode}\n         * @private\n         */\n        this.blendMode = new BlendMode(BlendMode.Mode.Alpha);\n\n        /**\n         * Color\n         *\n         * @type {Color}\n         * @private\n         */\n        this.color = new Color(255, 255, 255, 255);\n\n        /**\n         * Texture's area to show.\n         * - Two first values represents x and y offset\n         * - Two last values represents width and height (relative to offset)\n         *\n         * @type {Array.<number>}\n         * @private\n         */\n        this.rect = [0.0, 0.0, 0.0, 0.0];\n\n        /**\n         * Size\n         *\n         * @type {Array.<number>}\n         * @private\n         */\n        this.size = [0.5, 0.5];\n\n        /**\n         * Program\n         *\n         * @type {Program}\n         * @private\n         */\n        this.customProgram = null;\n\n        /**\n         * Texture\n         *\n         * @type {TextureInterface}\n         * @private\n         */\n        this.texture = null;\n    }\n\n    /**\n     * Set blend mode to use\n     *\n     * @param {BlendMode} blendMode A BlendMode instance\n     */\n    setBlendMode(blendMode)\n    {\n        this.blendMode = blendMode;\n    }\n\n    /**\n     * Set program to use\n     *\n     * @param {number} r Red color in the range [0-255]\n     * @param {number} g Green color in the range [0-255]\n     * @param {number} b Blue color in the range [0-255]\n     * @param {number=} a Opacity in the range [0-255]\n     */\n    setColor(r, g, b, a)\n    {\n        this.color.set(r, g, b, a);\n    }\n\n    /**\n     * Draw the element\n     *\n     * @param {RenderTarget} renderTarget Renderer who called this method\n     */\n    draw(renderTarget)\n    {\n        if (this.texture)\n            renderTarget.getActiveTask().addCommand(new SpriteCommand(this));\n    }\n\n    /**\n     * Set program to use\n     *\n     * @param {Program} program A Program instance\n     */\n    setCustomProgram(program)\n    {\n        this.customProgram = program;\n    }\n\n    /**\n     * Set sprite's size\n     *\n     * @param {number} x Size on X\n     * @param {number} y Size on Y\n     */\n    setSize(x, y)\n    {\n        this.size[0] = x;\n        this.size[1] = y;\n    }\n\n    /**\n     * Set texture to use\n     *\n     * @param {TextureInterface} texture Can be a Texture or a TextureVideo\n     */\n    setTexture(texture)\n    {\n        this.texture = texture;\n    }\n\n    /**\n     * Set texture's area to show\n     *\n     * @param {number} x Start position on x\n     * @param {number} y Start position on y\n     * @param {number} w Area's width\n     * @param {number} h Area's height\n     */\n    setTextureRect(x, y, w, h)\n    {\n        this.rect = [x, y, w, h];\n    }\n\n    /**\n     * Get sprite's blend mode\n     *\n     * @return {BlendMode} A BlendMode instance\n     */\n    getBlendMode()\n    {\n        return this.blendMode;\n    }\n\n    /**\n     * Get sprite's color\n     *\n     * @return {Color} A Color instance\n     */\n    getColor()\n    {\n        return this.color;\n    }\n\n    /**\n     * Get program\n     *\n     * @return {?Program} A Program instance or null if the sprite use the default program\n     */\n    getCustomProgram()\n    {\n        return this.customProgram;\n    }\n\n    /**\n     * Get size\n     *\n     * @return {Array.<number>} An array with index 0 for size on X and index 1 for size on y\n     */\n    getSize()\n    {\n        return this.size;\n    }\n\n    /**\n     * Get texture\n     *\n     * @return {TextureInterface} A texture\n     */\n    getTexture ()\n    {\n        return this.texture;\n    }\n\n    /**\n     * Get texture's area to show\n     *\n     * @return {Array.<number>} An array representing area to show (x, y, w, h)\n     */\n    getTextureRect()\n    {\n        return this.rect;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Objects/Sprite.js\n **/","import {DepthFunction, DrawingMode} from '../../StateBlock.js';\nimport {Geometry} from '../../Geometry.js';\nimport {Program} from '../../Program.js';\nimport {RenderCommand} from './RenderCommand.js';\nimport {TextureVideo} from '../../Textures/TextureVideo.js';\nimport {Type} from '../../Types.js';\n\n/**\n * Draw sprites\n *\n * @extends {RenderCommand}\n */\nexport class SpriteCommand extends RenderCommand\n{\n    /**\n     * Constructor\n     *\n     * @param {Sprite} sprite A Sprite instance\n     */\n    constructor(sprite)\n    {\n        super();\n\n        /**\n         * The Sprite instance to draw\n         *\n         * @type {Sprite}\n         * @private\n         */\n        this.sprite = sprite;\n    }\n\n    /**\n     * Execute the command\n     *\n     * @param {RenderAPI} renderAPI RenderAPI instance used to process the commands\n     */\n    execute(renderAPI) \n    {\n        SpriteCommand.draw(renderAPI, this.sprite);\n    }\n\n    /**\n     * Draw the given sprite\n     *\n     * @param {RenderAPI} renderAPI RenderAPI instance used to process the commands\n     * @param {Sprite} sprite Sprite instance to draw\n     */\n    static draw(renderAPI, sprite) \n    {\n        let spriteTexture = sprite.getTexture();\n        if (!spriteTexture.isReady())\n            return;\n\n        // Use custom or default program\n        let program = sprite.getCustomProgram();\n        if (!program)\n        {\n            if (SpriteCommand.isDefaultProgramLoaded())\n                program = SpriteCommand.sharedProgram;\n            else\n                return;\n        }\n\n        // Program.\n        let programCode = renderAPI.setProgram(program);\n        if (programCode === -1)\n            return;\n\n        let spriteRect = sprite.getTextureRect();\n        let spriteSize = sprite.getSize();\n\n        // Must send/update shared uniforms\n        if (programCode === 1)\n            renderAPI.setUniform(program, 'uCamera', Type.Matrix, renderAPI.getActiveCamera().getViewProjectionMatrix());\n\n        // Send uniforms\n        renderAPI.setUniform(program, 'uModel', Type.Matrix, sprite.getTransformationMatrix());\n\n        // States and apparence\n        renderAPI.setBlendMode(sprite.getBlendMode());\n        renderAPI.setDepthState(true, true, DepthFunction.Less);\n        renderAPI.bindTexture(0, spriteTexture);\n\n        // Set visible area\n        let uvs = null;\n        if (spriteTexture instanceof TextureVideo)\n            uvs = new Float32Array([0, 1, 0, 0, 1, 1, 1, 0]);\n        else \n        {\n            let textureSize = spriteTexture.getImage().getSize();\n                \n            let x1 = spriteRect[0] / textureSize[0];\n            let y1 = (spriteRect[1] + spriteRect[3]) / textureSize[1];\n            let x2 = (spriteRect[0] + spriteRect[2]) / textureSize[0];\n            let y2 = spriteRect[1] / textureSize[1];\n\n            if (spriteRect[2] === 0 && spriteRect[3] === 0)\n                x2 = y2 = 1.0;\n\n            uvs = new Float32Array([x1, y2, x1, y1, x2, y2, x2, y1]);\n        }\n        SpriteCommand.sharedGeometry.setTextureUVs(uvs);\n\n        // Set color\n        let spriteColor = sprite.getColor();\n        let colors = new Float32Array([      \n            spriteColor.r, spriteColor.g, spriteColor.b, spriteColor.a, \n            spriteColor.r, spriteColor.g, spriteColor.b, spriteColor.a, \n            spriteColor.r, spriteColor.g, spriteColor.b, spriteColor.a, \n            spriteColor.r, spriteColor.g, spriteColor.b, spriteColor.a\n        ]);\n        SpriteCommand.sharedGeometry.setColors(colors);\n\n        // Set positions\n        let positions = new Float32Array([      \n            -spriteSize[0], -spriteSize[1],  0,\n            -spriteSize[0],  spriteSize[1],  0,\n             spriteSize[0], -spriteSize[1],  0,\n             spriteSize[0],  spriteSize[1],  0\n        ]);\n        SpriteCommand.sharedGeometry.setPositions(positions);\n\n        // Bind geometry\n        renderAPI.setGeometry(SpriteCommand.sharedGeometry);\n\n        // Draw object\n        renderAPI.drawIndexedPrimitives(DrawingMode.TrianglesStrip, 0, 4); \n    }\n\n    /**\n     * Check if the default program is ready, otherwise the function load it\n     *\n     * @return {boolean} Return true if the default program is loaded\n     */\n    static isDefaultProgramLoaded() \n    {\n        // Everything is ok?\n        if (SpriteCommand.sharedProgram.isReady())\n            return true;\n\n        let vertexShader =  'uniform mat4 uCamera;' +\n                            'uniform mat4 uModel;' +\n                            'attribute vec4 aPosition;' +\n                            'attribute vec4 aColor;' +\n                            'attribute vec2 aTexCoord;' +\n                            'varying vec4 vColor;' +\n                            'varying vec2 vUV;' +\n                            'void main() {' +\n                                'gl_Position = (uCamera * uModel) * aPosition;' +\n                                'vColor      = aColor;' +\n                                'vUV         = aTexCoord;' +\n                            '}';\n\n        let fragmentShader =    'uniform lowp sampler2D texture;' +\n                                'varying lowp vec4 vColor;' +\n                                'varying mediump vec2 vUV;' +\n                                'void main() {' +\n                                    'gl_FragColor = texture2D(texture, vUV) * vColor;' +\n                                '}';\n\n        SpriteCommand.sharedProgram.loadFromData(vertexShader, fragmentShader);\n\n        return false;\n    }\n}\n\n/**\n * Default geometry for sprite rendering\n *\n * @type {Geometry}\n * @private\n */\nSpriteCommand.sharedGeometry = Geometry.createRectangle(0.5, 0.5);\n\n/**\n * Default program for sprite rendering\n *\n * @type {Program}\n * @private\n */\nSpriteCommand.sharedProgram = new Program();\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/Commands/SpriteCommand.js\n **/","import {Context} from '../Context.js';\nimport {RenderTarget} from './RenderTarget.js';\nimport {WebGL} from './WebGL/RenderWebGL.js';\n\n/**\n * A rendering canvas\n *\n * @extends {RenderTarget}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class RenderCanvas extends RenderTarget\n{\n    /**\n     * Constructor\n     *\n     * @param {string} canvas Id of the container\n     * @param {{antialiasing: boolean, width: (number|undefined), height: (number|undefined)}} options Options\n     * @param {string=} type A string with the value \"webgl\" or \"canvas\"\n     */\n    constructor(canvas, options = {}, type = 'webgl')\n    {\n        super();\n\n        /**\n         * The render API to use: For now we support WebGL 1.0.3 only\n         *\n         * @type {RenderAPI}\n         * @protected\n         */\n        this.renderApi = WebGL.getInstance();\n\n        // Init the context\n        this.context.init(Context.Type.WebGL, options, canvas);\n    }\n\n    /**\n     * Clear the canvas\n     *\n     * @param {Color} color A Color instance\n     */\n    clear(color) \n    {\n        // Remove previous tasks\n        this.removeTasks();\n\n        // Activate context\n        this.context.activate();\n\n        // Clear screen\n        this.renderApi.clear(color);\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/RenderCanvas.js\n **/","import {Node} from './Node.js';\n\n/**\n * A scene\n *\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Scene\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        /**\n         * Root node\n         *\n         * @type {Node}\n         * @private\n         */\n        this.root = new Node('root');\n    }\n\n    /**\n     * Add a node element to the scene\n     *\n     * @param {Node} node A Node instance\n     */\n    add(node)\n    {\n        this.root.addChild(node);\n    }\n\n    /**\n     * Find the node with the given name\n     *\n     * @param {string} name A string\n     * @return {?Node} A Node instance of null\n     */\n    find(name)\n    {\n        return this.root.findChild(name);\n    }\n\n    /**\n     * Remove a node element from the scene\n     *\n     * @param {Node} node A Node instance\n     * @return {boolean} True if the operation is a success\n     */\n    remove(node)\n    {\n        return this.root.removeChild(node);\n    }\n\n    /**\n     * Update the graph\n     *\n     * @param {number} deltaTime A floating value representing time elapsed between two frames\n     */\n    update(deltaTime)\n    {\n        // Recursive function to roam the graph\n        function update(node, deltaTime, parentUpdated)\n        {\n            // Update node\n            let updated = node.update(deltaTime, parentUpdated);\n\n            // Update his children\n            let children = node.getChildren();\n            for (let i = 0; i < children.length; i++)\n                update(children[i], deltaTime, (updated || parentUpdated));\n        }\n\n        // Start the recursive method\n        update(this.root, deltaTime, false);\n    }\n\n    /**\n     * Visit the graph\n     *\n     * @param {RenderTarget} renderTarget Renderer who called this method\n     */\n    visit(renderTarget)\n    {\n        // Recursive function to roam the graph\n        function visit(node, target)\n        {\n            // Visit node\n            node.visit(target);\n\n            // Visit his children\n            let children = node.getChildren();\n            for (let i = 0; i < children.length; i++)\n                visit(children[i], target);\n        }\n\n        // Start the recursive method\n        visit(this.root, renderTarget);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Scene/Scene.js\n **/","import {Drawable} from './Drawable.js';\nimport {SkyboxCommand} from '../Renderers/Commands/SkyboxCommand.js';\n\n/**\n * A Skybox\n *\n * @extends {Drawable}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class Skybox extends Drawable\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        super();\n\n        /**\n         * Program\n         *\n         * @type {Program}\n         * @private\n         */\n        this.customProgram = null;\n\n        /**\n         * Texture cube linked\n         *\n         * @type {TextureCube}\n         * @private\n         */\n        this.texture = null;\n    }\n\n    /**\n     * Draw the element\n     *\n     * @param {RenderTarget} renderTarget Renderer who called this method\n     */\n    draw(renderTarget)\n    {\n        if (this.texture)\n            renderTarget.getActiveTask().addCommand(new SkyboxCommand(this));\n    }\n\n    /**\n     * Set program to use\n     *\n     * @param {Program} program A Program instance.\n     */\n    setCustomProgram(program)\n    {\n        this.customProgram = program;\n    }\n\n    /**\n     * Set texture\n     *\n     * @param {TextureCube} texture A TextureCube instance\n     */\n    setTexture(texture)\n    {\n        this.texture = texture;\n    }\n\n    /**\n     * Get program\n     *\n     * @return {?Program} A Program instance or null if the Skybox use the default program\n     */\n    getCustomProgram()\n    {\n        return this.customProgram;\n    }\n\n    /**\n     * Get the linked TextureCube instance\n     *\n     * @return {TextureCube} A TextureCube instances\n     */\n    getTexture()\n    {\n        return this.texture;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Objects/Skybox.js\n **/","import {DepthFunction, DrawingMode} from '../../StateBlock.js';\nimport {Geometry} from '../../Geometry.js';\nimport {Program} from '../../Program.js';\nimport {RenderCommand} from './RenderCommand.js';\nimport {TextureCube} from '../../Textures/TextureCube.js';\nimport {Type} from '../../Types.js';\nlet glMatrix = require('gl-matrix');\n\n/**\n * Draw Skyboxes\n *\n * @extends {RenderCommand}\n */\nexport class SkyboxCommand extends RenderCommand\n{\n    /**\n     * Constructor\n     *\n     * @param {Skybox} skybox A Skybox instance\n     */\n    constructor(skybox)\n    {\n        super();\n\n        /**\n         * The Skybox instance to draw\n         *\n         * @type {Skybox}\n         * @private\n         */\n        this.skybox = skybox;\n    }\n\n    /**\n     * Execute the command\n     *\n     * @param {RenderAPI} renderAPI RenderAPI instance used to process the commands\n     */\n    execute(renderAPI) \n    {\n        let texture = this.skybox.getTexture();\n        if (!texture || !texture.isReady())\n            return;\n\n        // Use custom or default program.\n        let program = this.skybox.getCustomProgram();\n        if (!program)\n        {\n            if (SkyboxCommand.isDefaultProgramLoaded())\n                program = SkyboxCommand.sharedProgram;\n            else\n                return;\n        }\n\n        // Program\n        let programCode = renderAPI.setProgram(program);\n        if (programCode == -1)\n            return;\n\n        // Must send/update shared uniforms\n        if (programCode == 1)\n        {\n            renderAPI.setUniform(program, 'projection', Type.Matrix, renderAPI.getActiveCamera().getProjectionMatrix());\n\n            // Tip: Remove last row and col from the matrix to get an infinite Skybox\n            let viewMatrix = renderAPI.getActiveCamera().getViewMatrix();\n            let m = glMatrix.mat3.fromMat4([], viewMatrix);\n\n            function toMat4(mat)\n            {\n                let result = glMatrix.mat4.create();\n                result[15] = 1; result[14] = 0; result[13] = 0; result[12] = 0;\n                result[11] = 0; result[10] = mat[8]; result[9] = mat[7]; result[8] = mat[6];\n                result[7] = 0; result[6] = mat[5]; result[5] = mat[4]; result[4] = mat[3];\n                result[3] = 0; result[2] = mat[2]; result[1] = mat[1]; result[0] = mat[0];\n\n                return result;\n            }\n\n            renderAPI.setUniform(program, 'view', Type.Matrix, toMat4(m));\n        }\n\n        // Send uniforms\n        renderAPI.setUniform(program, 'uModel', Type.Matrix, this.skybox.getTransformationMatrix());\n\n        // States and apparence\n        renderAPI.setDepthState(false, false, DepthFunction.Less);\n        renderAPI.bindTextureCube(0, texture);\n\n        // Bind geometry\n        renderAPI.setGeometry(SkyboxCommand.sharedGeometry);\n\n        // Draw object\n        renderAPI.drawIndexedPrimitives(DrawingMode.Triangles, 0, SkyboxCommand.sharedGeometry.getIndexCount());\n    }\n\n    /**\n     * Check if the default program is ready, otherwise the function load it\n     *\n     * @return {boolean} Return true if the default program is loaded\n     */\n    static isDefaultProgramLoaded() \n    {\n        if (SkyboxCommand.sharedProgram.isReady())\n            return true;\n\n        let vertexShader =  'uniform mat4 projection;' +\n                            'uniform mat4 view;' +\n                            'uniform mat4 uModel;' +\n                            'attribute vec4 aPosition;' +\n                            'attribute vec4 aColor;' +\n                            'varying vec4 vColor;' +\n                            'varying vec4 vUV;' +\n                            'void main() {' +\n                                'gl_Position = projection * view * aPosition;'+\n                                'vColor      = aColor;'+\n                                'vUV         = aPosition;' +\n                            '}';\n\n        let fragmentShader =    'uniform lowp samplerCube skybox;' +\n                                'varying lowp vec4 vColor;' +\n                                'varying mediump vec4 vUV;' +\n                                'void main() {'+\n                                    'gl_FragColor = textureCube(skybox, vUV.xyz) * vColor;' +\n                                '}';\n\n        SkyboxCommand.sharedProgram.loadFromData(vertexShader, fragmentShader);\n\n        return false;\n    }\n}\n\n/**\n * Default geometry for skybox rendering\n *\n * @type {Geometry}\n * @private\n */\nSkyboxCommand.sharedGeometry = Geometry.createCube(0.5, 0.5, 0.5);\n\n/**\n * Default program for skybox rendering\n *\n * @type {Program}\n * @private\n */\nSkyboxCommand.sharedProgram = new Program();\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Renderers/Commands/SkyboxCommand.js\n **/","import {Light} from './Light.js';\n\n/**\n * A spotlight\n *\n * @extends {Light}\n * @author Donovan ORHAN <dono.orhan@gmail.com>\n */\nexport class SpotLight extends Light\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        super();\n\n        /**\n         * Constant\n         *\n         * @type {number}\n         * @private\n         */\n        this.constant = 1.0;\n\n        /**\n         * Cutoff angle\n         *\n         * @type {number}\n         * @private\n         */\n        this.cutoff = 12.5;\n\n        /**\n         * Light's direction\n         *\n         * @type {Array.<number>}\n         * @private\n         */\n        this.direction = [];\n\n        /**\n         * Linear value\n         *\n         * @type {number}\n         * @private\n         */\n        this.linear = 0.09;\n\n        /**\n         * Quadratic value\n         *\n         * @type {number}\n         * @private\n         */\n        this.quadratic = 0.032;\n    }\n\n    /**\n     * Set direction\n     *\n     * @param {number} x Direction on X\n     * @param {number} y Direction on Y\n     * @param {number} z Direction on Z\n     */\n    setDirection(x, y, z) \n    {\n        this.direction = [x, y, z]; \n    }\n\n    /**\n     * Set cut off\n     *\n     * @param {number} value The cutoff value\n     */\n    setCutoff(value) \n    {\n        this.cutoff = value;\n    }\n\n    /**\n     * Set point light's values\n     *\n     * @param {number} constant The constant value\n     * @param {number} linear The linear value\n     * @param {number} quadratic The quadratic value\n     */\n    setValues(constant, linear, quadratic) \n    {\n        this.constant   = constant;\n        this.linear     = linear;\n        this.quadratic  = quadratic;\n    }\n\n    /**\n     * Get direction\n     *\n     * @return {Array.<number>} A vector with values for each axis\n     */\n    getDirection() \n    {\n        return this.direction; \n    }\n\n    /**\n     * Get values\n     *\n     * @return {Array.<number>} An array with constant, linear and quadratic values\n     */\n    getValues() \n    {\n        return [this.constant, this.linear, this.quadratic];\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Lights/SpotLight.js\n **/"],"sourceRoot":""}