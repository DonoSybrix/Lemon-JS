uniform lowp sampler2D texture;
uniform mediump float time;

varying lowp vec4 vColor;
varying mediump vec2 vUV;

mediump float rng2(mediump vec2 seed)
{
    return fract(sin(dot(seed * floor(time * 12.0), vec2(127.1,311.7))) * 43758.5453123);
}

mediump float rng(mediump float seed)
{
    return rng2(vec2(seed, 1.0));
}

void main ()
{
    mediump vec2 blockS = floor(vUV * vec2(24.0, 9.0));
    mediump vec2 blockL = floor(vUV * vec2(8.0, 4.0));

    mediump float r = rng2(vUV);
    mediump vec3 noise = (vec3(r, 1.0 - r, r / 2.0 + 0.5) * 1.0 - 2.0) * 0.08;

    mediump float lineNoise = pow(rng2(blockS), 8.0) * pow(rng2(blockL), 3.0) - pow(rng(7.2341), 17.0) * 2.0;

    mediump vec4 col1 = texture2D(texture, vUV);
    mediump vec4 col2 = texture2D(texture, vUV + vec2(lineNoise * 0.05 * rng(5.0), 0.0));
    mediump vec4 col3 = texture2D(texture, vUV - vec2(lineNoise * 0.05 * rng(1.0), 0.0));

    gl_FragColor = vec4(vec3(col1.x, col2.y, col3.z) + noise, 1.0);
}